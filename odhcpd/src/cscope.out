cscope 15 $HOME/123/openwrt/customer/packages/others/odhcpd/src -q 0000001288 0000151861
	@/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/config.c

1 
	~<f˙é.h
>

2 
	~<ªsﬁv.h
>

3 
	~<sig«l.h
>

4 
	~<¨∑/öë.h
>

5 
	~<uni°d.h
>

7 
	~<uci.h
>

8 
	~<uci_blob.h
>

10 
	~"odh˝d.h
"

12 
blob_buf
 
	gb
;

13 
	gªlﬂd_pùe
[2];

14 
li°_hód
 
	gÀa£s
 = 
LIST_HEAD_INIT
(
Àa£s
);

15 
li°_hód
 
	göãrÁ˚s
 = 
LIST_HEAD_INIT
(
öãrÁ˚s
);

16 
c⁄fig
 
	gc⁄fig
 = {
Ál£
, 
NULL
, NULL};

19 
	mIFACE_ATTR_INTERFACE
,

20 
	mIFACE_ATTR_IFNAME
,

21 
	mIFACE_ATTR_NETWORKID
,

22 
	mIFACE_ATTR_DYNAMICDHCP
,

23 
	mIFACE_ATTR_IGNORE
,

24 
	mIFACE_ATTR_LEASETIME
,

25 
	mIFACE_ATTR_LIMIT
,

26 
	mIFACE_ATTR_START
,

27 
	mIFACE_ATTR_MASTER
,

28 
	mIFACE_ATTR_UPSTREAM
,

29 
	mIFACE_ATTR_RA
,

30 
	mIFACE_ATTR_DHCPV4
,

31 
	mIFACE_ATTR_DHCPV6
,

32 
	mIFACE_ATTR_NDP
,

33 
	mIFACE_ATTR_ROUTER
,

34 
	mIFACE_ATTR_DNS
,

35 
	mIFACE_ATTR_DOMAIN
,

36 
	mIFACE_ATTR_FILTER_CLASS
,

37 
	mIFACE_ATTR_DHCPV6_RAW
,

38 
	mIFACE_ATTR_RA_DEFAULT
,

39 
	mIFACE_ATTR_RA_MANAGEMENT
,

40 
	mIFACE_ATTR_RA_OFFLINK
,

41 
	mIFACE_ATTR_RA_PREFERENCE
,

42 
	mIFACE_ATTR_PD_MANAGER
,

43 
	mIFACE_ATTR_PD_CER
,

44 
	mIFACE_ATTR_NDPROXY_ROUTING
,

45 
	mIFACE_ATTR_NDPROXY_SLAVE
,

46 
	mIFACE_ATTR_NDPROXY_STATIC
,

47 
	mIFACE_ATTR_MAX


50 c⁄° 
blobmsg_pﬁicy
 
	giÁ˚_©ås
[
IFACE_ATTR_MAX
] = {

51 [
IFACE_ATTR_INTERFACE
] = { .
«me
 = "öãrÁ˚", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

52 [
IFACE_ATTR_IFNAME
] = { .
«me
 = "i‚ame", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

53 [
IFACE_ATTR_NETWORKID
] = { .
«me
 = "√tw‹kid", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

54 [
IFACE_ATTR_DYNAMICDHCP
] = { .
«me
 = "dy«micdh˝", .
	gty≥
 = 
BLOBMSG_TYPE_BOOL
 },

55 [
IFACE_ATTR_IGNORE
] = { .
«me
 = "ign‹e", .
	gty≥
 = 
BLOBMSG_TYPE_BOOL
 },

56 [
IFACE_ATTR_LEASETIME
] = { .
«me
 = "Àa£time", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

57 [
IFACE_ATTR_START
] = { .
«me
 = "°¨t", .
	gty≥
 = 
BLOBMSG_TYPE_INT32
 },

58 [
IFACE_ATTR_LIMIT
] = { .
«me
 = "limô", .
	gty≥
 = 
BLOBMSG_TYPE_INT32
 },

59 [
IFACE_ATTR_MASTER
] = { .
«me
 = "ma°î", .
	gty≥
 = 
BLOBMSG_TYPE_BOOL
 },

60 [
IFACE_ATTR_UPSTREAM
] = { .
«me
 = "up°ªam", .
	gty≥
 = 
BLOBMSG_TYPE_ARRAY
 },

61 [
IFACE_ATTR_RA
] = { .
«me
 = "ø", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

62 [
IFACE_ATTR_DHCPV4
] = { .
«me
 = "dh˝v4", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

63 [
IFACE_ATTR_DHCPV6
] = { .
«me
 = "dh˝v6", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

64 [
IFACE_ATTR_NDP
] = { .
«me
 = "ndp", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

65 [
IFACE_ATTR_ROUTER
] = { .
«me
 = "rouãr", .
	gty≥
 = 
BLOBMSG_TYPE_ARRAY
 },

66 [
IFACE_ATTR_DNS
] = { .
«me
 = "dns", .
	gty≥
 = 
BLOBMSG_TYPE_ARRAY
 },

67 [
IFACE_ATTR_DOMAIN
] = { .
«me
 = "domaö", .
	gty≥
 = 
BLOBMSG_TYPE_ARRAY
 },

68 [
IFACE_ATTR_FILTER_CLASS
] = { .
«me
 = "fûãr_˛ass", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

69 [
IFACE_ATTR_DHCPV6_RAW
] = { .
«me
 = "dh˝v6_øw", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

70 [
IFACE_ATTR_PD_MANAGER
] = { .
«me
 = "pd_m™agî", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

71 [
IFACE_ATTR_PD_CER
] = { .
«me
 = "pd_˚r", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

72 [
IFACE_ATTR_RA_DEFAULT
] = { .
«me
 = "ø_deÁu…", .
	gty≥
 = 
BLOBMSG_TYPE_INT32
 },

73 [
IFACE_ATTR_RA_MANAGEMENT
] = { .
«me
 = "ø_m™agemít", .
	gty≥
 = 
BLOBMSG_TYPE_INT32
 },

74 [
IFACE_ATTR_RA_OFFLINK
] = { .
«me
 = "ø_ofÊök", .
	gty≥
 = 
BLOBMSG_TYPE_BOOL
 },

75 [
IFACE_ATTR_RA_PREFERENCE
] = { .
«me
 = "ø_¥e„ªn˚", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

76 [
IFACE_ATTR_NDPROXY_ROUTING
] = { .
«me
 = "nd¥oxy_routög", .
	gty≥
 = 
BLOBMSG_TYPE_BOOL
 },

77 [
IFACE_ATTR_NDPROXY_SLAVE
] = { .
«me
 = "nd¥oxy_¶ave", .
	gty≥
 = 
BLOBMSG_TYPE_BOOL
 },

78 [
IFACE_ATTR_NDPROXY_STATIC
] = { .
«me
 = "nd¥oxy_°©ic", .
	gty≥
 = 
BLOBMSG_TYPE_ARRAY
 },

81 c⁄° 
uci_blob_∑øm_öfo
 
	giÁ˚_©å_öfo
[
IFACE_ATTR_MAX
] = {

82 [
IFACE_ATTR_UPSTREAM
] = { .
ty≥
 = 
BLOBMSG_TYPE_STRING
 },

83 [
IFACE_ATTR_DNS
] = { .
ty≥
 = 
BLOBMSG_TYPE_STRING
 },

84 [
IFACE_ATTR_DOMAIN
] = { .
ty≥
 = 
BLOBMSG_TYPE_STRING
 },

85 [
IFACE_ATTR_NDPROXY_STATIC
] = { .
ty≥
 = 
BLOBMSG_TYPE_STRING
 },

88 c⁄° 
uci_blob_∑øm_li°
 
	göãrÁ˚_©å_li°
 = {

89 .
n_∑øms
 = 
IFACE_ATTR_MAX
,

90 .
	g∑øms
 = 
iÁ˚_©ås
,

91 .
	göfo
 = 
iÁ˚_©å_öfo
,

96 
	mLEASE_ATTR_IP
,

97 
	mLEASE_ATTR_MAC
,

98 
	mLEASE_ATTR_DUID
,

99 
	mLEASE_ATTR_HOSTID
,

100 
	mLEASE_ATTR_NAME
,

101 
	mLEASE_ATTR_MAX


105 c⁄° 
blobmsg_pﬁicy
 
	gÀa£_©ås
[
LEASE_ATTR_MAX
] = {

106 [
LEASE_ATTR_IP
] = { .
«me
 = "ù", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

107 [
LEASE_ATTR_MAC
] = { .
«me
 = "mac", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

108 [
LEASE_ATTR_DUID
] = { .
«me
 = "duid", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

109 [
LEASE_ATTR_HOSTID
] = { .
«me
 = "ho°id", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

110 [
LEASE_ATTR_NAME
] = { .
«me
 = "«me", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

114 c⁄° 
uci_blob_∑øm_li°
 
	gÀa£_©å_li°
 = {

115 .
n_∑øms
 = 
LEASE_ATTR_MAX
,

116 .
	g∑øms
 = 
Àa£_©ås
,

121 
	mODHCPD_ATTR_MAINDHCP
,

122 
	mODHCPD_ATTR_LEASEFILE
,

123 
	mODHCPD_ATTR_LEASETRIGGER
,

124 
	mODHCPD_ATTR_MAX


128 c⁄° 
blobmsg_pﬁicy
 
	godh˝d_©ås
[
LEASE_ATTR_MAX
] = {

129 [
ODHCPD_ATTR_MAINDHCP
] = { .
«me
 = "maödh˝", .
	gty≥
 = 
BLOBMSG_TYPE_BOOL
 },

130 [
ODHCPD_ATTR_LEASEFILE
] = { .
«me
 = "Àa£fûe", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

131 [
ODHCPD_ATTR_LEASETRIGGER
] = { .
«me
 = "Àa£åiggî", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

135 c⁄° 
uci_blob_∑øm_li°
 
	godh˝d_©å_li°
 = {

136 .
n_∑øms
 = 
ODHCPD_ATTR_MAX
,

137 .
	g∑øms
 = 
odh˝d_©ås
,

141 
öãrÁ˚
* 
	$gë_öãrÁ˚
(c⁄° *
«me
)

143 
öãrÁ˚
 *
c
;

144 
	`li°_f‹_óch_íåy
(
c
, &
öãrÁ˚s
, 
hód
)

145 i‡(!
	`°rcmp
(
c
->
«me
,Çame))

146  
c
;

147  
NULL
;

148 
	}
}

151 
	$˛ón_öãrÁ˚
(
öãrÁ˚
 *
iÁ˚
)

153 
	`‰ì
(
iÁ˚
->
dns
);

154 
	`‰ì
(
iÁ˚
->
£¨ch
);

155 
	`‰ì
(
iÁ˚
->
up°ªam
);

156 
	`‰ì
(
iÁ˚
->
°©ic_ndp
);

157 
	`‰ì
(
iÁ˚
->
dh˝v4_rouãr
);

158 
	`‰ì
(
iÁ˚
->
dh˝v4_dns
);

159 
	`‰ì
(
iÁ˚
->
dh˝v6_øw
);

160 
	`‰ì
(
iÁ˚
->
fûãr_˛ass
);

161 
	`mem£t
(&
iÁ˚
->
ø
, 0, (*iÁ˚Ë- 
	`off£tof
(
öãrÁ˚
,Ña));

162 
	}
}

165 
	$˛o£_öãrÁ˚
(
öãrÁ˚
 *
iÁ˚
)

167 i‡(
iÁ˚
->
hód
.
√xt
)

168 
	`li°_dñ
(&
iÁ˚
->
hód
);

170 
	`£tup_rouãr_öãrÁ˚
(
iÁ˚
, 
Ál£
);

171 
	`£tup_dh˝v6_öãrÁ˚
(
iÁ˚
, 
Ál£
);

172 
	`£tup_ndp_öãrÁ˚
(
iÁ˚
, 
Ál£
);

173 
	`£tup_dh˝v4_öãrÁ˚
(
iÁ˚
, 
Ál£
);

175 
	`˛ón_öãrÁ˚
(
iÁ˚
);

176 
	`‰ì
(
iÁ˚
);

177 
	}
}

180 
	$∑r£_mode
(c⁄° *
mode
)

182 i‡(!
	`°rcmp
(
mode
, "disabled")) {

183  
RELAYD_DISABLED
;

184 } i‡(!
	`°rcmp
(
mode
, "server")) {

185  
RELAYD_SERVER
;

186 } i‡(!
	`°rcmp
(
mode
, "relay")) {

187  
RELAYD_RELAY
;

188 } i‡(!
	`°rcmp
(
mode
, "hybrid")) {

189  
RELAYD_HYBRID
;

193 
	}
}

196 
	$£t_c⁄fig
(
uci_£˘i⁄
 *
s
)

198 
blob_©å
 *
tb
[
ODHCPD_ATTR_MAX
], *
c
;

200 
	`blob_buf_öô
(&
b
, 0);

201 
	`uci_to_blob
(&
b
, 
s
, &
odh˝d_©å_li°
);

202 
	`blobmsg_∑r£
(
odh˝d_©ås
, 
ODHCPD_ATTR_MAX
, 
tb
, 
	`blob_d©a
(
b
.
hód
), 
	`blob_Àn
(b.head));

204 i‡((
c
 = 
tb
[
ODHCPD_ATTR_MAINDHCP
]))

205 
c⁄fig
.
Àgacy
 = 
	`blobmsg_gë_boﬁ
(
c
);

207 i‡((
c
 = 
tb
[
ODHCPD_ATTR_LEASEFILE
])) {

208 
	`‰ì
(
c⁄fig
.
dh˝_°©efûe
);

209 
c⁄fig
.
dh˝_°©efûe
 = 
	`°rdup
(
	`blobmsg_gë_°rög
(
c
));

212 i‡((
c
 = 
tb
[
ODHCPD_ATTR_LEASETRIGGER
])) {

213 
	`‰ì
(
c⁄fig
.
dh˝_cb
);

214 
c⁄fig
.
dh˝_cb
 = 
	`°rdup
(
	`blobmsg_gë_°rög
(
c
));

216 
	}
}

219 
	$£t_Àa£
(
uci_£˘i⁄
 *
s
)

221 
blob_©å
 *
tb
[
LEASE_ATTR_MAX
], *
c
;

223 
	`blob_buf_öô
(&
b
, 0);

224 
	`uci_to_blob
(&
b
, 
s
, &
Àa£_©å_li°
);

225 
	`blobmsg_∑r£
(
Àa£_©ås
, 
LEASE_ATTR_MAX
, 
tb
, 
	`blob_d©a
(
b
.
hód
), 
	`blob_Àn
(b.head));

227 
size_t
 
ho°Àn
 = 1;

228 i‡((
c
 = 
tb
[
LEASE_ATTR_NAME
]))

229 
ho°Àn
 = 
	`blobmsg_d©a_Àn
(
c
);

231 
Àa£
 *Àa£ = 
	`ˇŒoc
(1, (*Àa£Ë+ 
ho°Àn
);

232 i‡(!
Àa£
)

233 
îr
;

235 i‡(
ho°Àn
 > 1)

236 
	`mem˝y
(
Àa£
->
ho°«me
, 
	`blobmsg_gë_°rög
(
c
), 
ho°Àn
);

238 i‡((
c
 = 
tb
[
LEASE_ATTR_IP
]))

239 i‡(
	`öë_±⁄
(
AF_INET
, 
	`blobmsg_gë_°rög
(
c
), &
Àa£
->
ùaddr
) < 0)

240 
îr
;

242 i‡((
c
 = 
tb
[
LEASE_ATTR_MAC
]))

243 i‡(!
	`ëhî_©⁄_r
(
	`blobmsg_gë_°rög
(
c
), &
Àa£
->
mac
))

244 
îr
;

246 i‡((
c
 = 
tb
[
LEASE_ATTR_DUID
])) {

247 
size_t
 
duidÀn
 = (
	`blobmsg_d©a_Àn
(
c
) - 1) / 2;

248 
Àa£
->
duid
 = 
	`mÆloc
(
duidÀn
);

249 i‡(!
Àa£
->
duid
)

250 
îr
;

252 
ssize_t
 
Àn
 = 
	`odh˝d_unhexlify
(
Àa£
->
duid
,

253 
duidÀn
, 
	`blobmsg_gë_°rög
(
c
));

255 i‡(
Àn
 < 0)

256 
îr
;

258 
Àa£
->
duid_Àn
 = 
Àn
;

261 i‡((
c
 = 
tb
[
LEASE_ATTR_HOSTID
])) {

262 
î∫o
 = 0;

263 
Àa£
->
ho°id
 = 
	`°πoul
(
	`blobmsg_gë_°rög
(
c
), 
NULL
, 16);

264 i‡(
î∫o
)

265 
îr
;

268 
	`li°_add
(&
Àa£
->
hód
, &
Àa£s
);

271 
îr
:

272 i‡(
Àa£
) {

273 
	`‰ì
(
Àa£
->
duid
);

274 
	`‰ì
(
Àa£
);

277 
	}
}

280 
	$c⁄fig_∑r£_öãrÁ˚
(*
d©a
, 
size_t
 
Àn
, c⁄° *
«me
, 
boﬁ
 
ovîwrôe
)

282 
blob_©å
 *
tb
[
IFACE_ATTR_MAX
], *
c
;

283 
	`blobmsg_∑r£
(
iÁ˚_©ås
, 
IFACE_ATTR_MAX
, 
tb
, 
d©a
, 
Àn
);

285 i‡(
tb
[
IFACE_ATTR_INTERFACE
])

286 
«me
 = 
	`blobmsg_gë_°rög
(
tb
[
IFACE_ATTR_INTERFACE
]);

288 i‡(!
«me
)

291 
öãrÁ˚
 *
iÁ˚
 = 
	`gë_öãrÁ˚
(
«me
);

292 i‡(!
iÁ˚
) {

293 
iÁ˚
 = 
	`ˇŒoc
(1, (*iface));

294 i‡(!
iÁ˚
)

297 
	`°∫˝y
(
iÁ˚
->
«me
,Çame, (iface->name) - 1);

298 
	`li°_add
(&
iÁ˚
->
hód
, &
öãrÁ˚s
);

299 
ovîwrôe
 = 
åue
;

302 c⁄° *
i‚ame
 = 
NULL
;

303 #ifde‡
WITH_UBUS


304 i‡(
ovîwrôe
 || !
iÁ˚
->
i‚ame
[0])

305 
i‚ame
 = 
	`ubus_gë_i‚ame
(
«me
);

308 i‡(
ovîwrôe
) {

309 i‡((
c
 = 
tb
[
IFACE_ATTR_IFNAME
]))

310 
i‚ame
 = 
	`blobmsg_gë_°rög
(
c
);

311 i‡((
c
 = 
tb
[
IFACE_ATTR_NETWORKID
]))

312 
i‚ame
 = 
	`blobmsg_gë_°rög
(
c
);

315 i‡(!
iÁ˚
->
i‚ame
[0] && !ifname)

318 i‡(
i‚ame
)

319 
	`°∫˝y
(
iÁ˚
->
i‚ame
, ifname, (iface->ifname) - 1);

321 i‡((
iÁ˚
->
ifödex
 = 
	`if_«mëoödex
(iÁ˚->
i‚ame
)) <= 0)

324 
iÁ˚
->
öu£
 = 
åue
;

326 i‡((
c
 = 
tb
[
IFACE_ATTR_DYNAMICDHCP
]))

327 
iÁ˚
->
no_dy«mic_dh˝
 = !
	`blobmsg_gë_boﬁ
(
c
);

329 i‡(
ovîwrôe
 && (
c
 = 
tb
[
IFACE_ATTR_IGNORE
]))

330 
iÁ˚
->
ign‹e
 = 
	`blobmsg_gë_boﬁ
(
c
);

332 i‡((
c
 = 
tb
[
IFACE_ATTR_LEASETIME
])) {

333 *
vÆ
 = 
	`blobmsg_gë_°rög
(
c
), *
íd±r
;

334 
time
 = 
	`°πod
(
vÆ
, &
íd±r
);

335 i‡(
time
 && 
íd±r
[0]) {

336 i‡(
íd±r
[0] == 's')

337 
time
 *= 1;

338 i‡(
íd±r
[0] == 'm')

339 
time
 *= 60;

340 i‡(
íd±r
[0] == 'h')

341 
time
 *= 3600;

342 i‡(
íd±r
[0] == 'd')

343 
time
 *= 24 * 3600;

344 i‡(
íd±r
[0] == 'w')

345 
time
 *= 7 * 24 * 3600;

347 
îr
;

350 i‡(
time
 >= 60)

351 
iÁ˚
->
dh˝v4_Àa£time
 = 
time
;

354 i‡((
c
 = 
tb
[
IFACE_ATTR_START
])) {

355 
iÁ˚
->
dh˝v4_°¨t
.
s_addr
 = 
	`ht⁄l
(
	`blobmsg_gë_u32
(
c
));

357 i‡(
c⁄fig
.
Àgacy
)

358 
iÁ˚
->
dh˝v4
 = 
RELAYD_SERVER
;

362 i‡((
c
 = 
tb
[
IFACE_ATTR_LIMIT
]))

363 
iÁ˚
->
dh˝v4_íd
.
s_addr
 = 
	`ht⁄l
(

364 
	`¡ohl
(
iÁ˚
->
dh˝v4_°¨t
.
s_addr
Ë+ 
	`blobmsg_gë_u32
(
c
));

366 i‡((
c
 = 
tb
[
IFACE_ATTR_MASTER
]))

367 
iÁ˚
->
ma°î
 = 
	`blobmsg_gë_boﬁ
(
c
);

369 i‡(
ovîwrôe
 && (
c
 = 
tb
[
IFACE_ATTR_UPSTREAM
])) {

370 
blob_©å
 *
cur
;

371 
ªm
;

373 
	`blobmsg_f‹_óch_©å
(
cur
, 
c
, 
ªm
) {

374 i‡(
	`blobmsg_ty≥
(
cur
Ë!
BLOBMSG_TYPE_STRING
 || !
	`blobmsg_check_©å
(cur, 
NULL
))

377 
iÁ˚
->
up°ªam
 = 
	`ªÆloc
(iface->upstream,

378 
iÁ˚
->
up°ªam_Àn
 + 
	`blobmsg_d©a_Àn
(
cur
));

379 i‡(!
iÁ˚
->
up°ªam
)

380 
îr
;

382 
	`mem˝y
(
iÁ˚
->
up°ªam
 + iÁ˚->
up°ªam_Àn
, 
	`blobmsg_gë_°rög
(
cur
), 
	`blobmsg_d©a_Àn
(cur));

383 
iÁ˚
->
up°ªam_Àn
 +
	`blobmsg_d©a_Àn
(
cur
);

387 
mode
;

388 i‡((
c
 = 
tb
[
IFACE_ATTR_RA
])) {

389 i‡((
mode
 = 
	`∑r£_mode
(
	`blobmsg_gë_°rög
(
c
))) >= 0)

390 
iÁ˚
->
ø
 = 
mode
;

392 
îr
;

395 i‡((
c
 = 
tb
[
IFACE_ATTR_DHCPV4
])) {

396 i‡((
mode
 = 
	`∑r£_mode
(
	`blobmsg_gë_°rög
(
c
))) >= 0)

397 
iÁ˚
->
dh˝v4
 = 
mode
;

399 
îr
;

402 i‡((
c
 = 
tb
[
IFACE_ATTR_DHCPV6
])) {

403 i‡((
mode
 = 
	`∑r£_mode
(
	`blobmsg_gë_°rög
(
c
))) >= 0)

404 
iÁ˚
->
dh˝v6
 = 
mode
;

406 
îr
;

409 i‡((
c
 = 
tb
[
IFACE_ATTR_NDP
])) {

410 i‡((
mode
 = 
	`∑r£_mode
(
	`blobmsg_gë_°rög
(
c
))) >= 0)

411 
iÁ˚
->
ndp
 = 
mode
;

413 
îr
;

416 i‡((
c
 = 
tb
[
IFACE_ATTR_ROUTER
])) {

417 
blob_©å
 *
cur
;

418 
ªm
;

420 
	`blobmsg_f‹_óch_©å
(
cur
, 
c
, 
ªm
) {

421 i‡(
	`blobmsg_ty≥
(
cur
Ë!
BLOBMSG_TYPE_STRING
 || !
	`blobmsg_check_©å
(cur, 
NULL
))

424 
ö_addr
 
addr4
;

425 i‡(
	`öë_±⁄
(
AF_INET
, 
	`blobmsg_gë_°rög
(
cur
), &
addr4
) == 1) {

426 
iÁ˚
->
dh˝v4_rouãr
 = 
	`ªÆloc
(iface->dhcpv4_router,

427 (++
iÁ˚
->
dh˝v4_rouãr_˙t
Ë* (*iÁ˚->
dh˝v4_rouãr
));

428 i‡(!
iÁ˚
->
dh˝v4_rouãr
)

429 
îr
;

431 
iÁ˚
->
dh˝v4_rouãr
[iÁ˚->
dh˝v4_rouãr_˙t
 - 1] = 
addr4
;

433 
îr
;

438 i‡((
c
 = 
tb
[
IFACE_ATTR_DNS
])) {

439 
blob_©å
 *
cur
;

440 
ªm
;

442 
iÁ˚
->
Æways_ªwrôe_dns
 = 
åue
;

443 
	`blobmsg_f‹_óch_©å
(
cur
, 
c
, 
ªm
) {

444 i‡(
	`blobmsg_ty≥
(
cur
Ë!
BLOBMSG_TYPE_STRING
 || !
	`blobmsg_check_©å
(cur, 
NULL
))

447 
ö_addr
 
addr4
;

448 
ö6_addr
 
addr6
;

449 i‡(
	`öë_±⁄
(
AF_INET
, 
	`blobmsg_gë_°rög
(
cur
), &
addr4
) == 1) {

450 
iÁ˚
->
dh˝v4_dns
 = 
	`ªÆloc
(iface->dhcpv4_dns,

451 (++
iÁ˚
->
dh˝v4_dns_˙t
Ë* (*iÁ˚->
dh˝v4_dns
));

452 i‡(!
iÁ˚
->
dh˝v4_dns
)

453 
îr
;

455 
iÁ˚
->
dh˝v4_dns
[iÁ˚->
dh˝v4_dns_˙t
 - 1] = 
addr4
;

456 } i‡(
	`öë_±⁄
(
AF_INET6
, 
	`blobmsg_gë_°rög
(
cur
), &
addr6
) == 1) {

457 
iÁ˚
->
dns
 = 
	`ªÆloc
(iface->dns,

458 (++
iÁ˚
->
dns_˙t
Ë* (*iÁ˚->
dns
));

459 i‡(!
iÁ˚
->
dns
)

460 
îr
;

462 
iÁ˚
->
dns
[iÁ˚->
dns_˙t
 - 1] = 
addr6
;

464 
îr
;

469 i‡((
c
 = 
tb
[
IFACE_ATTR_DOMAIN
])) {

470 
blob_©å
 *
cur
;

471 
ªm
;

473 
	`blobmsg_f‹_óch_©å
(
cur
, 
c
, 
ªm
) {

474 i‡(
	`blobmsg_ty≥
(
cur
Ë!
BLOBMSG_TYPE_STRING
 || !
	`blobmsg_check_©å
(cur, 
NULL
))

477 
uöt8_t
 
buf
[256];

478 *
domaö
 = 
	`blobmsg_gë_°rög
(
cur
);

479 
size_t
 
domaöÀn
 = 
	`°æí
(
domaö
);

480 i‡(
domaöÀn
 > 0 && 
domaö
[domainlen - 1] == '.')

481 
domaö
[
domaöÀn
 - 1] = 0;

483 
Àn
 = 
	`dn_comp
(
domaö
, 
buf
, (buf), 
NULL
, NULL);

484 i‡(
Àn
 <= 0)

485 
îr
;

487 
iÁ˚
->
£¨ch
 = 
	`ªÆloc
(iÁ˚->£¨ch, iÁ˚->
£¨ch_Àn
 + 
Àn
);

488 i‡(!
iÁ˚
->
£¨ch
)

489 
îr
;

491 
	`mem˝y
(&
iÁ˚
->
£¨ch
[iÁ˚->
£¨ch_Àn
], 
buf
, 
Àn
);

492 
iÁ˚
->
£¨ch_Àn
 +
Àn
;

496 i‡((
c
 = 
tb
[
IFACE_ATTR_FILTER_CLASS
])) {

497 
iÁ˚
->
fûãr_˛ass
 = 
	`ªÆloc
(iÁ˚->fûãr_˛ass, 
	`blobmsg_d©a_Àn
(
c
) + 1);

498 
	`mem˝y
(
iÁ˚
->
fûãr_˛ass
, 
	`blobmsg_gë_°rög
(
c
), 
	`blobmsg_d©a_Àn
(c) + 1);

501 i‡((
c
 = 
tb
[
IFACE_ATTR_DHCPV6_RAW
])) {

502 
iÁ˚
->
dh˝v6_øw_Àn
 = 
	`blobmsg_d©a_Àn
(
c
) / 2;

503 
iÁ˚
->
dh˝v6_øw
 = 
	`ªÆloc
(iÁ˚->dh˝v6_øw, iÁ˚->
dh˝v6_øw_Àn
);

504 
	`odh˝d_unhexlify
(
iÁ˚
->
dh˝v6_øw
, iÁ˚->
dh˝v6_øw_Àn
, 
	`blobmsg_gë_°rög
(
c
));

507 i‡((
c
 = 
tb
[
IFACE_ATTR_RA_DEFAULT
]))

508 
iÁ˚
->
deÁu…_rouãr
 = 
	`blobmsg_gë_u32
(
c
);

510 i‡((
c
 = 
tb
[
IFACE_ATTR_RA_MANAGEMENT
]))

511 
iÁ˚
->
m™aged
 = 
	`blobmsg_gë_u32
(
c
);

512 i‡(
ovîwrôe
)

513 
iÁ˚
->
m™aged
 = 1;

515 i‡((
c
 = 
tb
[
IFACE_ATTR_RA_OFFLINK
]))

516 
iÁ˚
->
ø_nŸ_⁄lök
 = 
	`blobmsg_gë_boﬁ
(
c
);

518 i‡((
c
 = 
tb
[
IFACE_ATTR_RA_PREFERENCE
])) {

519 c⁄° *
¥io
 = 
	`blobmsg_gë_°rög
(
c
);

521 i‡(!
	`°rcmp
(
¥io
, "high"))

522 
iÁ˚
->
rouã_¥e„ªn˚
 = 1;

523 i‡(!
	`°rcmp
(
¥io
, "low"))

524 
iÁ˚
->
rouã_¥e„ªn˚
 = -1;

525 i‡(!
	`°rcmp
(
¥io
, "medium") || !strcmp(prio, "default"))

526 
iÁ˚
->
rouã_¥e„ªn˚
 = 0;

528 
îr
;

531 i‡((
c
 = 
tb
[
IFACE_ATTR_PD_MANAGER
]))

532 
	`°∫˝y
(
iÁ˚
->
dh˝v6_pd_m™agî
, 
	`blobmsg_gë_°rög
(
c
),

533 (
iÁ˚
->
dh˝v6_pd_m™agî
) - 1);

535 i‡((
c
 = 
tb
[
IFACE_ATTR_PD_CER
]) &&

536 
	`öë_±⁄
(
AF_INET6
, 
	`blobmsg_gë_°rög
(
c
), &
iÁ˚
->
dh˝v6_pd_˚r
) < 1)

537 
îr
;

539 i‡((
c
 = 
tb
[
IFACE_ATTR_NDPROXY_ROUTING
]))

540 
iÁ˚
->
À¨n_rouãs
 = 
	`blobmsg_gë_boﬁ
(
c
);

541 i‡(
ovîwrôe
)

542 
iÁ˚
->
À¨n_rouãs
 = 
åue
;

544 i‡((
c
 = 
tb
[
IFACE_ATTR_NDPROXY_SLAVE
]))

545 
iÁ˚
->
exã∫Æ
 = 
	`blobmsg_gë_boﬁ
(
c
);

547 i‡((
c
 = 
tb
[
IFACE_ATTR_NDPROXY_STATIC
])) {

548 
blob_©å
 *
cur
;

549 
ªm
;

551 
	`blobmsg_f‹_óch_©å
(
cur
, 
c
, 
ªm
) {

552 i‡(
	`blobmsg_ty≥
(
cur
Ë!
BLOBMSG_TYPE_STRING
 || !
	`blobmsg_check_©å
(cur, 
NULL
))

555 
Àn
 = 
	`blobmsg_d©a_Àn
(
cur
);

556 
iÁ˚
->
°©ic_ndp
 = 
	`ªÆloc
(iÁ˚->°©ic_ndp, iÁ˚->
°©ic_ndp_Àn
 + 
Àn
);

557 i‡(!
iÁ˚
->
°©ic_ndp
)

558 
îr
;

560 i‡(
iÁ˚
->
°©ic_ndp_Àn
)

561 
iÁ˚
->
°©ic_ndp
[iÁ˚->
°©ic_ndp_Àn
 - 1] = ' ';

563 
	`mem˝y
(&
iÁ˚
->
°©ic_ndp
[iÁ˚->
°©ic_ndp_Àn
], 
	`blobmsg_gë_°rög
(
cur
), 
Àn
);

564 
iÁ˚
->
°©ic_ndp_Àn
 +
Àn
;

570 
îr
:

571 
	`˛o£_öãrÁ˚
(
iÁ˚
);

573 
	}
}

575 
	$£t_öãrÁ˚
(
uci_£˘i⁄
 *
s
)

577 
	`blob_buf_öô
(&
b
, 0);

578 
	`uci_to_blob
(&
b
, 
s
, &
öãrÁ˚_©å_li°
);

579  
	`c⁄fig_∑r£_öãrÁ˚
(
	`blob_d©a
(
b
.
hód
), 
	`blob_Àn
(b.hód), 
s
->
e
.
«me
, 
åue
);

580 
	}
}

583 
	$odh˝d_ªlﬂd
()

585 
uci_c⁄ãxt
 *
uci
 = 
	`uci_Æloc_c⁄ãxt
();

586 !
	`li°_em±y
(&
Àa£s
)) {

587 
Àa£
 *
l
 = 
	`li°_fú°_íåy
(&
Àa£s
, Àa£, 
hód
);

588 
	`li°_dñ
(&
l
->
hód
);

589 
	`‰ì
(
l
->
duid
);

590 
	`‰ì
(
l
);

593 
öãrÁ˚
 *
ma°î
 = 
NULL
, *
i
, *
n
;

595 i‡(!
uci
)

598 
	`li°_f‹_óch_íåy
(
i
, &
öãrÁ˚s
, 
hód
)

599 
	`˛ón_öãrÁ˚
(
i
);

601 
uci_∑ckage
 *
dh˝
 = 
NULL
;

602 i‡(!
	`uci_lﬂd
(
uci
, "dh˝", &
dh˝
)) {

603 
uci_ñemít
 *
e
;

604 
	`uci_f‹óch_ñemít
(&
dh˝
->
£˘i⁄s
, 
e
) {

605 
uci_£˘i⁄
 *
s
 = 
	`uci_to_£˘i⁄
(
e
);

606 i‡(!
	`°rcmp
(
s
->
ty≥
, "host"))

607 
	`£t_Àa£
(
s
);

608 i‡(!
	`°rcmp
(
s
->
ty≥
, "odhcpd"))

609 
	`£t_c⁄fig
(
s
);

612 
	`uci_f‹óch_ñemít
(&
dh˝
->
£˘i⁄s
, 
e
) {

613 
uci_£˘i⁄
 *
s
 = 
	`uci_to_£˘i⁄
(
e
);

614 i‡(!
	`°rcmp
(
s
->
ty≥
, "dhcp"))

615 
	`£t_öãrÁ˚
(
s
);

620 #ifde‡
WITH_UBUS


621 
	`ubus_≠∂y_√tw‹k
();

624 
boﬁ
 
™y_dh˝v6_¶ave
 = 
Ál£
, 
™y_ø_¶ave
 = fÆ£, 
™y_ndp_¶ave
 = false;

627 
	`li°_f‹_óch_íåy
(
i
, &
öãrÁ˚s
, 
hód
) {

628 i‡(
i
->
ma°î
)

631 i‡(
i
->
dh˝v6
 =
RELAYD_HYBRID
 || i->dh˝v6 =
RELAYD_RELAY
)

632 
™y_dh˝v6_¶ave
 = 
åue
;

634 i‡(
i
->
ø
 =
RELAYD_HYBRID
 || i->ø =
RELAYD_RELAY
)

635 
™y_ø_¶ave
 = 
åue
;

637 i‡(
i
->
ndp
 =
RELAYD_HYBRID
 || i->nd∞=
RELAYD_RELAY
)

638 
™y_ndp_¶ave
 = 
åue
;

642 
	`li°_f‹_óch_íåy
(
i
, &
öãrÁ˚s
, 
hód
) {

643 i‡(!
i
->
ma°î
)

646 
odh˝d_mode
 
hybrid_mode
 = 
RELAYD_DISABLED
;

647 #ifde‡
WITH_UBUS


648 i‡(!
	`ubus_has_¥efix
(
i
->
«me
, i->
i‚ame
))

649 
hybrid_mode
 = 
RELAYD_RELAY
;

652 i‡(
i
->
dh˝v6
 =
RELAYD_HYBRID
)

653 
i
->
dh˝v6
 = 
hybrid_mode
;

655 i‡(
i
->
dh˝v6
 =
RELAYD_RELAY
 && !
™y_dh˝v6_¶ave
)

656 
i
->
dh˝v6
 = 
RELAYD_DISABLED
;

658 i‡(
i
->
ø
 =
RELAYD_HYBRID
)

659 
i
->
ø
 = 
hybrid_mode
;

661 i‡(
i
->
ø
 =
RELAYD_RELAY
 && !
™y_ø_¶ave
)

662 
i
->
ø
 = 
RELAYD_DISABLED
;

664 i‡(
i
->
ndp
 =
RELAYD_HYBRID
)

665 
i
->
ndp
 = 
hybrid_mode
;

667 i‡(
i
->
ndp
 =
RELAYD_RELAY
 && !
™y_ndp_¶ave
)

668 
i
->
ndp
 = 
RELAYD_DISABLED
;

670 i‡(
i
->
dh˝v6
 =
RELAYD_RELAY
 || i->
ø
 =RELAYD_RELAY || i->
ndp
 == RELAYD_RELAY)

671 
ma°î
 = 
i
;

675 
	`li°_f‹_óch_íåy_ß„
(
i
, 
n
, &
öãrÁ˚s
, 
hód
) {

676 i‡(
i
->
öu£
) {

678 i‡(
i
->
dh˝v6
 =
RELAYD_HYBRID
)

679 
i
->
dh˝v6
 = (
ma°î
 && ma°î->dh˝v6 =
RELAYD_RELAY
) ?

680 
RELAYD_RELAY
 : 
RELAYD_SERVER
;

682 i‡(
i
->
ø
 =
RELAYD_HYBRID
)

683 
i
->
ø
 = (
ma°î
 && ma°î->ø =
RELAYD_RELAY
) ?

684 
RELAYD_RELAY
 : 
RELAYD_SERVER
;

686 i‡(
i
->
ndp
 =
RELAYD_HYBRID
)

687 
i
->
ndp
 = (
ma°î
 && ma°î->nd∞=
RELAYD_RELAY
) ?

688 
RELAYD_RELAY
 : 
RELAYD_DISABLED
;

690 
	`£tup_rouãr_öãrÁ˚
(
i
, 
åue
);

691 
	`£tup_dh˝v6_öãrÁ˚
(
i
, 
åue
);

692 
	`£tup_ndp_öãrÁ˚
(
i
, 
åue
);

693 
	`£tup_dh˝v4_öãrÁ˚
(
i
, 
åue
);

695 
	`˛o£_öãrÁ˚
(
i
);

699 
	`uci_u∆ﬂd
(
uci
, 
dh˝
);

700 
	`uci_‰ì_c⁄ãxt
(
uci
);

701 
	}
}

704 
	$h™dÀ_sig«l
(
sig«l
)

706 
b
[1] = {0};

707 i‡(
sig«l
 =
SIGHUP
)

708 
	`wrôe
(
ªlﬂd_pùe
[1], 
b
, (b));

710 
	`ulo›_íd
();

711 
	}
}

715 
	$ªlﬂd_cb
(
ulo›_fd
 *
u
, 
_unu£d
 
evíts
)

717 
b
[512];

718 
	`ªad
(
u
->
fd
, 
b
, (b));

719 
	`odh˝d_ªlﬂd
();

720 
	}
}

722 
ulo›_fd
 
	gªlﬂd_fd
 = { .
cb
 = 
ªlﬂd_cb
 };

724 
	$odh˝d_run
()

726 
	`pùe2
(
ªlﬂd_pùe
, 
O_NONBLOCK
 | 
O_CLOEXEC
);

727 
ªlﬂd_fd
.
fd
 = 
ªlﬂd_pùe
[0];

728 
	`ulo›_fd_add
(&
ªlﬂd_fd
, 
ULOOP_READ
);

730 
	`sig«l
(
SIGTERM
, 
h™dÀ_sig«l
);

731 
	`sig«l
(
SIGINT
, 
h™dÀ_sig«l
);

732 
	`sig«l
(
SIGHUP
, 
h™dÀ_sig«l
);

734 #ifde‡
WITH_UBUS


735 
	`öô_ubus
())

736 
	`¶ìp
(1);

739 
	`odh˝d_ªlﬂd
();

740 
	`ulo›_run
();

741 
	}
}

	@/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/dhcpv4.c

16 
	~<time.h
>

17 
	~<î∫o.h
>

18 
	~<f˙é.h
>

19 
	~<uni°d.h
>

20 
	~<°ddef.h
>

21 
	~<°dlib.h
>

22 
	~<ªsﬁv.h
>

23 
	~<limôs.h
>

24 
	~<√t/if.h
>

25 
	~<√t/if_¨p.h
>

26 
	~<√töë/ù.h
>

27 
	~<sys/io˘l.h
>

28 
	~<sys/timîfd.h
>

29 
	~<¨∑/öë.h
>

31 
	~"odh˝d.h
"

32 
	~"dh˝v4.h
"

33 
	~"dh˝v6.h
"

36 
h™dÀ_dh˝v4
(*
addr
, *
d©a
, 
size_t
 
Àn
,

37 
öãrÁ˚
 *
iÁ˚
, *
de°_addr
);

38 
dh˝v4_assignmít
* 
dh˝v4_Àa£
(
öãrÁ˚
 *
iÁ˚
,

39 
dh˝v4_msg
 
msg
, c⁄° 
uöt8_t
 *
mac
, 
ö_addr
 
ªqaddr
,

40 c⁄° *
ho°«me
);

43 
	$öô_dh˝v4
()

46 
	}
}

48 *
	$dh˝v4_msg_to_°rög
(
uöt8_t
 
ªqmsg
)

50 
ªqmsg
) {

51 (
DHCPV4_MSG_DISCOVER
):

53 (
DHCPV4_MSG_OFFER
):

55 (
DHCPV4_MSG_REQUEST
):

57 (
DHCPV4_MSG_DECLINE
):

59 (
DHCPV4_MSG_ACK
):

61 (
DHCPV4_MSG_NAK
):

63 (
DHCPV4_MSG_RELEASE
):

65 (
DHCPV4_MSG_INFORM
):

70 
	}
}

72 
	$£tup_dh˝v4_öãrÁ˚
(
öãrÁ˚
 *
iÁ˚
, 
boﬁ
 
íabÀ
)

74 i‡(
iÁ˚
->
dh˝v4_evít
.
ulo›
.
fd
 > 0) {

75 
	`ulo›_fd_dñëe
(&
iÁ˚
->
dh˝v4_evít
.
ulo›
);

76 
	`˛o£
(
iÁ˚
->
dh˝v4_evít
.
ulo›
.
fd
);

77 
iÁ˚
->
dh˝v4_evít
.
ulo›
.
fd
 = -1;

80 i‡(
iÁ˚
->
dh˝v4
 && 
íabÀ
) {

81 i‡(!
iÁ˚
->
dh˝v4_assignmíts
.
√xt
)

82 
	`INIT_LIST_HEAD
(&
iÁ˚
->
dh˝v4_assignmíts
);

84 
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
 | 
SOCK_CLOEXEC
, 
IPPROTO_UDP
);

85 i‡(
sock
 < 0) {

86 
	`sy¶og
(
LOG_ERR
, "FailedÅo create DHCPv4 server socket: %s",

87 
	`°ªº‹
(
î∫o
));

92 
vÆ
 = 1;

93 
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
vÆ
, (val));

94 
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_BROADCAST
, &
vÆ
, (val));

95 
	`£tsock›t
(
sock
, 
IPPROTO_IP
, 
IP_PKTINFO
, &
vÆ
, (val));

97 
vÆ
 = 
IPTOS_PREC_INTERNETCONTROL
;

98 
	`£tsock›t
(
sock
, 
IPPROTO_IP
, 
IP_TOS
, &
vÆ
, (val));

100 
vÆ
 = 
IP_PMTUDISC_DONT
;

101 
	`£tsock›t
(
sock
, 
IPPROTO_IP
, 
IP_MTU_DISCOVER
, &
vÆ
, (val));

103 
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_BINDTODEVICE
,

104 
iÁ˚
->
i‚ame
, 
	`°æí
(iface->ifname));

106 
sockaddr_ö
 
böd_addr
 = {
AF_INET
, 
	`ht⁄s
(
DHCPV4_SERVER_PORT
),

107 {
INADDR_ANY
}, {0}};

109 i‡(
	`böd
(
sock
, (
sockaddr
*)&
böd_addr
, (bind_addr))) {

110 
	`sy¶og
(
LOG_ERR
, "FailedÅo open DHCPv4 server socket: %s",

111 
	`°ªº‹
(
î∫o
));

116 i‡(
	`¡ohl
(
iÁ˚
->
dh˝v4_°¨t
.
s_addr
Ë>Çtohl(iÁ˚->
dh˝v4_íd
.s_addr)) {

117 
	`sy¶og
(
LOG_ERR
, "Invalid DHCPÑange");

122 
i‰eq
 ifreq;

123 
	`°∫˝y
(
i‰eq
.
i‰_«me
, 
iÁ˚
->
i‚ame
, (ifreq.ifr_name));

125 
sockaddr_ö
 *
ßddr
 = (sockaddr_ö*)&
i‰eq
.
i‰_addr
;

126 
sockaddr_ö
 *
smask
 = (sockaddr_ö*)&
i‰eq
.
i‰_√tmask
;

127 i‡(!(
iÁ˚
->
dh˝v4_°¨t
.
s_addr
 & 
	`ht⁄l
(0xffff0000)) &&

128 !(
iÁ˚
->
dh˝v4_íd
.
s_addr
 & 
	`ht⁄l
(0xffff0000)) &&

129 !
	`io˘l
(
sock
, 
SIOCGIFADDR
, &
i‰eq
)) {

130 
ö_addr
 
addr
 = 
ßddr
->
sö_addr
;

132 
	`io˘l
(
sock
, 
SIOCGIFNETMASK
, &
i‰eq
);

133 
ö_addr
 
mask
 = 
smask
->
sö_addr
;

135 
uöt32_t
 
°¨t
 = 
	`¡ohl
(
iÁ˚
->
dh˝v4_°¨t
.
s_addr
);

136 
uöt32_t
 
íd
 = 
	`¡ohl
(
iÁ˚
->
dh˝v4_íd
.
s_addr
);

138 i‡(
°¨t
 && 
íd
 && start <Énd &&

139 
°¨t
 > 
	`¡ohl
(
addr
.
s_addr
 & ~
mask
.s_addr) &&

140 (
°¨t
 & 
	`¡ohl
(~
mask
.
s_addr
)) == start &&

141 (
íd
 & 
	`¡ohl
(~
mask
.
s_addr
)) ==Énd) {

142 
iÁ˚
->
dh˝v4_°¨t
.
s_addr
 = 
	`ht⁄l
(
°¨t
) |

143 (
addr
.
s_addr
 & 
mask
.s_addr);

144 
iÁ˚
->
dh˝v4_íd
.
s_addr
 = 
	`ht⁄l
(
íd
) |

145 (
addr
.
s_addr
 & 
mask
.s_addr);

146 } i‡(
	`¡ohl
(
mask
.
s_addr
) <= 0xfffffff0) {

147 
°¨t
 = 
addr
.
s_addr
 & 
mask
.s_addr;

148 
íd
 = 
addr
.
s_addr
 & 
mask
.s_addr;

150 i‡(
	`¡ohl
(
mask
.
s_addr
) <= 0xffffff00) {

151 
iÁ˚
->
dh˝v4_°¨t
.
s_addr
 = 
°¨t
 | 
	`ht⁄l
(100);

152 
iÁ˚
->
dh˝v4_íd
.
s_addr
 = 
íd
 | 
	`ht⁄l
(250);

153 } i‡(
	`¡ohl
(
mask
.
s_addr
) <= 0xffffffc0) {

154 
iÁ˚
->
dh˝v4_°¨t
.
s_addr
 = 
°¨t
 | 
	`ht⁄l
(10);

155 
iÁ˚
->
dh˝v4_íd
.
s_addr
 = 
íd
 | 
	`ht⁄l
(60);

156 } i‡(
	`¡ohl
(
mask
.
s_addr
) <= 0xffffffe0) {

157 
iÁ˚
->
dh˝v4_°¨t
.
s_addr
 = 
°¨t
 | 
	`ht⁄l
(10);

158 
iÁ˚
->
dh˝v4_íd
.
s_addr
 = 
íd
 | 
	`ht⁄l
(30);

160 
iÁ˚
->
dh˝v4_°¨t
.
s_addr
 = 
°¨t
 | 
	`ht⁄l
(3);

161 
iÁ˚
->
dh˝v4_íd
.
s_addr
 = 
íd
 | 
	`ht⁄l
(12);

169 
Àa£
 *lease;

170 
	`li°_f‹_óch_íåy
(
Àa£
, &
Àa£s
, 
hód
) {

172 
size_t
 
ho°Àn
 = 
	`°æí
(
Àa£
->
ho°«me
) + 1;

173 
dh˝v4_assignmít
 *
a
 = 
	`ˇŒoc
(1, (*aË+ 
ho°Àn
);

174 i‡(!
a
) {

175 
	`sy¶og
(
LOG_ERR
, "Calloc failed for staticÜease on interface %s",

176 
iÁ˚
->
i‚ame
);

179 
a
->
addr
 = 
	`¡ohl
(
Àa£
->
ùaddr
.
s_addr
);

180 
	`mem˝y
(
a
->
hwaddr
, 
Àa£
->
mac
.
ëhî_addr_o˘ë
, (a->hwaddr));

181 
	`mem˝y
(
a
->
ho°«me
, 
Àa£
->ho°«me, 
ho°Àn
);

182 
a
->
vÆid_u¡û
 = 
LONG_MAX
;

185 
dh˝v4_assignmít
 *
c
;

186 
	`li°_f‹_óch_íåy
(
c
, &
iÁ˚
->
dh˝v4_assignmíts
, 
hód
) {

187 i‡(
c
->
addr
 > 
a
->addr) {

188 
	`li°_add_èû
(&
a
->
hód
, &
c
->head);

190 } i‡(
c
->
addr
 =
a
->addr) {

195 i‡(&
c
->
hód
 =&
iÁ˚
->
dh˝v4_assignmíts
) {

196 
	`li°_add
(&
a
->
hód
, &
iÁ˚
->
dh˝v4_assignmíts
);

199 i‡(!
a
->
hód
.
√xt
)

200 
	`‰ì
(
a
);

204 
dh˝v4_assignmít
 *
a
, *
n
;

205 
	`li°_f‹_óch_íåy_ß„
(
a
, 
n
, &
iÁ˚
->
dh˝v4_assignmíts
, 
hód
) {

206 i‡((
	`ht⁄l
(
a
->
addr
Ë& 
smask
->
sö_addr
.
s_addr
) !=

207 (
iÁ˚
->
dh˝v4_°¨t
.
s_addr
 & 
smask
->
sö_addr
.s_addr)) {

208 
	`li°_dñ
(&
a
->
hód
);

209 
	`‰ì
(
a
);

214 i‡(
iÁ˚
->
dh˝v4_Àa£time
 < 60)

215 
iÁ˚
->
dh˝v4_Àa£time
 = 43200;

217 
iÁ˚
->
dh˝v4_evít
.
ulo›
.
fd
 = 
sock
;

218 
iÁ˚
->
dh˝v4_evít
.
h™dÀ_dgøm
 = 
h™dÀ_dh˝v4
;

219 
	`odh˝d_ªgi°î
(&
iÁ˚
->
dh˝v4_evít
);

220 } i‡(
iÁ˚
->
dh˝v4_assignmíts
.
√xt
) {

221 !
	`li°_em±y
(&
iÁ˚
->
dh˝v4_assignmíts
)) {

222 
dh˝v4_assignmít
 *
a
 = 
	`li°_fú°_íåy
(&
iÁ˚
->
dh˝v4_assignmíts
,

223 
dh˝v4_assignmít
, 
hód
);

224 
	`li°_dñ
(&
a
->
hód
);

225 
	`‰ì
(
a
->
ho°«me
);

226 
	`‰ì
(
a
);

231 
	}
}

234 
	$dh˝v4_put
(
dh˝v4_mesßge
 *
msg
, 
uöt8_t
 **
cookõ
,

235 
uöt8_t
 
ty≥
, uöt8_à
Àn
, c⁄° *
d©a
)

237 
uöt8_t
 *
c
 = *
cookõ
;

238 i‡(*
cookõ
 + 2 + 
Àn
 > (
uöt8_t
*)&
msg
[1])

241 *
c
++ = 
ty≥
;

242 *
c
++ = 
Àn
;

243 
	`mem˝y
(
c
, 
d©a
, 
Àn
);

245 *
cookõ
 = 
c
 + 
Àn
;

246 
	}
}

250 
	$h™dÀ_dh˝v4
(*
addr
, *
d©a
, 
size_t
 
Àn
,

251 
öãrÁ˚
 *
iÁ˚
, 
_unu£d
 *
de°_addr
)

253 i‡(!
iÁ˚
->
dh˝v4
)

256 
dh˝v4_mesßge
 *
ªq
 = 
d©a
;

257 i‡(
Àn
 < 
	`off£tof
(
dh˝v4_mesßge
, 
›ti⁄s
) + 4 ||

258 
ªq
->
›
 !
DHCPV4_BOOTREQUEST
 ||Ñeq->
hÀn
 != 6)

261 
sock
 = 
iÁ˚
->
dh˝v4_evít
.
ulo›
.
fd
;

262 
sockaddr_ö
 
iÁddr
;

263 
sockaddr_ö
 
i‚ëmask
;

265 
	`sy¶og
(
LOG_NOTICE
, "Got DHCPv4Ñequest");

267 
i‰eq
 ifreq;

268 
	`mem˝y
(
i‰eq
.
i‰_«me
, 
iÁ˚
->
i‚ame
, (ifreq.ifr_name));

269 i‡(
	`io˘l
(
sock
, 
SIOCGIFADDR
, &
i‰eq
)) {

270 
	`sy¶og
(
LOG_WARNING
, "DHCPv4 faûedÅÿdëe˘áddªss: %s", 
	`°ªº‹
(
î∫o
));

274 
	`mem˝y
(&
iÁddr
, &
i‰eq
.
i‰_addr
, (ifaddr));

275 i‡(
	`io˘l
(
sock
, 
SIOCGIFNETMASK
, &
i‰eq
))

278 
	`mem˝y
(&
i‚ëmask
, &
i‰eq
.
i‰_√tmask
, (ifnetmask));

279 
uöt32_t
 
√tw‹k
 = 
iÁddr
.
sö_addr
.
s_addr
 & 
i‚ëmask
.sin_addr.s_addr;

281 i‡((
iÁ˚
->
dh˝v4_°¨t
.
s_addr
 & 
i‚ëmask
.
sö_addr
.s_addrË!
√tw‹k
 ||

282 (
iÁ˚
->
dh˝v4_íd
.
s_addr
 & 
i‚ëmask
.
sö_addr
.s_addrË!
√tw‹k
) {

283 
	`sy¶og
(
LOG_WARNING
, "DHCPv4Ñange out ofássignedÇetwork");

287 
i‰eq
 
i‰
 = {.
i‰_«me
 = ""};

288 
	`°∫˝y
(
i‰
.
i‰_«me
, 
iÁ˚
->
i‚ame
, (ifr.ifr_name));

290 
dh˝v4_mesßge
 
ª∂y
 = {

291 .
›
 = 
DHCPV4_BOOTREPLY
,

292 .
hty≥
 = 1,

293 .
hÀn
 = 6,

294 .
h›s
 = 0,

295 .
xid
 = 
ªq
->xid,

296 .
£cs
 = 0,

297 .
Êags
 = 
ªq
->flags,

298 .
cüddr
 = {
INADDR_ANY
},

299 .
güddr
 = 
ªq
->giaddr,

300 .
süddr
 = 
iÁddr
.
sö_addr
,

302 
	`mem˝y
(
ª∂y
.
chaddr
, 
ªq
->chaddr, (reply.chaddr));

304 
ª∂y
.
›ti⁄s
[0] = 0x63;

305 
ª∂y
.
›ti⁄s
[1] = 0x82;

306 
ª∂y
.
›ti⁄s
[2] = 0x53;

307 
ª∂y
.
›ti⁄s
[3] = 0x63;

309 
uöt8_t
 *
cookõ
 = &
ª∂y
.
›ti⁄s
[4];

310 
uöt8_t
 
ªqmsg
 = 
DHCPV4_MSG_REQUEST
;

311 
uöt8_t
 
msg
 = 
DHCPV4_MSG_ACK
;

313 
ö_addr
 
ªqaddr
 = {
INADDR_ANY
};

314 
ho°«me
[256];

315 
ho°«me
[0] = 0;

317 
uöt8_t
 *
°¨t
 = &
ªq
->
›ti⁄s
[4];

318 
uöt8_t
 *
íd
 = ((uöt8_t*)
d©a
Ë+ 
Àn
;

319 
dh˝v4_›ti⁄
 *
›t
;

320 
	`dh˝v4_f‹_óch_›ti⁄
(
°¨t
, 
íd
, 
›t
) {

321 i‡(
›t
->
ty≥
 =
DHCPV4_OPT_MESSAGE
 && o±->
Àn
 == 1) {

322 
ªqmsg
 = 
›t
->
d©a
[0];

323 } i‡(
›t
->
ty≥
 =
DHCPV4_OPT_HOSTNAME
 && o±->
Àn
 > 0) {

324 
	`mem˝y
(
ho°«me
, 
›t
->
d©a
, o±->
Àn
);

325 
ho°«me
[
›t
->
Àn
] = 0;

326 } i‡(
›t
->
ty≥
 =
DHCPV4_OPT_IPADDRESS
 && o±->
Àn
 == 4) {

327 
	`mem˝y
(&
ªqaddr
, 
›t
->
d©a
, 4);

328 } i‡(
›t
->
ty≥
 =
DHCPV4_OPT_SERVERID
 && o±->
Àn
 == 4) {

329 i‡(
	`memcmp
(
›t
->
d©a
, &
iÁddr
.
sö_addr
, 4))

331 } i‡(
iÁ˚
->
fûãr_˛ass
 && 
›t
->
ty≥
 =
DHCPV4_OPT_USER_CLASS
) {

332 
uöt8_t
 *
c
 = 
›t
->
d©a
, *
˚nd
 = &›t->d©a[›t->
Àn
];

333 ; 
c
 < 
˚nd
 && &c[*c] < cend; c = &c[1 + *c]) {

334 
size_t
 
ñí
 = 
	`°æí
(
iÁ˚
->
fûãr_˛ass
);

335 i‡(*
c
 =
ñí
 && !
	`memcmp
(&c[1], 
iÁ˚
->
fûãr_˛ass
,Élen))

341 i‡(
ªqmsg
 !
DHCPV4_MSG_DISCOVER
 &&Ñeqmsg !
DHCPV4_MSG_REQUEST
 &&

342 
ªqmsg
 !
DHCPV4_MSG_INFORM
 &&Ñeqmsg !
DHCPV4_MSG_DECLINE
 &&

343 
ªqmsg
 !
DHCPV4_MSG_RELEASE
)

346 
dh˝v4_assignmít
 *
Àa£
 = 
NULL
;

347 i‡(
ªqmsg
 !
DHCPV4_MSG_INFORM
)

348 
Àa£
 = 
	`dh˝v4_Àa£
(
iÁ˚
, 
ªqmsg
, 
ªq
->
chaddr
, 
ªqaddr
, 
ho°«me
);

350 i‡(!
Àa£
) {

351 i‡(
ªqmsg
 =
DHCPV4_MSG_REQUEST
)

352 
msg
 = 
DHCPV4_MSG_NAK
;

353 i‡(
ªqmsg
 =
DHCPV4_MSG_DISCOVER
)

355 } i‡(
ªqmsg
 =
DHCPV4_MSG_DISCOVER
) {

356 
msg
 = 
DHCPV4_MSG_OFFER
;

357 } i‡(
ªqmsg
 =
DHCPV4_MSG_REQUEST
 && 
ªqaddr
.
s_addr
 &&

358 
ªqaddr
.
s_addr
 !
	`ht⁄l
(
Àa£
->
addr
)) {

359 
msg
 = 
DHCPV4_MSG_NAK
;

372 
	`sy¶og
(
LOG_WARNING
, "received %s from %x:%x:%x:%x:%x:%x",

373 
	`dh˝v4_msg_to_°rög
(
ªqmsg
),

374 
ªq
->
chaddr
[0],req->chaddr[1],req->chaddr[2],

375 
ªq
->
chaddr
[3],req->chaddr[4],req->chaddr[5]);

377 i‡(
ªqmsg
 =
DHCPV4_MSG_DECLINE
 ||Ñeqmsg =
DHCPV4_MSG_RELEASE
)

380 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_MESSAGE
, 1, &
msg
);

381 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_SERVERID
, 4, &
iÁddr
.
sö_addr
);

383 i‡(
Àa£
) {

384 
ª∂y
.
yüddr
.
s_addr
 = 
	`ht⁄l
(
Àa£
->
addr
);

386 
uöt32_t
 
vÆ
 = 
	`ht⁄l
(
iÁ˚
->
dh˝v4_Àa£time
);

387 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_LEASETIME
, 4, &
vÆ
);

389 
vÆ
 = 
	`ht⁄l
(500 * 
iÁ˚
->
dh˝v4_Àa£time
 / 1000);

390 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_RENEW
, 4, &
vÆ
);

392 
vÆ
 = 
	`ht⁄l
(875 * 
iÁ˚
->
dh˝v4_Àa£time
 / 1000);

393 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_REBIND
, 4, &
vÆ
);

395 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_NETMASK
, 4, &
i‚ëmask
.
sö_addr
);

397 i‡(
Àa£
->
ho°«me
[0])

398 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_HOSTNAME
,

399 
	`°æí
(
Àa£
->
ho°«me
),Üease->hostname);

401 i‡(!
	`io˘l
(
sock
, 
SIOCGIFBRDADDR
, &
i‰
)) {

402 
sockaddr_ö
 *
öa
 = (sockaddr_ö*)&
i‰
.
i‰_brﬂdaddr
;

403 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_BROADCAST
, 4, &
öa
->
sö_addr
);

407 i‡(!
	`io˘l
(
sock
, 
SIOCGIFMTU
, &
i‰
)) {

408 
uöt16_t
 
mtu
 = 
	`ht⁄s
(
i‰
.
i‰_mtu
);

409 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_MTU
, 2, &
mtu
);

412 i‡(
iÁ˚
->
£¨ch
 && iÁ˚->
£¨ch_Àn
 <= 255) {

413 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_SEARCH_DOMAIN
,

414 
iÁ˚
->
£¨ch_Àn
, iÁ˚->
£¨ch
);

415 } i‡(!
	`ªs_öô
(Ë&& 
_ªs
.
dn§ch
[0] && _res.dnsrch[0][0]) {

416 
uöt8_t
 
£¨ch_buf
[256];

417 
Àn
 = 
	`dn_comp
(
_ªs
.
dn§ch
[0], 
£¨ch_buf
,

418 (
£¨ch_buf
), 
NULL
, NULL);

419 i‡(
Àn
 > 0)

420 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_SEARCH_DOMAIN
,

421 
Àn
, 
£¨ch_buf
);

424 i‡(
iÁ˚
->
dh˝v4_rouãr_˙t
 == 0)

425 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_ROUTER
, 4, &
iÁddr
.
sö_addr
);

427 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_ROUTER
,

428 4 * 
iÁ˚
->
dh˝v4_rouãr_˙t
, iÁ˚->
dh˝v4_rouãr
);

431 i‡(
iÁ˚
->
dh˝v4_dns_˙t
 == 0)

432 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_DNSSERVER
, 4, &
iÁddr
.
sö_addr
);

434 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_DNSSERVER
,

435 4 * 
iÁ˚
->
dh˝v4_dns_˙t
, iÁ˚->
dh˝v4_dns
);

438 
	`dh˝v4_put
(&
ª∂y
, &
cookõ
, 
DHCPV4_OPT_END
, 0, 
NULL
);

440 
sockaddr_ö
 
de°
 = *((sockaddr_ö*)
addr
);

441 i‡(
ªq
->
güddr
.
s_addr
) {

445 
de°
.
sö_addr
 = 
ªq
->
güddr
;

446 
de°
.
sö_p‹t
 = 
	`ht⁄s
(
DHCPV4_SERVER_PORT
);

447 } i‡(
ªq
->
cüddr
.
s_addr
 &&Ñeq->cüddr.s_add∏!
de°
.
sö_addr
.s_addr) {

452 
de°
.
sö_addr
 = 
ªq
->
cüddr
;

453 
de°
.
sö_p‹t
 = 
	`ht⁄s
(
DHCPV4_CLIENT_PORT
);

454 } i‡((
	`¡ohs
(
ªq
->
Êags
Ë& 
DHCPV4_FLAG_BROADCAST
) ||

455 
ªq
->
hÀn
 !
ª∂y
.hÀ¿|| !ª∂y.
yüddr
.
s_addr
) {

459 
de°
.
sö_addr
.
s_addr
 = 
INADDR_BROADCAST
;

460 
de°
.
sö_p‹t
 = 
	`ht⁄s
(
DHCPV4_CLIENT_PORT
);

461 } i‡(!
ªq
->
cüddr
.
s_addr
 && 
msg
 =
DHCPV4_MSG_NAK
) {

466 
de°
.
sö_addr
.
s_addr
 = 
INADDR_BROADCAST
;

467 
de°
.
sö_p‹t
 = 
	`ht⁄s
(
DHCPV4_CLIENT_PORT
);

472 
de°
.
sö_addr
 = 
ª∂y
.
yüddr
;

473 
de°
.
sö_p‹t
 = 
	`ht⁄s
(
DHCPV4_CLIENT_PORT
);

475 
¨¥eq
 
¨p
 = {.
¨p_Êags
 = 
ATF_COM
};

476 
	`mem˝y
(
¨p
.
¨p_ha
.
ß_d©a
, 
ªq
->
chaddr
, 6);

477 
	`mem˝y
(&
¨p
.
¨p_∑
, &
de°
, (arp.arp_pa));

478 
	`mem˝y
(
¨p
.
¨p_dev
, 
iÁ˚
->
i‚ame
, (arp.arp_dev));

479 
	`io˘l
(
sock
, 
SIOCSARP
, &
¨p
);

482 i‡(
de°
.
sö_addr
.
s_addr
 =
INADDR_BROADCAST
) {

486 
	`sy¶og
(
LOG_WARNING
, "sending %sÅo ff:ff:ff:ff:ff:ff - %s",

487 
	`dh˝v4_msg_to_°rög
(
msg
),

488 
	`öë_¡ﬂ
(
de°
.
sö_addr
));

494 
	`sy¶og
(
LOG_WARNING
, "sending %sÅo %x:%x:%x:%x:%x:%x - %s",

495 
	`dh˝v4_msg_to_°rög
(
msg
),

496 
ªq
->
chaddr
[0],req->chaddr[1],req->chaddr[2],

497 
ªq
->
chaddr
[3],req->chaddr[4],req->chaddr[5],

498 
	`öë_¡ﬂ
(
de°
.
sö_addr
));

501 
	`£ndto
(
sock
, &
ª∂y
, ‘ïly), 
MSG_DONTWAIT
,

502 (
sockaddr
*)&
de°
, (dest));

503 
	}
}

506 
boﬁ
 
	$dh˝v4_assign
(
öãrÁ˚
 *
iÁ˚
,

507 
dh˝v4_assignmít
 *
assign
, 
uöt32_t
 
øddr
)

509 c⁄° 
åõs
 = 10;

510 
uöt32_t
 
°¨t
 = 
	`¡ohl
(
iÁ˚
->
dh˝v4_°¨t
.
s_addr
);

511 
uöt32_t
 
íd
 = 
	`¡ohl
(
iÁ˚
->
dh˝v4_íd
.
s_addr
);

512 
uöt32_t
 
cou¡
 = 
íd
 - 
°¨t
 + 1;

515 
uöt32_t
 
£ed
 = 0;

516 
size_t
 
i
 = 0; i < (
assign
->
hwaddr
); ++i)

517 
£ed
 +
assign
->
hwaddr
[
i
];

518 
	`§™d
(
£ed
);

521 
i
 = 0; i < 
åõs
; ++i) {

522 
uöt32_t
 
åy
 = (((uöt32_t)
	`ønd
()Ë% 
cou¡
Ë+ 
°¨t
;

523 i‡(
i
 =0 && 
øddr
 >
°¨t
 &&Ñadd∏<
íd
)

524 
åy
 = 
øddr
;

525 i‡(
i
 =
åõs
 - 1)

526 
åy
 = 
°¨t
;

528 i‡(
	`li°_em±y
(&
iÁ˚
->
dh˝v4_assignmíts
)) {

529 
assign
->
addr
 = 
åy
;

530 
	`li°_add
(&
assign
->
hód
, &
iÁ˚
->
dh˝v4_assignmíts
);

531  
åue
;

534 
dh˝v4_assignmít
 *
c
;

535 
	`li°_f‹_óch_íåy
(
c
, &
iÁ˚
->
dh˝v4_assignmíts
, 
hód
) {

536 i‡(
c
->
addr
 > 
åy
) {

537 
assign
->
addr
 = 
åy
;

538 
	`li°_add_èû
(&
assign
->
hód
, &
c
->head);

539  
åue
;

540 } i‡(
c
->
addr
 =
åy
) {

541 i‡(
i
 < 
åõs
 - 1)

544 ++
åy
;

549  
Ál£
;

550 
	}
}

553 
dh˝v4_assignmít
* 
	$dh˝v4_Àa£
(
öãrÁ˚
 *
iÁ˚
,

554 
dh˝v4_msg
 
msg
, c⁄° 
uöt8_t
 *
mac
, 
ö_addr
 
ªqaddr
,

555 c⁄° *
ho°«me
)

557 
dh˝v4_assignmít
 *
Àa£
 = 
NULL
;

558 
uöt32_t
 
øddr
 = 
	`¡ohl
(
ªqaddr
.
s_addr
);

559 
time_t
 
now
 = 
	`odh˝d_time
();

561 
dh˝v4_assignmít
 *
c
, *
n
, *
a
 = 
NULL
;

562 
	`li°_f‹_óch_íåy_ß„
(
c
, 
n
, &
iÁ˚
->
dh˝v4_assignmíts
, 
hód
) {

563 i‡(!
	`memcmp
(
c
->
hwaddr
, 
mac
, 6)) {

564 
a
 = 
c
;

565 i‡(
c
->
addr
 =
øddr
)

567 } i‡(
c
->
vÆid_u¡û
 < 
now
) {

568 
	`li°_dñ
(&
c
->
hód
);

569 
	`‰ì
(
c
);

573 i‡(
msg
 =
DHCPV4_MSG_DISCOVER
 || msg =
DHCPV4_MSG_REQUEST
) {

574 
boﬁ
 
assig√d
 = !!
a
;

575 
size_t
 
ho°Àn
 = 
	`°æí
(
ho°«me
) + 1;

577 i‡(!
a
 && !
iÁ˚
->
no_dy«mic_dh˝
) {

578 
a
 = 
	`ˇŒoc
(1, (*aË+ 
ho°Àn
);

579 i‡(!
a
) {

580 
	`sy¶og
(
LOG_ERR
, "FaûedÅÿˇŒo¯bödög o¿öãrÁ˚ %s", 
iÁ˚
->
i‚ame
);

581  
NULL
;

583 
	`mem˝y
(
a
->
hwaddr
, 
mac
, (a->hwaddr));

584 
	`mem˝y
(
a
->
ho°«me
, ho°«me, 
ho°Àn
);

586 
assig√d
 = 
	`dh˝v4_assign
(
iÁ˚
, 
a
, 
øddr
);

589 i‡(
assig√d
 && !
a
->
ho°«me
[0] && hostname) {

590 
a
 = 
	`ªÆloc
◊, (*aË+ 
ho°Àn
);

591 i‡(!
a
) {

592 
	`sy¶og
(
LOG_ERR
, "FaûedÅÿªÆlo¯bödög o¿öãrÁ˚ %s", 
iÁ˚
->
i‚ame
);

593  
NULL
;

595 
	`mem˝y
(
a
->
ho°«me
, ho°«me, 
ho°Àn
);

598 
a
->
hód
.
√xt
->
¥ev
 = &a->head;

599 
a
->
hód
.
¥ev
->
√xt
 = &a->head;

603 i‡(
assig√d
 && 
a
->
vÆid_u¡û
 < 
now
) {

604 
a
->
vÆid_u¡û
 = (
msg
 =
DHCPV4_MSG_DISCOVER
) ? 0 :

605 (
now
 + 
iÁ˚
->
dh˝v4_Àa£time
);

606 } i‡(!
assig√d
 && 
a
) {

607 
	`‰ì
(
a
);

608 
a
 = 
NULL
;

611 i‡(
assig√d
 && 
a
)

612 
Àa£
 = 
a
;

613 } i‡(
msg
 =
DHCPV4_MSG_RELEASE
) {

614 i‡(
a
 &&á->
vÆid_u¡û
 !
LONG_MAX
)

615 
a
->
vÆid_u¡û
 = 0;

616 } i‡(
msg
 =
DHCPV4_MSG_DECLINE
 && 
a
->
vÆid_u¡û
 !
LONG_MAX
) {

617 
	`mem£t
(
a
->
hwaddr
, 0, (a->hwaddr));

618 
a
->
vÆid_u¡û
 = 
now
 + 3600;

621 
	`dh˝v6_wrôe_°©efûe
();

623  
Àa£
;

624 
	}
}

	@/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/dhcpv4.h

14 #¥agm®
⁄˚


16 
	#DHCPV4_CLIENT_PORT
 68

	)

17 
	#DHCPV4_SERVER_PORT
 67

	)

19 
	#DHCPV4_FLAG_BROADCAST
 0x8000

	)

21 
	edh˝v4_›
 {

22 
	mDHCPV4_BOOTREQUEST
 = 1,

23 
	mDHCPV4_BOOTREPLY
 = 2

26 
	edh˝v4_msg
 {

27 
	mDHCPV4_MSG_DISCOVER
 = 1,

28 
	mDHCPV4_MSG_OFFER
 = 2,

29 
	mDHCPV4_MSG_REQUEST
 = 3,

30 
	mDHCPV4_MSG_DECLINE
 = 4,

31 
	mDHCPV4_MSG_ACK
 = 5,

32 
	mDHCPV4_MSG_NAK
 = 6,

33 
	mDHCPV4_MSG_RELEASE
 = 7,

34 
	mDHCPV4_MSG_INFORM
 = 8,

37 
	edh˝v4_›t
 {

38 
	mDHCPV4_OPT_NETMASK
 = 1,

39 
	mDHCPV4_OPT_ROUTER
 = 3,

40 
	mDHCPV4_OPT_DNSSERVER
 = 6,

41 
	mDHCPV4_OPT_DOMAIN
 = 15,

42 
	mDHCPV4_OPT_MTU
 = 26,

43 
	mDHCPV4_OPT_BROADCAST
 = 28,

44 
	mDHCPV4_OPT_NTPSERVER
 = 42,

45 
	mDHCPV4_OPT_LEASETIME
 = 51,

46 
	mDHCPV4_OPT_MESSAGE
 = 53,

47 
	mDHCPV4_OPT_SERVERID
 = 54,

48 
	mDHCPV4_OPT_RENEW
 = 58,

49 
	mDHCPV4_OPT_REBIND
 = 59,

50 
	mDHCPV4_OPT_IPADDRESS
 = 50,

51 
	mDHCPV4_OPT_HOSTNAME
 = 12,

52 
	mDHCPV4_OPT_REQUEST
 = 17,

53 
	mDHCPV4_OPT_USER_CLASS
 = 77,

54 
	mDHCPV4_OPT_SEARCH_DOMAIN
 = 119,

55 
	mDHCPV4_OPT_END
 = 255,

58 
	sdh˝v4_mesßge
 {

59 
uöt8_t
 
	m›
;

60 
uöt8_t
 
	mhty≥
;

61 
uöt8_t
 
	mhÀn
;

62 
uöt8_t
 
	mh›s
;

63 
uöt32_t
 
	mxid
;

64 
uöt16_t
 
	m£cs
;

65 
uöt16_t
 
	mÊags
;

66 
ö_addr
 
	mcüddr
;

67 
ö_addr
 
	myüddr
;

68 
ö_addr
 
	msüddr
;

69 
ö_addr
 
	mgüddr
;

70 
uöt8_t
 
	mchaddr
[16];

71 
	m¢ame
[64];

72 
	mfûe
[128];

73 
uöt8_t
 
	m›ti⁄s
[312];

76 
	sdh˝v4_assignmít
 {

77 
li°_hód
 
	mhód
;

78 
uöt32_t
 
	maddr
;

79 
time_t
 
	mvÆid_u¡û
;

80 
uöt8_t
 
	mhwaddr
[6];

81 
	mho°«me
[];

84 
	sdh˝v4_›ti⁄
 {

85 
uöt8_t
 
	mty≥
;

86 
uöt8_t
 
	mÀn
;

87 
uöt8_t
 
	md©a
[];

91 
	#dh˝v4_f‹_óch_›ti⁄
(
°¨t
, 
íd
, 
›t
)\

92 
›t
 = (
dh˝v4_›ti⁄
*)(
°¨t
); \

93 &
›t
[1] <(
dh˝v4_›ti⁄
*)(
íd
) && \

94 &
›t
->
d©a
[›t->
Àn
] <(
íd
); \

95 
›t
 = (
dh˝v4_›ti⁄
*)&›t->
d©a
[›t->
Àn
])

	)

	@/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/dhcpv6-ia.c

15 
	~"odh˝d.h
"

16 
	~"dh˝v6.h
"

17 
	~"dh˝v4.h
"

18 
	~"libubox/md5.h
"

19 
	~"libubox/usock.h
"

21 
	~<time.h
>

22 
	~<î∫o.h
>

23 
	~<f˙é.h
>

24 
	~<°dio.h
>

25 
	~<pﬁl.h
>

26 
	~<Æloˇ.h
>

27 
	~<ªsﬁv.h
>

28 
	~<limôs.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~<uni°d.h
>

32 
	~<°dboﬁ.h
>

33 
	~<¨∑/öë.h
>

34 
	~<sys/timîfd.h
>

37 
upd©e
(
öãrÁ˚
 *
iÁ˚
);

38 
ªc⁄f_timî
(
ulo›_timeout
 *
evít
);

39 
ulo›_timeout
 
	gªc⁄f_evít
 = {.
cb
 = 
ªc⁄f_timî
};

40 
uöt32_t
 
	g£rül
 = 0;

41 
uöt8_t
 
	g°©emd5
[16];

44 
	$dh˝v6_ü_öô
()

46 
	`ulo›_timeout_£t
(&
ªc⁄f_evít
, 2000);

48 
	}
}

51 
	$‰ì_dh˝v6_assignmít
(
dh˝v6_assignmít
 *
c
)

53 i‡(
c
->
m™aged_sock
.
fd
.
ªgi°îed
) {

54 
	`u°ªam_‰ì
(&
c
->
m™aged_sock
.
°ªam
);

55 
	`˛o£
(
c
->
m™aged_sock
.
fd
.fd);

58 i‡(
c
->
hód
.
√xt
)

59 
	`li°_dñ
(&
c
->
hód
);

61 
	`‰ì
(
c
->
m™aged
);

62 
	`‰ì
(
c
->
ho°«me
);

63 
	`‰ì
(
c
->
˛as£s
);

64 
	`‰ì
(
c
);

65 
	}
}

68 
	$£tup_dh˝v6_ü_öãrÁ˚
(
öãrÁ˚
 *
iÁ˚
, 
boﬁ
 
íabÀ
)

70 i‡(!
íabÀ
 && 
iÁ˚
->
ü_assignmíts
.
√xt
) {

71 
dh˝v6_assignmít
 *
c
;

72 !
	`li°_em±y
(&
iÁ˚
->
ü_assignmíts
)) {

73 
c
 = 
	`li°_fú°_íåy
(&
iÁ˚
->
ü_assignmíts
, 
dh˝v6_assignmít
, 
hód
);

74 
	`‰ì_dh˝v6_assignmít
(
c
);

78 i‡(
iÁ˚
->
dh˝v6
 =
RELAYD_SERVER
) {

79 i‡(!
iÁ˚
->
ü_assignmíts
.
√xt
)

80 
	`INIT_LIST_HEAD
(&
iÁ˚
->
ü_assignmíts
);

82 i‡(
	`li°_em±y
(&
iÁ˚
->
ü_assignmíts
)) {

83 
dh˝v6_assignmít
 *
b‹dî
 = 
	`ˇŒoc
(1, (*border));

84 i‡(!
b‹dî
) {

85 
	`sy¶og
(
LOG_ERR
, "CÆlo¯Áûed f‹ b‹dî o¿öãrÁ˚ %s", 
iÁ˚
->
i‚ame
);

89 
b‹dî
->
Àngth
 = 64;

90 
	`li°_add
(&
b‹dî
->
hód
, &
iÁ˚
->
ü_assignmíts
);

93 
	`upd©e
(
iÁ˚
);

96 
Àa£
 *lease;

97 
	`li°_f‹_óch_íåy
(
Àa£
, &
Àa£s
, 
hód
) {

99 
dh˝v6_assignmít
 *
a
 = 
	`ˇŒoc
(1, (*aË+ 
Àa£
->
duid_Àn
);

100 i‡(!
a
) {

101 
	`sy¶og
(
LOG_ERR
, "Calloc failed for staticÜeaseássignment on interface %s",

102 
iÁ˚
->
i‚ame
);

106 
a
->
˛id_Àn
 = 
Àa£
->
duid_Àn
;

107 
a
->
Àngth
 = 128;

108 i‡(
Àa£
->
ho°id
) {

109 
a
->
assig√d
 = 
Àa£
->
ho°id
;

111 
uöt32_t
 
i4a
 = 
	`¡ohl
(
Àa£
->
ùaddr
.
s_addr
) & 0xff;

112 
a
->
assig√d
 = ((
i4a
 / 100) << 8) | (((i4a % 100) / 10) << 4) | (i4a % 10);

114 
	`odh˝d_uøndom
(
a
->
key
, (a->key));

115 
	`mem˝y
(
a
->
˛id_d©a
, 
Àa£
->
duid
,á->
˛id_Àn
);

116 
	`mem˝y
(
a
->
mac
, 
Àa£
->mac.
ëhî_addr_o˘ë
, (a->mac));

119 
dh˝v6_assignmít
 *
c
;

120 
	`li°_f‹_óch_íåy
(
c
, &
iÁ˚
->
ü_assignmíts
, 
hód
) {

121 i‡(
c
->
Àngth
 !128 || c->
assig√d
 > 
a
->assigned) {

122 
	`li°_add_èû
(&
a
->
hód
, &
c
->head);

124 } i‡(
c
->
assig√d
 =
a
->assigned) {

130 i‡(
a
->
hód
.
√xt
) {

131 i‡(
Àa£
->
ho°«me
[0]) {

132 
	`‰ì
(
a
->
ho°«me
);

133 
a
->
ho°«me
 = 
	`°rdup
(
Àa£
->hostname);

136 
	`‰ì
(
a
->
˛as£s
);

137 
	`‰ì
(
a
->
ho°«me
);

138 
	`‰ì
(
a
);

143 
	}
}

146 
	$£nd_ªc⁄f
(
öãrÁ˚
 *
iÁ˚
, 
dh˝v6_assignmít
 *
assign
)

149 
dh˝v6_˛õ¡_hódî
 
hdr
;

150 
uöt16_t
 
§vid_ty≥
;

151 
uöt16_t
 
§vid_Àn
;

152 
uöt16_t
 
duid_ty≥
;

153 
uöt16_t
 
h¨dw¨e_ty≥
;

154 
uöt8_t
 
mac
[6];

155 
uöt16_t
 
msg_ty≥
;

156 
uöt16_t
 
msg_Àn
;

157 
uöt8_t
 
msg_id
;

158 
dh˝v6_auth_ªc⁄figuª
 
auth
;

159 
uöt16_t
 
˛id_ty≥
;

160 
uöt16_t
 
˛id_Àn
;

161 
uöt8_t
 
˛id_d©a
[128];

162 } 
	`__©åibuã__
((
∑cked
)Ë
ªc⁄f_msg
 = {

163 .
hdr
 = {
DHCPV6_MSG_RECONFIGURE
, {0, 0, 0}},

164 .
§vid_ty≥
 = 
	`ht⁄s
(
DHCPV6_OPT_SERVERID
),

165 .
§vid_Àn
 = 
	`ht⁄s
(10),

166 .
duid_ty≥
 = 
	`ht⁄s
(3),

167 .
h¨dw¨e_ty≥
 = 
	`ht⁄s
(1),

168 .
msg_ty≥
 = 
	`ht⁄s
(
DHCPV6_OPT_RECONF_MSG
),

169 .
msg_Àn
 = 
	`ht⁄s
(1),

170 .
msg_id
 = 
DHCPV6_MSG_RENEW
,

171 .
auth
 = {
	`ht⁄s
(
DHCPV6_OPT_AUTH
),

172 
	`ht⁄s
((
ªc⁄f_msg
.
auth
) - 4), 3, 1, 0,

173 {
	`ht⁄l
(
	`time
(
NULL
)), ht⁄l(++
£rül
)}, 2, {0}},

174 .
˛id_ty≥
 = 
	`ht⁄s
(
DHCPV6_OPT_CLIENTID
),

175 .
˛id_Àn
 = 
	`ht⁄s
(
assign
->clid_len),

176 .
˛id_d©a
 = {0},

179 
	`odh˝d_gë_mac
(
iÁ˚
, 
ªc⁄f_msg
.
mac
);

180 
	`mem˝y
(
ªc⁄f_msg
.
˛id_d©a
, 
assign
->˛id_d©a,ássign->
˛id_Àn
);

181 
iovec
 
iov
 = {&
ªc⁄f_msg
, ‘ec⁄f_msgË- 128 + 
assign
->
˛id_Àn
};

183 
md5_˘x_t
 
md5
;

184 
uöt8_t
 
£¸ëbyãs
[64];

185 
	`mem£t
(
£¸ëbyãs
, 0, (secretbytes));

186 
	`mem˝y
(
£¸ëbyãs
, 
assign
->
key
, (assign->key));

188 
size_t
 
i
 = 0; i < (
£¸ëbyãs
); ++i)

189 
£¸ëbyãs
[
i
] ^= 0x36;

191 
	`md5_begö
(&
md5
);

192 
	`md5_hash
(
£¸ëbyãs
, (£¸ëbyãs), &
md5
);

193 
	`md5_hash
(
iov
.
iov_ba£
, iov.
iov_Àn
, &
md5
);

194 
	`md5_íd
(
ªc⁄f_msg
.
auth
.
key
, &
md5
);

196 
size_t
 
i
 = 0; i < (
£¸ëbyãs
); ++i) {

197 
£¸ëbyãs
[
i
] ^= 0x36;

198 
£¸ëbyãs
[
i
] ^= 0x5c;

201 
	`md5_begö
(&
md5
);

202 
	`md5_hash
(
£¸ëbyãs
, (£¸ëbyãs), &
md5
);

203 
	`md5_hash
(
ªc⁄f_msg
.
auth
.
key
, 16, &
md5
);

204 
	`md5_íd
(
ªc⁄f_msg
.
auth
.
key
, &
md5
);

206  
	`odh˝d_£nd
(
iÁ˚
->
dh˝v6_evít
.
ulo›
.
fd
, &
assign
->
≥î
, &
iov
, 1, iface);

207 
	}
}

210 
	$dh˝v6_wrôe_°©efûe
()

212 
md5_˘x_t
 
md5
;

213 
	`md5_begö
(&
md5
);

215 i‡(
c⁄fig
.
dh˝_°©efûe
) {

216 
time_t
 
now
 = 
	`odh˝d_time
(), 
wÆl_time
 = 
	`time
(
NULL
);

217 
fd
 = 
	`›í
(
c⁄fig
.
dh˝_°©efûe
, 
O_CREAT
 | 
O_WRONLY
 | 
O_CLOEXEC
, 0644);

218 i‡(
fd
 < 0)

221 
	`lockf
(
fd
, 
F_LOCK
, 0);

222 
	`·runˇã
(
fd
, 0);

224 
FILE
 *
Â
 = 
	`fd›í
(
fd
, "w");

225 i‡(!
Â
) {

226 
	`˛o£
(
fd
);

230 
öãrÁ˚
 *
iÁ˚
;

231 
	`li°_f‹_óch_íåy
(
iÁ˚
, &
öãrÁ˚s
, 
hód
) {

232 i‡(
iÁ˚
->
dh˝v6
 !
RELAYD_SERVER
 && iÁ˚->
dh˝v4
 != RELAYD_SERVER)

235 i‡(
iÁ˚
->
dh˝v6
 =
RELAYD_SERVER
 && iÁ˚->
ü_assignmíts
.
√xt
) {

236 
dh˝v6_assignmít
 *
c
;

237 
	`li°_f‹_óch_íåy
(
c
, &
iÁ˚
->
ü_assignmíts
, 
hód
) {

238 i‡(
c
->
˛id_Àn
 =0 || c->
m™aged_size
 < 0)

241 
ùbuf
[
INET6_ADDRSTRLEN
];

242 
Àa£buf
[512];

243 
duidbuf
[264];

244 
	`odh˝d_hexlify
(
duidbuf
, 
c
->
˛id_d©a
, c->
˛id_Àn
);

247 
l
 = 
	`¢¥ötf
(
Àa£buf
, (leasebuf), "# %s %s %x %s %u %x %u ",

248 
iÁ˚
->
i‚ame
, 
duidbuf
, 
	`¡ohl
(
c
->
üid
),

249 (
c
->
ho°«me
 ? c->hostname : "-"),

250 ()(
c
->
vÆid_u¡û
 > 
now
 ?

251 (
c
->
vÆid_u¡û
 - 
now
 + 
wÆl_time
) : 0),

252 
c
->
assig√d
, ()c->
Àngth
);

254 
ö6_addr
 
addr
;

255 
odh˝d_ùaddr
 *
addrs
 = (
c
->
m™aged
Ë? c->m™aged : 
iÁ˚
->
ü_addr
;

256 
size_t
 
addæí
 = (
c
->
m™aged
Ë? (size_t)c->
m™aged_size
 : 
iÁ˚
->
ü_addr_Àn
;

258 
size_t
 
i
 = 0; i < 
addæí
; ++i) {

259 i‡(
addrs
[
i
].
¥efix
 > 96)

261 i‡(
c
->
vÆid_u¡û
 <
now
)

264 
addr
 = 
addrs
[
i
].addr;

265 i‡(
c
->
Àngth
 == 128)

266 
addr
.
s6_addr32
[3] = 
	`ht⁄l
(
c
->
assig√d
);

268 
addr
.
s6_addr32
[1] |
	`ht⁄l
(
c
->
assig√d
);

270 
	`öë_¡›
(
AF_INET6
, &
addr
, 
ùbuf
, (ipbuf) - 1);

272 i‡(
c
->
Àngth
 =128 && c->
ho°«me
) {

273 
	`Âuts
(
ùbuf
, 
Â
);

275 
b
[256];

276 i‡(
	`dn_ex∑nd
(
iÁ˚
->
£¨ch
, iÁ˚->£¨ch + iÁ˚->
£¨ch_Àn
,

277 
iÁ˚
->
£¨ch
, 
b
, (b)) > 0)

278 
	`Ârötf
(
Â
, "\t%s.%s", 
c
->
ho°«me
, 
b
);

280 
	`Ârötf
(
Â
, "\t%s\n", 
c
->
ho°«me
);

281 
	`md5_hash
(
ùbuf
, 
	`°æí
(ùbuf), &
md5
);

282 
	`md5_hash
(
c
->
ho°«me
, 
	`°æí
(c->ho°«me), &
md5
);

285 
l
 +
	`¢¥ötf
(
Àa£buf
 +Ü, ÷ó£bufË-Ü, "%s/%d ", 
ùbuf
,

286 (
c
->
m™aged_size
Ë? 
addrs
[
i
].
¥efix
 : c->
Àngth
);

288 
Àa£buf
[
l
 - 1] = '\n';

289 
	`fwrôe
(
Àa£buf
, 1, 
l
, 
Â
);

293 i‡(
iÁ˚
->
dh˝v4
 =
RELAYD_SERVER
 && iÁ˚->
dh˝v4_assignmíts
.
√xt
) {

294 
dh˝v4_assignmít
 *
c
;

295 
	`li°_f‹_óch_íåy
(
c
, &
iÁ˚
->
dh˝v4_assignmíts
, 
hód
) {

296 
ùbuf
[
INET6_ADDRSTRLEN
];

297 
Àa£buf
[512];

298 
duidbuf
[16];

299 
	`odh˝d_hexlify
(
duidbuf
, 
c
->
hwaddr
, (c->hwaddr));

302 
l
 = 
	`¢¥ötf
(
Àa£buf
, (leasebuf), "# %s %s ipv4 %s %u %x 32 ",

303 
iÁ˚
->
i‚ame
, 
duidbuf
,

304 (
c
->
ho°«me
 ? c->hostname : "-"),

305 ()(
c
->
vÆid_u¡û
 > 
now
 ?

306 (
c
->
vÆid_u¡û
 - 
now
 + 
wÆl_time
) : 0),

307 
c
->
addr
);

309 
ö_addr
 
addr
 = {
	`ht⁄l
(
c
->addr)};

310 
	`öë_¡›
(
AF_INET
, &
addr
, 
ùbuf
, (ipbuf) - 1);

312 i‡(
c
->
ho°«me
[0]) {

313 
	`Âuts
(
ùbuf
, 
Â
);

315 
b
[256];

316 i‡(
	`dn_ex∑nd
(
iÁ˚
->
£¨ch
, iÁ˚->£¨ch + iÁ˚->
£¨ch_Àn
,

317 
iÁ˚
->
£¨ch
, 
b
, (b)) > 0)

318 
	`Ârötf
(
Â
, "\t%s.%s", 
c
->
ho°«me
, 
b
);

320 
	`Ârötf
(
Â
, "\t%s\n", 
c
->
ho°«me
);

321 
	`md5_hash
(
ùbuf
, 
	`°æí
(ùbuf), &
md5
);

322 
	`md5_hash
(
c
->
ho°«me
, 
	`°æí
(c->ho°«me), &
md5
);

325 
l
 +
	`¢¥ötf
(
Àa£buf
 +Ü, ÷ó£bufË-Ü, "%s/32 ", 
ùbuf
);

326 
Àa£buf
[
l
 - 1] = '\n';

327 
	`fwrôe
(
Àa£buf
, 1, 
l
, 
Â
);

332 
	`f˛o£
(
Â
);

335 
uöt8_t
 
√wmd5
[16];

336 
	`md5_íd
(
√wmd5
, &
md5
);

338 i‡(
c⁄fig
.
dh˝_cb
 && 
	`memcmp
(
√wmd5
, 
°©emd5
, (newmd5))) {

339 
	`mem˝y
(
°©emd5
, 
√wmd5
, (statemd5));

340 *
¨gv
[2] = {
c⁄fig
.
dh˝_cb
, 
NULL
};

341 i‡(!
	`vf‹k
()) {

342 
	`execv
(
¨gv
[0],árgv);

343 
	`_exô
(128);

346 
	}
}

349 
	$≠∂y_Àa£
(
öãrÁ˚
 *
iÁ˚
, 
dh˝v6_assignmít
 *
a
, 
boﬁ
 
add
)

351 i‡(
a
->
Àngth
 > 64 ||á->
m™aged_size
 < 0)

354 
odh˝d_ùaddr
 *
addrs
 = (
a
->
m™aged
Ë?á->m™aged : 
iÁ˚
->
ü_addr
;

355 
size_t
 
addæí
 = (
a
->
m™aged
Ë? (size_tÔ->
m™aged_size
 : 
iÁ˚
->
ü_addr_Àn
;

357 
size_t
 
i
 = 0; i < 
addæí
; ++i) {

358 
ö6_addr
 
¥efix
 = 
addrs
[
i
].
addr
;

359 
¥efix
.
s6_addr32
[1] |
	`ht⁄l
(
a
->
assig√d
);

360 
	`odh˝d_£tup_rouã
(&
¥efix
, (
a
->
m™aged_size
Ë? 
addrs
[
i
].¥efix :á->
Àngth
,

361 
iÁ˚
, &
a
->
≥î
.
sö6_addr
, 
add
);

363 
	}
}

367 
	$m™aged_h™dÀ_pd_d©a
(
u°ªam
 *
s
, 
_unu£d
 
byãs_√w
)

369 
dh˝v6_assignmít
 *
c
 = 
	`c⁄èöî_of
(
s
, dh˝v6_assignmít, 
m™aged_sock
);

370 
time_t
 
now
 = 
	`odh˝d_time
();

371 
boﬁ
 
fú°
 = 
c
->
m™aged_size
 < 0;

374 
≥ndög
;

375 *
d©a
 = 
	`u°ªam_gë_ªad_buf
(
s
, &
≥ndög
);

376 *
íd
 = 
	`memmem
(
d©a
, 
≥ndög
, "\n\n", 2);

378 i‡(!
íd
)

381 
íd
 += 2;

382 
íd
[-1] = 0;

384 
c
->
m™aged_size
 = 0;

385 i‡(
c
->
ac˚±_ªc⁄f
)

386 
c
->
ªc⁄f_˙t
 = 1;

388 *
ßvïå
;

389 *
löe
 = 
	`°πok_r
(
d©a
, "\n", &
ßvïå
);Üöe;Üöê°πok_r(
NULL
, "\n", &saveptr)) {

390 
c
->
m™aged
 = 
	`ªÆloc
(c->m™aged, (c->
m™aged_size
 + 1) * (*c->managed));

391 
odh˝d_ùaddr
 *
n
 = &
c
->
m™aged
[c->
m™aged_size
];

393 *
ßvïå2
, *
x
 = 
	`°πok_r
(
löe
, "/", &saveptr2);

394 i‡(!
x
 || 
	`öë_±⁄
(
AF_INET6
, x, &
n
->
addr
) < 1)

397 
x
 = 
	`°πok_r
(
NULL
, ",", &
ßvïå2
);

398 i‡(
	`ssˇnf
(
x
, "%hhu", &
n
->
¥efix
) < 1)

401 
x
 = 
	`°πok_r
(
NULL
, ",", &
ßvïå2
);

402 i‡(
	`ssˇnf
(
x
, "%u", &
n
->
¥e„ºed
) < 1)

405 
x
 = 
	`°πok_r
(
NULL
, ",", &
ßvïå2
);

406 i‡(
	`ssˇnf
(
x
, "%u", &
n
->
vÆid
) < 1)

409 i‡(
n
->
¥e„ºed
 >Ç->
vÆid
)

412 i‡(
UINT32_MAX
 - 
now
 < 
n
->
¥e„ºed
)

413 
n
->
¥e„ºed
 = 
UINT32_MAX
;

415 
n
->
¥e„ºed
 +
now
;

417 i‡(
UINT32_MAX
 - 
now
 < 
n
->
vÆid
)

418 
n
->
vÆid
 = 
UINT32_MAX
;

420 
n
->
vÆid
 +
now
;

422 
n
->
has_˛ass
 = 
Ál£
;

423 
n
->
˛ass
 = 0;

424 
n
->
d¥efix
 = 0;

426 ++
c
->
m™aged_size
;

429 
	`u°ªam_c⁄sume
(
s
, 
íd
 - 
d©a
);

432 i‡(
fú°
 && 
c
->
m™aged_size
 == 0)

433 
	`‰ì_dh˝v6_assignmít
(
c
);

434 i‡(
fú°
)

435 
c
->
vÆid_u¡û
 = 
now
 + 150;

436 
	}
}

440 
	$m™aged_h™dÀ_pd_d⁄e
(
u°ªam
 *
s
)

442 
dh˝v6_assignmít
 *
c
 = 
	`c⁄èöî_of
(
s
, dh˝v6_assignmít, 
m™aged_sock
);

443 
c
->
vÆid_u¡û
 = 
	`odh˝d_time
() + 15;

444 
c
->
m™aged_size
 = 0;

445 i‡(
c
->
ac˚±_ªc⁄f
)

446 
c
->
ªc⁄f_˙t
 = 1;

447 
	}
}

451 
boﬁ
 
	$assign_pd
(
öãrÁ˚
 *
iÁ˚
, 
dh˝v6_assignmít
 *
assign
)

453 
dh˝v6_assignmít
 *
c
;

455 i‡(
iÁ˚
->
dh˝v6_pd_m™agî
[0]) {

456 
fd
 = 
	`usock
(
USOCK_UNIX
 | 
USOCK_TCP
, 
iÁ˚
->
dh˝v6_pd_m™agî
, 
NULL
);

457 i‡(
fd
 >= 0) {

458 
üidbuf
[298];

459 
	`odh˝d_hexlify
(
üidbuf
, 
assign
->
˛id_d©a
,ássign->
˛id_Àn
);

461 
assign
->
m™aged_sock
.
°ªam
.
nŸify_ªad
 = 
m™aged_h™dÀ_pd_d©a
;

462 
assign
->
m™aged_sock
.
°ªam
.
nŸify_°©e
 = 
m™aged_h™dÀ_pd_d⁄e
;

463 
	`u°ªam_fd_öô
(&
assign
->
m™aged_sock
, 
fd
);

464 
	`u°ªam_¥ötf
(&
assign
->
m™aged_sock
.
°ªam
, "%s,%x\n::/%d,0,0\n\n",

465 
üidbuf
, 
assign
->
üid
,ássign->
Àngth
);

466 
	`u°ªam_wrôe_≥ndög
(&
assign
->
m™aged_sock
.
°ªam
);

467 
assign
->
m™aged_size
 = -1;

468 
assign
->
vÆid_u¡û
 = 
	`odh˝d_time
() + 15;

469 
	`li°_add
(&
assign
->
hód
, &
iÁ˚
->
ü_assignmíts
);

472 
pﬁlfd
 
pfd
 = { .
fd
 = fd, .
evíts
 = 
POLLIN
 };

473 
	`pﬁl
(&
pfd
, 1, 250);

474 
	`m™aged_h™dÀ_pd_d©a
(&
assign
->
m™aged_sock
.
°ªam
, 0);

476 i‡(
	`f˙é
(
fd
, 
F_GETFL
Ë>0 && 
assign
->
m™aged_size
 > 0)

477  
åue
;

480  
Ál£
;

481 } i‡(
iÁ˚
->
ü_addr_Àn
 < 1) {

482  
Ál£
;

486 
uöt32_t
 
cuºít
 = 1, 
asize
 = (1 << (64 - 
assign
->
Àngth
)) - 1;

487 i‡(
assign
->
assig√d
) {

488 
	`li°_f‹_óch_íåy
(
c
, &
iÁ˚
->
ü_assignmíts
, 
hód
) {

489 i‡(
c
->
Àngth
 == 128 || c->length == 0)

492 i‡(
assign
->
assig√d
 >
cuºít
 &&ássign->assig√d + 
asize
 < 
c
->assigned) {

493 
	`li°_add_èû
(&
assign
->
hód
, &
c
->head);

494 
	`≠∂y_Àa£
(
iÁ˚
, 
assign
, 
åue
);

495  
åue
;

498 i‡(
c
->
assig√d
 != 0)

499 
cuºít
 = (
c
->
assig√d
 + (1 << (64 - c->
Àngth
)));

504 
cuºít
 = 1;

505 
	`li°_f‹_óch_íåy
(
c
, &
iÁ˚
->
ü_assignmíts
, 
hód
) {

506 i‡(
c
->
Àngth
 == 128 || c->length == 0)

509 
cuºít
 = (cuºíà+ 
asize
) & (~asize);

510 i‡(
cuºít
 + 
asize
 < 
c
->
assig√d
) {

511 
assign
->
assig√d
 = 
cuºít
;

512 
	`li°_add_èû
(&
assign
->
hód
, &
c
->head);

513 
	`≠∂y_Àa£
(
iÁ˚
, 
assign
, 
åue
);

514  
åue
;

517 i‡(
c
->
assig√d
 != 0)

518 
cuºít
 = (
c
->
assig√d
 + (1 << (64 - c->
Àngth
)));

521  
Ál£
;

522 
	}
}

525 
boﬁ
 
	$assign_«
(
öãrÁ˚
 *
iÁ˚
, 
dh˝v6_assignmít
 *
assign
)

527 
boﬁ
 
m©ch
 = 
Ál£
;

528 
size_t
 
i
 = 0; i < 
iÁ˚
->
ü_addr_Àn
; ++i) {

529 i‡(!
iÁ˚
->
ü_addr
[
i
].
has_˛ass
) {

530 
m©ch
 = 
åue
;

532 } i‡(
assign
->
˛as£s_˙t
) {

533 
size_t
 
j
 = 0; j < 
assign
->
˛as£s_˙t
; ++j)

534 i‡(
assign
->
˛as£s
[
j
] =
iÁ˚
->
ü_addr
[
i
].
˛ass
)

535 
m©ch
 = 
åue
;

536 } i‡(
assign
->
Æl_˛ass
) {

537 
m©ch
 = 
åue
;

541 i‡(!
m©ch
)

542  
Ál£
;

545 
uöt32_t
 
£ed
 = 0;

546 
size_t
 
i
 = 0; i < 
assign
->
˛id_Àn
; ++i)

547 
£ed
 +
assign
->
˛id_d©a
[
i
];

548 
	`§™d
(
£ed
);

551 
size_t
 
i
 = 0; i < 100; ++i) {

552 
uöt32_t
 
åy
;

553 dÿ
åy
 = ((
uöt32_t
)
	`ønd
()) % 0x0fff; try < 0x100);

555 
dh˝v6_assignmít
 *
c
;

556 
	`li°_f‹_óch_íåy
(
c
, &
iÁ˚
->
ü_assignmíts
, 
hód
) {

557 i‡(
c
->
Àngth
 == 0)

560 i‡(
c
->
assig√d
 > 
åy
 || c->
Àngth
 != 128) {

561 
assign
->
assig√d
 = 
åy
;

562 
	`li°_add_èû
(&
assign
->
hód
, &
c
->head);

563  
åue
;

564 } i‡(
c
->
assig√d
 =
åy
) {

570  
Ál£
;

571 
	}
}

574 
	$¥efixcmp
(c⁄° *
va
, c⁄° *
vb
)

576 c⁄° 
odh˝d_ùaddr
 *
a
 = 
va
, *
b
 = 
vb
;

577 
uöt32_t
 
a_¥ef
 = ((
a
->
addr
.
s6_addr
[0] & 0x„Ë!0xfcË?á->
¥e„ºed
 : 1;

578 
uöt32_t
 
b_¥ef
 = ((
b
->
addr
.
s6_addr
[0] & 0x„Ë!0xfcË? b->
¥e„ºed
 : 1;

579  (
a_¥ef
 < 
b_¥ef
) ? 1 : (a_pref > b_pref) ? -1 : 0;

580 
	}
}

583 
	$upd©e
(
öãrÁ˚
 *
iÁ˚
)

585 
odh˝d_ùaddr
 
addr
[8];

586 
	`mem£t
(
addr
, 0, (addr));

587 
Àn
 = 
	`odh˝d_gë_öãrÁ˚_addªs£s
(
iÁ˚
->
ifödex
, 
addr
, 8);

589 i‡(
Àn
 < 0)

592 
	`qs‹t
(
addr
, 
Àn
, (*addr), 
¥efixcmp
);

594 
time_t
 
now
 = 
	`odh˝d_time
();

595 
mö¥efix
 = -1;

597 
i
 = 0; i < 
Àn
; ++i) {

598 i‡(
addr
[
i
].
¥e„ºed
 > 0 &&áddr[i].
¥efix
 > 
mö¥efix
)

599 
mö¥efix
 = 
addr
[
i
].
¥efix
;

601 
addr
[
i
].addr.
s6_addr32
[3] = 0;

603 i‡(
addr
[
i
].
¥e„ºed
 < 
UINT32_MAX
 - 
now
)

604 
addr
[
i
].
¥e„ºed
 +
now
;

606 i‡(
addr
[
i
].
vÆid
 < 
UINT32_MAX
 - 
now
)

607 
addr
[
i
].
vÆid
 +
now
;

610 
dh˝v6_assignmít
 *
b‹dî
 = 
	`li°_œ°_íåy
(&
iÁ˚
->
ü_assignmíts
, dh˝v6_assignmít, 
hód
);

611 
b‹dî
->
assig√d
 = 1 << (64 - 
mö¥efix
);

613 
boﬁ
 
ch™ge
 = 
Àn
 !()
iÁ˚
->
ü_addr_Àn
;

614 
i
 = 0; !
ch™ge
 && i < 
Àn
; ++i)

615 i‡(
addr
[
i
].addr.
s6_addr32
[0] !
iÁ˚
->
ü_addr
[i].addr.s6_addr32[0] ||

616 
addr
[
i
].addr.
s6_addr32
[1] !
iÁ˚
->
ü_addr
[i].addr.s6_addr32[1] ||

617 (
addr
[
i
].
¥e„ºed
 > 0Ë!(
iÁ˚
->
ü_addr
[i].preferred > 0) ||

618 (
addr
[
i
].
vÆid
 > (
uöt32_t
)
now
 + 7200) !=

619 (
iÁ˚
->
ü_addr
[
i
].
vÆid
 > (
uöt32_t
)
now
 + 7200))

620 
ch™ge
 = 
åue
;

622 i‡(
ch™ge
) {

623 
dh˝v6_assignmít
 *
c
;

624 
	`li°_f‹_óch_íåy
(
c
, &
iÁ˚
->
ü_assignmíts
, 
hód
)

625 i‡(
c
 !
b‹dî
 && !
iÁ˚
->
m™aged
)

626 
	`≠∂y_Àa£
(
iÁ˚
, 
c
, 
Ál£
);

629 
	`mem˝y
(
iÁ˚
->
ü_addr
, 
addr
, 
Àn
 * (*addr));

630 
iÁ˚
->
ü_addr_Àn
 = 
Àn
;

632 i‡(
ch™ge
) {

633 
li°_hód
 
ªassign
 = 
	`LIST_HEAD_INIT
(reassign);

634 
dh˝v6_assignmít
 *
c
, *
d
;

635 
	`li°_f‹_óch_íåy_ß„
(
c
, 
d
, &
iÁ˚
->
ü_assignmíts
, 
hód
) {

636 i‡(
c
->
˛id_Àn
 =0 || c->
vÆid_u¡û
 < 
now
 || c->
m™aged_size
)

639 i‡(
c
->
Àngth
 < 128 && c->
assig√d
 >
b‹dî
->assigned && c != border)

640 
	`li°_move
(&
c
->
hód
, &
ªassign
);

641 i‡(
c
 !
b‹dî
)

642 
	`≠∂y_Àa£
(
iÁ˚
, 
c
, 
åue
);

644 i‡(
c
->
ac˚±_ªc⁄f
 && c->
ªc⁄f_˙t
 == 0) {

645 
c
->
ªc⁄f_˙t
 = 1;

646 
c
->
ªc⁄f_£¡
 = 
now
;

647 
	`£nd_ªc⁄f
(
iÁ˚
, 
c
);

650 
dh˝v6_assignmít
 *
a
;

651 
	`li°_f‹_óch_íåy
(
a
, &
iÁ˚
->
ü_assignmíts
, 
hód
)

652 i‡(
a
 !
c
 &&á->
˛id_Àn
 == c->clid_len &&

653 !
	`memcmp
(
a
->
˛id_d©a
, 
c
->˛id_d©a,á->
˛id_Àn
))

654 
c
->
ªc⁄f_˙t
 = 
INT_MAX
;

658 !
	`li°_em±y
(&
ªassign
)) {

659 
c
 = 
	`li°_fú°_íåy
(&
ªassign
, 
dh˝v6_assignmít
, 
hód
);

660 
	`li°_dñ
(&
c
->
hód
);

661 i‡(!
	`assign_pd
(
iÁ˚
, 
c
)) {

662 
c
->
assig√d
 = 0;

663 
	`li°_add
(&
c
->
hód
, &
iÁ˚
->
ü_assignmíts
);

667 
	`dh˝v6_wrôe_°©efûe
();

669 
	}
}

672 
	$ªc⁄f_timî
(
ulo›_timeout
 *
evít
)

674 
time_t
 
now
 = 
	`odh˝d_time
();

675 
öãrÁ˚
 *
iÁ˚
;

676 
	`li°_f‹_óch_íåy
(
iÁ˚
, &
öãrÁ˚s
, 
hód
) {

677 i‡(
iÁ˚
->
dh˝v6
 !
RELAYD_SERVER
 || iÁ˚->
ü_assignmíts
.
√xt
 =
NULL
)

680 
dh˝v6_assignmít
 *
a
, *
n
;

681 
	`li°_f‹_óch_íåy_ß„
(
a
, 
n
, &
iÁ˚
->
ü_assignmíts
, 
hód
) {

682 i‡(
a
->
vÆid_u¡û
 < 
now
) {

683 i‡((
a
->
Àngth
 < 128 &&á->
˛id_Àn
 > 0) ||

684 (
a
->
Àngth
 =128 &&á->
˛id_Àn
 == 0)) {

685 
	`li°_dñ
(&
a
->
hód
);

686 
	`‰ì_dh˝v6_assignmít
(
a
);

688 } i‡(
a
->
ªc⁄f_˙t
 > 0 &&á->reconf_cnt < 8 &&

689 
now
 > 
a
->
ªc⁄f_£¡
 + (1 <<á->
ªc⁄f_˙t
)) {

690 ++
a
->
ªc⁄f_˙t
;

691 
a
->
ªc⁄f_£¡
 = 
now
;

692 
	`£nd_ªc⁄f
(
iÁ˚
, 
a
);

696 
	`ulo›_timeout_£t
(
evít
, 2000);

697 
	}
}

700 
size_t
 
	$≠≥nd_ª∂y
(
uöt8_t
 *
buf
, 
size_t
 
buÊí
, 
uöt16_t
 
°©us
,

701 c⁄° 
dh˝v6_ü_hdr
 *
ü
, 
dh˝v6_assignmít
 *
a
,

702 
öãrÁ˚
 *
iÁ˚
, 
boﬁ
 
ªque°
)

704 i‡(
buÊí
 < (*
ü
Ë+ (
dh˝v6_ü_¥efix
))

707 
dh˝v6_ü_hdr
 
out
 = {
ü
->
ty≥
, 0, ia->
üid
, 0, 0};

708 
size_t
 
d©Æí
 = (
out
);

709 
time_t
 
now
 = 
	`odh˝d_time
();

711 i‡(
°©us
) {

712 
	`__©åibuã__
((
∑cked
)) {

713 
uöt16_t
 
ty≥
;

714 
uöt16_t
 
Àn
;

715 
uöt16_t
 
vÆue
;

716 } 
°©
 = {
	`ht⁄s
(
DHCPV6_OPT_STATUS
), htons((stat) - 4),

717 
	`ht⁄s
(
°©us
)};

719 
	`mem˝y
(
buf
 + 
d©Æí
, &
°©
, (stat));

720 
d©Æí
 +(
°©
);

722 i‡(
a
) {

723 
uöt32_t
 
Àa£time
 = 
iÁ˚
->
dh˝v4_Àa£time
;

724 i‡(
Àa£time
 == 0)

725 
Àa£time
 = 3600;

726 i‡(
Àa£time
 < 60)

727 
Àa£time
 = 60;

729 
uöt32_t
 
¥ef
 = 
Àa£time
;

730 
uöt32_t
 
vÆid
 = 
Àa£time
;

732 
odh˝d_ùaddr
 *
addrs
 = (
a
->
m™aged
Ë?á->m™aged : 
iÁ˚
->
ü_addr
;

733 
size_t
 
addæí
 = (
a
->
m™aged
Ë? (size_tÔ->
m™aged_size
 : 
iÁ˚
->
ü_addr_Àn
;

735 
size_t
 
i
 = 0; i < 
addæí
; ++i) {

736 
boﬁ
 
m©ch
 = 
åue
;

737 i‡(
addrs
[
i
].
has_˛ass
) {

738 
m©ch
 = 
Ál£
;

739 i‡(
a
->
˛as£s_˙t
) {

740 
size_t
 
j
 = 0; j < 
a
->
˛as£s_˙t
; ++j)

741 i‡(
a
->
˛as£s
[
j
] =
addrs
[
i
].
˛ass
)

742 
m©ch
 = 
åue
;

743 } i‡(
a
->
Æl_˛ass
) {

744 
m©ch
 = 
åue
;

748 i‡(!
m©ch
)

751 
uöt32_t
 
¥efix_¥ef
 = 
addrs
[
i
].
¥e„ºed
 - 
now
;

752 
uöt32_t
 
¥efix_vÆid
 = 
addrs
[
i
].
vÆid
 - 
now
;

754 i‡(
addrs
[
i
].
¥efix
 > 96 ||

755 
addrs
[
i
].
¥e„ºed
 <(
uöt32_t
)
now
)

758 i‡(
¥efix_¥ef
 > 86400)

759 
¥efix_¥ef
 = 86400;

761 i‡(
¥efix_vÆid
 > 86400)

762 
¥efix_vÆid
 = 86400;

764 #ifde‡
DHCPV6_OPT_PREFIX_CLASS


766 
uöt16_t
 
code
;

767 
uöt16_t
 
Àngth
;

768 
uöt16_t
 
˛ass
;

769 } 
p˛ass
 = {
	`ht⁄s
(
DHCPV6_OPT_PREFIX_CLASS
),

770 
	`ht⁄s
(2), ht⁄s(
iÁ˚
->
ü_addr
[
i
].
˛ass
)};

773 i‡(
a
->
Àngth
 < 128) {

774 
dh˝v6_ü_¥efix
 
p
 = {

775 .
ty≥
 = 
	`ht⁄s
(
DHCPV6_OPT_IA_PREFIX
),

776 .
Àn
 = 
	`ht⁄s
((
p
) - 4),

777 .
¥e„ºed
 = 
	`ht⁄l
(
¥efix_¥ef
),

778 .
vÆid
 = 
	`ht⁄l
(
¥efix_vÆid
),

779 .
¥efix
 = (
a
->
m™aged_size
Ë? 
addrs
[
i
].¥efix :á->
Àngth
,

780 .
addr
 = 
addrs
[
i
].addr

782 
p
.
addr
.
s6_addr32
[1] |
	`ht⁄l
(
a
->
assig√d
);

784 
size_t
 
íåÀn
 = (
p
) - 4;

786 #ifde‡
DHCPV6_OPT_PREFIX_CLASS


787 i‡(
iÁ˚
->
ü_addr
[
i
].
has_˛ass
) {

788 
íåÀn
 +(
p˛ass
);

789 
p
.
Àn
 = 
	`ht⁄s
(
íåÀn
);

793 i‡(
d©Æí
 + 
íåÀn
 + 4 > 
buÊí
 ||

794 (
a
->
assig√d
 =0 &&á->
m™aged_size
 == 0))

797 
	`mem˝y
(
buf
 + 
d©Æí
, &
p
, (p));

798 #ifde‡
DHCPV6_OPT_PREFIX_CLASS


799 
	`mem˝y
(
buf
 + 
d©Æí
 + (
p
), &
p˛ass
, (pclass));

801 
d©Æí
 +
íåÀn
 + 4;

803 
dh˝v6_ü_addr
 
n
 = {

804 .
ty≥
 = 
	`ht⁄s
(
DHCPV6_OPT_IA_ADDR
),

805 .
Àn
 = 
	`ht⁄s
((
n
) - 4),

806 .
addr
 = 
addrs
[
i
].addr,

807 .
¥e„ºed
 = 
	`ht⁄l
(
¥efix_¥ef
),

808 .
vÆid
 = 
	`ht⁄l
(
¥efix_vÆid
)

810 
n
.
addr
.
s6_addr32
[3] = 
	`ht⁄l
(
a
->
assig√d
);

811 
size_t
 
íåÀn
 = (
n
) - 4;

813 #ifde‡
DHCPV6_OPT_PREFIX_CLASS


814 i‡(
iÁ˚
->
ü_addr
[
i
].
has_˛ass
) {

815 
íåÀn
 +(
p˛ass
);

816 
n
.
Àn
 = 
	`ht⁄s
(
íåÀn
);

820 i‡(
d©Æí
 + 
íåÀn
 + 4 > 
buÊí
 || 
a
->
assig√d
 == 0)

823 
	`mem˝y
(
buf
 + 
d©Æí
, &
n
, (n));

824 #ifde‡
DHCPV6_OPT_PREFIX_CLASS


825 
	`mem˝y
(
buf
 + 
d©Æí
 + (
n
), &
p˛ass
, (pclass));

827 
d©Æí
 +
íåÀn
 + 4;

831 i‡(
¥efix_¥ef
 > 0) {

832 i‡(
¥efix_¥ef
 < 
¥ef
)

833 
¥ef
 = 
¥efix_¥ef
;

835 i‡(
¥efix_vÆid
 < 
vÆid
)

836 
vÆid
 = 
¥efix_vÆid
;

840 
a
->
vÆid_u¡û
 = 
vÆid
 + 
now
;

841 
out
.
t1
 = 
	`ht⁄l
(
¥ef
 * 5 / 10);

842 
out
.
t2
 = 
	`ht⁄l
(
¥ef
 * 8 / 10);

844 i‡(!
out
.
t1
)

845 
out
.
t1
 = 
	`ht⁄l
(1);

847 i‡(!
out
.
t2
)

848 
out
.
t2
 = 
	`ht⁄l
(1);

851 i‡(!
ªque°
) {

852 
uöt8_t
 *
od©a
, *
íd
 = ((uöt8_t*)
ü
Ë+ 
	`ht⁄s
(ü->
Àn
) + 4;

853 
uöt16_t
 
Ÿy≥
, 
ﬁí
;

854 
	`dh˝v6_f‹_óch_›ti⁄
((
uöt8_t
*)&
ü
[1], 
íd
, 
Ÿy≥
, 
ﬁí
, 
od©a
) {

855 
dh˝v6_ü_¥efix
 *
p
 = (dh˝v6_ü_¥efix*)&
od©a
[-4];

856 
dh˝v6_ü_addr
 *
n
 = (dh˝v6_ü_addr*)&
od©a
[-4];

857 i‡((
Ÿy≥
 !
DHCPV6_OPT_IA_PREFIX
 || 
ﬁí
 < (*
p
) - 4) &&

858 (
Ÿy≥
 !
DHCPV6_OPT_IA_ADDR
 || 
ﬁí
 < (*
n
) - 4))

861 
boﬁ
 
found
 = 
Ál£
;

862 i‡(
a
) {

863 
odh˝d_ùaddr
 *
addrs
 = (
a
->
m™aged
Ë?á->m™aged : 
iÁ˚
->
ü_addr
;

864 
size_t
 
addæí
 = (
a
->
m™aged
Ë? (size_tÔ->
m™aged_size
 : 
iÁ˚
->
ü_addr_Àn
;

866 
size_t
 
i
 = 0; i < 
addæí
; ++i) {

867 i‡(
addrs
[
i
].
¥efix
 > 96 ||

868 
addrs
[
i
].
¥e„ºed
 <(
uöt32_t
)
now
)

871 
ö6_addr
 
addr
 = 
addrs
[
i
].addr;

872 i‡(
ü
->
ty≥
 =
	`ht⁄s
(
DHCPV6_OPT_IA_PD
)) {

873 
addr
.
s6_addr32
[1] |
	`ht⁄l
(
a
->
assig√d
);

875 i‡(!
	`memcmp
(&
p
->
addr
, &addr, (addr)) &&

876 
p
->
¥efix
 =((
a
->
m™aged
Ë? 
addrs
[
i
].¥efix :á->
Àngth
))

877 
found
 = 
åue
;

879 
addr
.
s6_addr32
[3] = 
	`ht⁄l
(
a
->
assig√d
);

881 i‡(!
	`memcmp
(&
n
->
addr
, &addr, (addr)))

882 
found
 = 
åue
;

887 i‡(!
found
) {

888 i‡(
Ÿy≥
 =
DHCPV6_OPT_IA_PREFIX
) {

889 
dh˝v6_ü_¥efix
 
öv
 = {

890 .
ty≥
 = 
	`ht⁄s
(
DHCPV6_OPT_IA_PREFIX
),

891 .
Àn
 = 
	`ht⁄s
((
öv
) - 4),

892 .
¥e„ºed
 = 0,

893 .
vÆid
 = 0,

894 .
¥efix
 = 
p
->prefix,

895 .
addr
 = 
p
->addr

898 i‡(
d©Æí
 + (
öv
Ë> 
buÊí
)

901 
	`mem˝y
(
buf
 + 
d©Æí
, &
öv
, (inv));

902 
d©Æí
 +(
öv
);

904 
dh˝v6_ü_addr
 
öv
 = {

905 .
ty≥
 = 
	`ht⁄s
(
DHCPV6_OPT_IA_ADDR
),

906 .
Àn
 = 
	`ht⁄s
((
öv
) - 4),

907 .
addr
 = 
n
->addr,

908 .
¥e„ºed
 = 0,

909 .
vÆid
 = 0

912 i‡(
d©Æí
 + (
öv
Ë> 
buÊí
)

915 
	`mem˝y
(
buf
 + 
d©Æí
, &
öv
, (inv));

916 
d©Æí
 +(
öv
);

923 
out
.
Àn
 = 
	`ht⁄s
(
d©Æí
 - 4);

924 
	`mem˝y
(
buf
, &
out
, (out));

925  
d©Æí
;

926 
	}
}

929 
	$dh˝v6_log
(
uöt8_t
 
msgty≥
, 
öãrÁ˚
 *
iÁ˚
, 
time_t
 
now
,

930 c⁄° *
duidbuf
, 
boﬁ
 
is_pd
, 
dh˝v6_assignmít
 *
a
, 
code
)

932 c⁄° *
ty≥
 = "UNKNOWN";

933 c⁄° *
°©us
 = "UNKNOWN";

935 i‡(
msgty≥
 =
DHCPV6_MSG_RENEW
)

938 
msgty≥
) {

939 
DHCPV6_MSG_SOLICIT
:

940 
ty≥
 = "SOLICIT";

942 
DHCPV6_MSG_REQUEST
:

943 
ty≥
 = "REQUEST";

945 
DHCPV6_MSG_CONFIRM
:

946 
ty≥
 = "CONFIRM";

948 
DHCPV6_MSG_RENEW
:

949 
ty≥
 = "RENEW";

951 
DHCPV6_MSG_REBIND
:

952 
ty≥
 = "REBIND";

954 
DHCPV6_MSG_RELEASE
:

955 
ty≥
 = "RELEASE";

957 
DHCPV6_MSG_DECLINE
:

958 
ty≥
 = "DECLINE";

962 
code
) {

963 
DHCPV6_STATUS_OK
:

964 
°©us
 = "ok";

966 
DHCPV6_STATUS_NOADDRSAVAIL
:

967 
°©us
 = "noáddressesávailable";

969 
DHCPV6_STATUS_NOBINDING
:

970 
°©us
 = "no binding";

972 
DHCPV6_STATUS_NOTONLINK
:

973 
°©us
 = "not on-link";

975 
DHCPV6_STATUS_NOPREFIXAVAIL
:

976 
°©us
 = "noÖrefixávailable";

980 
Àa£buf
[256] = "";

982 i‡(
a
) {

983 
odh˝d_ùaddr
 *
addrs
 = (
a
->
m™aged
Ë?á->m™aged : 
iÁ˚
->
ü_addr
;

984 
size_t
 
addæí
 = (
a
->
m™aged
Ë? (size_tÔ->
m™aged_size
 : 
iÁ˚
->
ü_addr_Àn
;

985 
size_t
 
lbsize
 = 0;

986 
addrbuf
[
INET6_ADDRSTRLEN
];

988 
size_t
 
i
 = 0; i < 
addæí
; ++i) {

989 i‡(
addrs
[
i
].
¥efix
 > 96 ||áddrs[i].
¥e„ºed
 <(
uöt32_t
)
now
)

992 
ö6_addr
 
addr
 = 
addrs
[
i
].addr;

993 
¥efix
 = 
a
->
m™aged
 ? 
addrs
[
i
].¥efix :á->
Àngth
;

994 i‡(
¥efix
 == 128)

995 
addr
.
s6_addr32
[3] = 
	`ht⁄l
(
a
->
assig√d
);

997 
addr
.
s6_addr32
[1] |
	`ht⁄l
(
a
->
assig√d
);

999 
	`öë_¡›
(
AF_INET6
, &
addr
, 
addrbuf
, (addrbuf));

1000 
lbsize
 +
	`¢¥ötf
(
Àa£buf
 +Übsize, ÷ó£bufË-Übsize, "%s/%d ", 
addrbuf
, 
¥efix
);

1004 
	`sy¶og
(
LOG_WARNING
, "DHCPV6 %†%†‰om %†⁄ %s: %†%s", 
ty≥
, (
is_pd
) ? "IA_PD" : "IA_NA",

1005 
duidbuf
, 
iÁ˚
->
i‚ame
, 
°©us
, 
Àa£buf
);

1006 
	}
}

1010 
ssize_t
 
	$dh˝v6_h™dÀ_ü
(
uöt8_t
 *
buf
, 
size_t
 
buÊí
, 
öãrÁ˚
 *
iÁ˚
,

1011 c⁄° 
sockaddr_ö6
 *
addr
, c⁄° *
d©a
, c⁄° 
uöt8_t
 *
íd
)

1013 
time_t
 
now
 = 
	`odh˝d_time
();

1014 
size_t
 
ª•⁄£_Àn
 = 0;

1015 c⁄° 
dh˝v6_˛õ¡_hódî
 *
hdr
 = 
d©a
;

1016 
uöt8_t
 *
°¨t
 = (uöt8_t*)&
hdr
[1], *
od©a
;

1017 
uöt16_t
 
Ÿy≥
, 
ﬁí
;

1020 
boﬁ
 
ac˚±_ªc⁄f
 = 
Ál£
;

1021 
uöt8_t
 *
˛id_d©a
 = 
NULL
, 
˛id_Àn
 = 0, 
mac
[6] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

1022 
ho°«me
[256];

1023 
size_t
 
ho°«me_Àn
 = 0;

1024 
boﬁ
 
˛ass_‹o
 = 
Ál£
;

1025 
boﬁ
 
nŸ⁄lök
 = 
Ál£
;

1026 
duidbuf
[261];

1028 
	`dh˝v6_f‹_óch_›ti⁄
(
°¨t
, 
íd
, 
Ÿy≥
, 
ﬁí
, 
od©a
) {

1029 i‡(
Ÿy≥
 =
DHCPV6_OPT_CLIENTID
) {

1030 
˛id_d©a
 = 
od©a
;

1031 
˛id_Àn
 = 
ﬁí
;

1033 i‡(
ﬁí
 =14 && 
od©a
[0] == 0 && odata[1] == 1)

1034 
	`mem˝y
(
mac
, &
od©a
[8], (mac));

1035 i‡(
ﬁí
 =10 && 
od©a
[0] == 0 && odata[1] == 3)

1036 
	`mem˝y
(
mac
, &
od©a
[4], (mac));

1038 i‡(
ﬁí
 <= 130)

1039 
	`odh˝d_hexlify
(
duidbuf
, 
od©a
, 
ﬁí
);

1040 } i‡(
Ÿy≥
 =
DHCPV6_OPT_FQDN
 && 
ﬁí
 >= 2 && olen <= 255) {

1041 
uöt8_t
 
fqdn_buf
[256];

1042 
	`mem˝y
(
fqdn_buf
, 
od©a
, 
ﬁí
);

1043 
fqdn_buf
[
ﬁí
++] = 0;

1045 i‡(
	`dn_ex∑nd
(&
fqdn_buf
[1], &fqdn_buf[
ﬁí
], &fqdn_buf[1], 
ho°«me
, (hostname)) > 0)

1046 
ho°«me_Àn
 = 
	`°rc•n
(
ho°«me
, ".");

1047 } i‡(
Ÿy≥
 =
DHCPV6_OPT_ORO
) {

1048 #ifde‡
DHCPV6_OPT_PREFIX_CLASS


1049 
size_t
 
i
 = 0; i + 1 < 
ﬁí
; i += 2) {

1050 i‡(
od©a
[
i
] =(
DHCPV6_OPT_PREFIX_CLASS
 >> 8) &&

1051 
od©a
[
i
 + 1] =(
DHCPV6_OPT_PREFIX_CLASS
 & 0xff))

1052 
˛ass_‹o
 = 
åue
;

1055 } i‡(
Ÿy≥
 =
DHCPV6_OPT_RECONF_ACCEPT
) {

1056 
ac˚±_ªc⁄f
 = 
åue
;

1060 i‡(!
˛id_d©a
 || !
˛id_Àn
 || clid_len > 130)

1061 
out
;

1063 
	`upd©e
(
iÁ˚
);

1065 
dh˝v6_assignmít
 *
fú°
 = 
NULL
;

1066 
	`dh˝v6_f‹_óch_›ti⁄
(
°¨t
, 
íd
, 
Ÿy≥
, 
ﬁí
, 
od©a
) {

1067 
boﬁ
 
is_pd
 = (
Ÿy≥
 =
DHCPV6_OPT_IA_PD
);

1068 
boﬁ
 
is_«
 = (
Ÿy≥
 =
DHCPV6_OPT_IA_NA
);

1069 
boﬁ
 
ü_addr_¥e£¡
 = 
Ál£
;

1070 i‡(!
is_pd
 && !
is_«
)

1073 
dh˝v6_ü_hdr
 *
ü
 = (dh˝v6_ü_hdr*)&
od©a
[-4];

1074 
size_t
 
ü_ª•⁄£_Àn
 = 0;

1075 
uöt8_t
 
ªqÀn
 = (
is_pd
) ? 62 : 128;

1076 
uöt32_t
 
ªqhöt
 = 0;

1078 c⁄° 
uöt8_t
 
˛as£s_max
 = 32;

1079 
uöt8_t
 
˛as£s_˙t
 = 0;

1080 
uöt16_t
 
˛as£s
[
˛as£s_max
];

1083 i‡(
is_pd
) {

1084 
uöt8_t
 *
sd©a
;

1085 
uöt16_t
 
°y≥
, 
¶í
;

1086 
	`dh˝v6_f‹_óch_›ti⁄
(&
ü
[1], 
od©a
 + 
ﬁí
, 
°y≥
, 
¶í
, 
sd©a
) {

1087 i‡(
°y≥
 !
DHCPV6_OPT_IA_PREFIX
 || 
¶í
 < (
dh˝v6_ü_¥efix
) - 4)

1090 
dh˝v6_ü_¥efix
 *
p
 = (dh˝v6_ü_¥efix*)&
sd©a
[-4];

1091 i‡(
p
->
¥efix
) {

1092 
ªqÀn
 = 
p
->
¥efix
;

1093 
ªqhöt
 = 
	`¡ohl
(
p
->
addr
.
s6_addr32
[1]);

1094 i‡(
ªqÀn
 > 32 &&Ñeqlen <= 64)

1095 
ªqhöt
 &(1U << (64 - 
ªqÀn
)) - 1;

1098 #ifde‡
DHCPV6_OPT_PREFIX_CLASS


1099 
uöt8_t
 *
xd©a
;

1100 
uöt16_t
 
xty≥
, 
xÀn
;

1101 
	`dh˝v6_f‹_óch_›ti⁄
(&
p
[1], 
sd©a
 + 
¶í
, 
xty≥
, 
xÀn
, 
xd©a
) {

1102 i‡(
xty≥
 !
DHCPV6_OPT_PREFIX_CLASS
 || 
xÀn
 != 2)

1105 i‡(
˛as£s_˙t
 >
˛as£s_max
)

1108 
˛as£s
[
˛as£s_˙t
++] = (
uöt16_t
)
xd©a
[0] << 8 | (uint16_t)xdata[1];

1113 i‡(
ªqÀn
 > 64)

1114 
ªqÀn
 = 64;

1115 } i‡(
is_«
) {

1116 
uöt8_t
 *
sd©a
;

1117 
uöt16_t
 
°y≥
, 
¶í
;

1118 
	`dh˝v6_f‹_óch_›ti⁄
(&
ü
[1], 
od©a
 + 
ﬁí
, 
°y≥
, 
¶í
, 
sd©a
) {

1119 i‡(
°y≥
 !
DHCPV6_OPT_IA_ADDR
 || 
¶í
 < (
dh˝v6_ü_addr
) - 4)

1122 
ü_addr_¥e£¡
 = 
åue
;

1123 #ifde‡
DHCPV6_OPT_PREFIX_CLASS


1124 
uöt8_t
 *
xd©a
;

1125 
uöt16_t
 
xty≥
, 
xÀn
;

1126 
dh˝v6_ü_addr
 *
p
 = (dh˝v6_ü_addr*)&
sd©a
[-4];

1127 
	`dh˝v6_f‹_óch_›ti⁄
(&
p
[1], 
sd©a
 + 
¶í
, 
xty≥
, 
xÀn
, 
xd©a
) {

1128 i‡(
xty≥
 !
DHCPV6_OPT_PREFIX_CLASS
 || 
xÀn
 != 2)

1131 i‡(
˛as£s_˙t
 >
˛as£s_max
)

1134 
˛as£s
[
˛as£s_˙t
++] = (
uöt16_t
)
xd©a
[0] << 8 | (uint16_t)xdata[1];

1141 
dh˝v6_assignmít
 *
c
, *
a
 = 
NULL
;

1142 
	`li°_f‹_óch_íåy
(
c
, &
iÁ˚
->
ü_assignmíts
, 
hód
) {

1143 i‡(((
c
->
˛id_Àn
 =˛id_À¿&& !
	`memcmp
(c->
˛id_d©a
, clid_data, clid_len)) ||

1144 (
c
->
˛id_Àn
 >˛id_À¿&& !c->
˛id_d©a
[0] && !c->clid_data[1]

1145 && !
	`memcmp
(
c
->
mac
, mac, (mac)))) &&

1146 (
c
->
üid
 =
ü
->üid || c->
vÆid_u¡û
 < 
now
) &&

1147 ((
is_pd
 && 
c
->
Àngth
 <64Ë|| (
is_«
 && c->length == 128))) {

1148 
a
 = 
c
;

1151 
	`≠∂y_Àa£
(
iÁ˚
, 
a
, 
Ál£
);

1152 
	`mem˝y
(
a
->
˛id_d©a
, clid_d©a, 
˛id_Àn
);

1153 
a
->
˛id_Àn
 = clid_len;

1154 
a
->
üid
 = 
ü
->iaid;

1155 
a
->
≥î
 = *
addr
;

1156 
a
->
ªc⁄f_˙t
 = 0;

1157 
a
->
ªc⁄f_£¡
 = 0;

1158 
a
->
Æl_˛ass
 = 
˛ass_‹o
;

1159 
a
->
˛as£s_˙t
 = classes_cnt;

1160 
a
->
˛as£s
 = 
	`ªÆloc
◊->˛as£s, 
˛as£s_˙t
 * (
uöt16_t
));

1161 i‡(
a
->
˛as£s
)

1162 
	`mem˝y
(
a
->
˛as£s
, cœs£s, 
˛as£s_˙t
 * (
uöt16_t
));

1168 
uöt16_t
 
°©us
 = 
DHCPV6_STATUS_OK
;

1169 i‡(
a
 &&á->
m™aged_size
 < 0) {

1171 } i‡(
hdr
->
msg_ty≥
 =
DHCPV6_MSG_SOLICIT
 || hdr->msg_ty≥ =
DHCPV6_MSG_REQUEST
) {

1172 
boﬁ
 
assig√d
 = !!
a
;

1174 i‡(!
a
 && !
iÁ˚
->
no_dy«mic_dh˝
) {

1175 
a
 = 
	`ˇŒoc
(1, (*aË+ 
˛id_Àn
);

1176 i‡(
a
) {

1177 
a
->
˛id_Àn
 = clid_len;

1178 
a
->
üid
 = 
ü
->iaid;

1179 
a
->
Àngth
 = 
ªqÀn
;

1180 
a
->
≥î
 = *
addr
;

1181 
a
->
assig√d
 = 
ªqhöt
;

1182 
a
->
Æl_˛ass
 = 
˛ass_‹o
;

1183 
a
->
˛as£s_˙t
 = classes_cnt;

1184 i‡(
˛as£s_˙t
) {

1185 
a
->
˛as£s
 = 
	`mÆloc
(
˛as£s_˙t
 * (
uöt16_t
));

1186 i‡(
a
->
˛as£s
)

1187 
	`mem˝y
(
a
->
˛as£s
, cœs£s, 
˛as£s_˙t
 * (
uöt16_t
));

1190 i‡(
fú°
)

1191 
	`mem˝y
(
a
->
key
, 
fú°
->key, (a->key));

1193 
	`odh˝d_uøndom
(
a
->
key
, (a->key));

1194 
	`mem˝y
(
a
->
˛id_d©a
, clid_d©a, 
˛id_Àn
);

1196 i‡(
is_pd
)

1197 !(
assig√d
 = 
	`assign_pd
(
iÁ˚
, 
a
)) &&

1198 !
a
->
m™aged_size
 && ++a->
Àngth
 <= 64);

1200 
assig√d
 = 
	`assign_«
(
iÁ˚
, 
a
);

1202 i‡(
a
->
m™aged_size
 && !
assig√d
)

1207 i‡(!
assig√d
 || 
iÁ˚
->
ü_addr_Àn
 == 0) {

1208 
°©us
 = (
is_pd
Ë? 
DHCPV6_STATUS_NOPREFIXAVAIL
 : 
DHCPV6_STATUS_NOADDRSAVAIL
;

1209 } i‡(
assig√d
 && !
fú°
) {

1210 
size_t
 
h™dshake_Àn
 = 4;

1211 
buf
[0] = 0;

1212 
buf
[1] = 
DHCPV6_OPT_RECONF_ACCEPT
;

1213 
buf
[2] = 0;

1214 
buf
[3] = 0;

1216 i‡(
hdr
->
msg_ty≥
 =
DHCPV6_MSG_REQUEST
) {

1217 
dh˝v6_auth_ªc⁄figuª
 
auth
 = {

1218 
	`ht⁄s
(
DHCPV6_OPT_AUTH
),

1219 
	`ht⁄s
((
auth
) - 4),

1221 {
	`ht⁄l
(
	`time
(
NULL
)), ht⁄l(++
£rül
)},

1225 
	`mem˝y
(
auth
.
key
, 
a
->key, (a->key));

1226 
	`mem˝y
(
buf
 + 
h™dshake_Àn
, &
auth
, (auth));

1227 
h™dshake_Àn
 +(
auth
);

1230 
buf
 +
h™dshake_Àn
;

1231 
buÊí
 -
h™dshake_Àn
;

1232 
ª•⁄£_Àn
 +
h™dshake_Àn
;

1234 
fú°
 = 
a
;

1237 
ü_ª•⁄£_Àn
 = 
	`≠≥nd_ª∂y
(
buf
, 
buÊí
, 
°©us
, 
ü
, 
a
, 
iÁ˚
, 
åue
);

1240 i‡(
assig√d
 && 
hdr
->
msg_ty≥
 =
DHCPV6_MSG_SOLICIT
) {

1241 
a
->
vÆid_u¡û
 = 0;

1242 } i‡(
assig√d
 && 
hdr
->
msg_ty≥
 =
DHCPV6_MSG_REQUEST
) {

1243 i‡(
ho°«me_Àn
 > 0) {

1244 
a
->
ho°«me
 = 
	`ªÆloc
◊->ho°«me, 
ho°«me_Àn
 + 1);

1245 i‡(
a
->
ho°«me
) {

1246 
	`mem˝y
(
a
->
ho°«me
, ho°«me, 
ho°«me_Àn
);

1247 
a
->
ho°«me
[
ho°«me_Àn
] = 0;

1250 
a
->
ac˚±_ªc⁄f
 =áccept_reconf;

1251 
	`≠∂y_Àa£
(
iÁ˚
, 
a
, 
åue
);

1252 } i‡(!
assig√d
 && 
a
 &&á->
m™aged_size
 == 0) {

1253 
	`‰ì_dh˝v6_assignmít
(
a
);

1255 } i‡(
hdr
->
msg_ty≥
 =
DHCPV6_MSG_RENEW
 ||

1256 
hdr
->
msg_ty≥
 =
DHCPV6_MSG_RELEASE
 ||

1257 
hdr
->
msg_ty≥
 =
DHCPV6_MSG_REBIND
 ||

1258 
hdr
->
msg_ty≥
 =
DHCPV6_MSG_DECLINE
) {

1259 i‡(!
a
 && 
hdr
->
msg_ty≥
 !
DHCPV6_MSG_REBIND
) {

1260 
°©us
 = 
DHCPV6_STATUS_NOBINDING
;

1261 
ü_ª•⁄£_Àn
 = 
	`≠≥nd_ª∂y
(
buf
, 
buÊí
, 
°©us
, 
ü
, 
a
, 
iÁ˚
, 
Ál£
);

1262 } i‡(
hdr
->
msg_ty≥
 =
DHCPV6_MSG_RENEW
 ||

1263 
hdr
->
msg_ty≥
 =
DHCPV6_MSG_REBIND
) {

1264 
ü_ª•⁄£_Àn
 = 
	`≠≥nd_ª∂y
(
buf
, 
buÊí
, 
°©us
, 
ü
, 
a
, 
iÁ˚
, 
Ál£
);

1265 i‡(
a
)

1266 
	`≠∂y_Àa£
(
iÁ˚
, 
a
, 
åue
);

1267 } i‡(
hdr
->
msg_ty≥
 =
DHCPV6_MSG_RELEASE
) {

1268 
a
->
vÆid_u¡û
 = 0;

1269 
	`≠∂y_Àa£
(
iÁ˚
, 
a
, 
Ál£
);

1270 } i‡(
hdr
->
msg_ty≥
 =
DHCPV6_MSG_DECLINE
 && 
a
->
Àngth
 == 128) {

1271 
a
->
˛id_Àn
 = 0;

1272 
a
->
vÆid_u¡û
 = 
now
 + 3600;

1274 } i‡(
hdr
->
msg_ty≥
 =
DHCPV6_MSG_CONFIRM
 && 
ü_addr_¥e£¡
) {

1276 
°©us
 = 
DHCPV6_STATUS_NOTONLINK
;

1277 
ü_ª•⁄£_Àn
 = 
	`≠≥nd_ª∂y
(
buf
, 
buÊí
, 
°©us
, 
ü
, 
a
, 
iÁ˚
, 
åue
);

1278 
nŸ⁄lök
 = 
åue
;

1281 
buf
 +
ü_ª•⁄£_Àn
;

1282 
buÊí
 -
ü_ª•⁄£_Àn
;

1283 
ª•⁄£_Àn
 +
ü_ª•⁄£_Àn
;

1284 
	`dh˝v6_log
(
hdr
->
msg_ty≥
, 
iÁ˚
, 
now
, 
duidbuf
, 
is_pd
, 
a
, 
°©us
);

1287 i‡((
hdr
->
msg_ty≥
 =
DHCPV6_MSG_RELEASE
 || hdr->msg_ty≥ =
DHCPV6_MSG_DECLINE
 || 
nŸ⁄lök
) &&

1288 
ª•⁄£_Àn
 + 6 < 
buÊí
) {

1289 
buf
[0] = 0;

1290 
buf
[1] = 
DHCPV6_OPT_STATUS
;

1291 
buf
[2] = 0;

1292 
buf
[3] = 2;

1293 
buf
[4] = 0;

1294 
buf
[5] = (
nŸ⁄lök
Ë? 
DHCPV6_STATUS_NOTONLINK
 : 
DHCPV6_STATUS_OK
;

1295 
ª•⁄£_Àn
 += 6;

1298 
	`dh˝v6_wrôe_°©efûe
();

1300 
out
:

1301  
ª•⁄£_Àn
;

1302 
	}
}

	@/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/dhcpv6.c

16 
	~<î∫o.h
>

17 
	~<uni°d.h
>

18 
	~<°ddef.h
>

19 
	~<ªsﬁv.h
>

20 
	~<sys/timîfd.h
>

22 
	~"odh˝d.h
"

23 
	~"dh˝v6.h
"

26 
ªœy_˛õ¡_ªque°
(
sockaddr_ö6
 *
sour˚
,

27 c⁄° *
d©a
, 
size_t
 
Àn
, 
öãrÁ˚
 *
iÁ˚
);

28 
ªœy_£rvî_ª•⁄£
(
uöt8_t
 *
d©a
, 
size_t
 
Àn
);

30 
h™dÀ_dh˝v6
(*
addr
, *
d©a
, 
size_t
 
Àn
,

31 
öãrÁ˚
 *
iÁ˚
, *
de°
);

32 
h™dÀ_˛õ¡_ªque°
(*
addr
, *
d©a
, 
size_t
 
Àn
,

33 
öãrÁ˚
 *
iÁ˚
, *
de°_addr
);

38 
	$öô_dh˝v6
()

40 
	`dh˝v6_ü_öô
();

42 
	}
}

45 
	$£tup_dh˝v6_öãrÁ˚
(
öãrÁ˚
 *
iÁ˚
, 
boﬁ
 
íabÀ
)

47 i‡(
iÁ˚
->
dh˝v6_evít
.
ulo›
.
fd
 > 0) {

48 
	`ulo›_fd_dñëe
(&
iÁ˚
->
dh˝v6_evít
.
ulo›
);

49 
	`˛o£
(
iÁ˚
->
dh˝v6_evít
.
ulo›
.
fd
);

50 
iÁ˚
->
dh˝v6_evít
.
ulo›
.
fd
 = -1;

54 i‡(
íabÀ
 && 
iÁ˚
->
dh˝v6
 && !iÁ˚->
ma°î
) {

55 
sock
 = 
	`sockë
(
AF_INET6
, 
SOCK_DGRAM
 | 
SOCK_CLOEXEC
, 
IPPROTO_UDP
);

56 i‡(
sock
 < 0) {

57 
	`sy¶og
(
LOG_ERR
, "FailedÅo create DHCPv6 server socket: %s",

58 
	`°ªº‹
(
î∫o
));

63 
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_BINDTODEVICE
, 
iÁ˚
->
i‚ame
, 
	`°æí
(iface->ifname));

65 
vÆ
 = 1;

66 
	`£tsock›t
(
sock
, 
IPPROTO_IPV6
, 
IPV6_V6ONLY
, &
vÆ
, (val));

67 
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
vÆ
, (val));

68 
	`£tsock›t
(
sock
, 
IPPROTO_IPV6
, 
IPV6_RECVPKTINFO
, &
vÆ
, (val));

70 
vÆ
 = 
DHCPV6_HOP_COUNT_LIMIT
;

71 
	`£tsock›t
(
sock
, 
IPPROTO_IPV6
, 
IPV6_MULTICAST_HOPS
, &
vÆ
, (val));

73 
vÆ
 = 0;

74 
	`£tsock›t
(
sock
, 
IPPROTO_IPV6
, 
IPV6_MULTICAST_LOOP
, &
vÆ
, (val));

76 
sockaddr_ö6
 
böd_addr
 = {
AF_INET6
, 
	`ht⁄s
(
DHCPV6_SERVER_PORT
),

77 0, 
IN6ADDR_ANY_INIT
, 0};

79 i‡(
	`böd
(
sock
, (
sockaddr
*)&
böd_addr
, (bind_addr))) {

80 
	`sy¶og
(
LOG_ERR
, "FailedÅo open DHCPv6 server socket: %s",

81 
	`°ªº‹
(
î∫o
));

85 
ùv6_mªq
 
ªœy
 = {
ALL_DHCPV6_RELAYS
, 
iÁ˚
->
ifödex
};

86 
ùv6_mªq
 
£rvî
 = {
ALL_DHCPV6_SERVERS
, 
iÁ˚
->
ifödex
};

87 
	`£tsock›t
(
sock
, 
IPPROTO_IPV6
, 
IPV6_ADD_MEMBERSHIP
, &
ªœy
, (relay));

89 i‡(
iÁ˚
->
dh˝v6
 =
RELAYD_SERVER
)

90 
	`£tsock›t
(
sock
, 
IPPROTO_IPV6
, 
IPV6_ADD_MEMBERSHIP
, &
£rvî
, (server));

92 
iÁ˚
->
dh˝v6_evít
.
ulo›
.
fd
 = 
sock
;

93 
iÁ˚
->
dh˝v6_evít
.
h™dÀ_dgøm
 = 
h™dÀ_dh˝v6
;

94 
	`odh˝d_ªgi°î
(&
iÁ˚
->
dh˝v6_evít
);

97  
	`£tup_dh˝v6_ü_öãrÁ˚
(
iÁ˚
, 
íabÀ
);

98 
	}
}

101 
	mIOV_NESTED
 = 0,

102 
	mIOV_DEST
,

103 
	mIOV_MAXRT
,

104 
	#IOV_STAT
 
IOV_MAXRT


	)

105 
	mIOV_DNS
,

106 
	mIOV_DNS_ADDR
,

107 
	mIOV_SEARCH
,

108 
	mIOV_SEARCH_DOMAIN
,

109 
	mIOV_PDBUF
,

110 
	#IOV_REFRESH
 
IOV_PDBUF


	)

111 
	mIOV_CERID
,

112 
	mIOV_DHCPV6_RAW
,

113 
	mIOV_RELAY_MSG
,

114 
	mIOV_TOTAL


117 
h™dÀ_√°ed_mesßge
(
uöt8_t
 *
d©a
, 
size_t
 
Àn
,

118 
uöt8_t
 **
›ts
, uöt8_à**
íd
, 
iovec
 
iov
[
IOV_TOTAL
 - 1])

120 
dh˝v6_ªœy_hódî
 *
	ghdr
 = (dh˝v6_ªœy_hódî*)
d©a
;

121 i‡(
	giov
[
IOV_NESTED
].
	giov_ba£
 =
NULL
) {

122 
iov
[
IOV_NESTED
].
iov_ba£
 = 
d©a
;

123 
	giov
[
IOV_NESTED
].
	giov_Àn
 = 
Àn
;

126 i‡(
	gÀn
 < (
	gdh˝v6_˛õ¡_hódî
))

129 i‡(
	ghdr
->
	gmsg_ty≥
 !
DHCPV6_MSG_RELAY_FORW
) {

130 
iov
[
IOV_NESTED
].
iov_Àn
 = 
d©a
 - (
uöt8_t
*)iov[IOV_NESTED].
iov_ba£
;

131 
dh˝v6_˛õ¡_hódî
 *
	ghdr
 = (*)
d©a
;

132 *
	g›ts
 = (
uöt8_t
*)&
hdr
[1];

133 *
	gíd
 = 
d©a
 + 
Àn
;

137 
uöt16_t
 
	gŸy≥
, 
	gﬁí
;

138 
uöt8_t
 *
	god©a
;

139 
dh˝v6_f‹_óch_›ti⁄
(
hdr
->
›ti⁄s
, 
d©a
 + 
Àn
, 
Ÿy≥
, 
ﬁí
, 
od©a
) {

140 i‡(
	gŸy≥
 =
DHCPV6_OPT_RELAY_MSG
) {

141 
iov
[
IOV_RELAY_MSG
].
iov_ba£
 = 
od©a
 + 
ﬁí
;

142 
	giov
[
IOV_RELAY_MSG
].
	giov_Àn
 = (((
uöt8_t
*)
iov
[
IOV_NESTED
].
iov_ba£
) +

143 
iov
[
IOV_NESTED
].
iov_Àn
Ë- (
od©a
 + 
ﬁí
);

144 
h™dÀ_√°ed_mesßge
(
od©a
, 
ﬁí
, 
›ts
, 
íd
, 
iov
);

151 
	$upd©e_√°ed_mesßge
(
uöt8_t
 *
d©a
, 
size_t
 
Àn
, 
ssize_t
 
pdiff
)

153 
dh˝v6_ªœy_hódî
 *
hdr
 = (dh˝v6_ªœy_hódî*)
d©a
;

154 i‡(
hdr
->
msg_ty≥
 !
DHCPV6_MSG_RELAY_FORW
)

157 
hdr
->
msg_ty≥
 = 
DHCPV6_MSG_RELAY_REPL
;

159 
uöt16_t
 
Ÿy≥
, 
ﬁí
;

160 
uöt8_t
 *
od©a
;

161 
	`dh˝v6_f‹_óch_›ti⁄
(
hdr
->
›ti⁄s
, 
d©a
 + 
Àn
, 
Ÿy≥
, 
ﬁí
, 
od©a
) {

162 i‡(
Ÿy≥
 =
DHCPV6_OPT_RELAY_MSG
) {

163 
ﬁí
 +
pdiff
;

164 
od©a
[-2] = (
ﬁí
 >> 8) & 0xff;

165 
od©a
[-1] = 
ﬁí
 & 0xff;

166 
	`upd©e_√°ed_mesßge
(
od©a
, 
ﬁí
 - 
pdiff
,Ödiff);

170 
	}
}

173 
	$h™dÀ_˛õ¡_ªque°
(*
addr
, *
d©a
, 
size_t
 
Àn
,

174 
öãrÁ˚
 *
iÁ˚
, *
de°_addr
)

176 
dh˝v6_˛õ¡_hódî
 *
hdr
 = 
d©a
;

178 i‡(
Àn
 < (*
hdr
))

181 
	`sy¶og
(
LOG_NOTICE
, "Got DHCPv6Ñequest");

184 
	`__©åibuã__
((
∑cked
)) {

185 
uöt8_t
 
msg_ty≥
;

186 
uöt8_t
 
å_id
[3];

187 
uöt16_t
 
£rvîid_ty≥
;

188 
uöt16_t
 
£rvîid_Àngth
;

189 
uöt16_t
 
duid_ty≥
;

190 
uöt16_t
 
h¨dw¨e_ty≥
;

191 
uöt8_t
 
mac
[6];

192 
uöt16_t
 
˛õ¡id_ty≥
;

193 
uöt16_t
 
˛õ¡id_Àngth
;

194 
uöt8_t
 
˛õ¡id_buf
[130];

195 } 
de°
 = {

196 .
msg_ty≥
 = 
DHCPV6_MSG_REPLY
,

197 .
£rvîid_ty≥
 = 
	`ht⁄s
(
DHCPV6_OPT_SERVERID
),

198 .
£rvîid_Àngth
 = 
	`ht⁄s
(10),

199 .
duid_ty≥
 = 
	`ht⁄s
(3),

200 .
h¨dw¨e_ty≥
 = 
	`ht⁄s
(1),

201 .
˛õ¡id_ty≥
 = 
	`ht⁄s
(
DHCPV6_OPT_CLIENTID
),

202 .
˛õ¡id_buf
 = {0}

204 
	`odh˝d_gë_mac
(
iÁ˚
, 
de°
.
mac
);

206 
	`__©åibuã__
((
∑cked
)) {

207 
uöt16_t
 
ty≥
;

208 
uöt16_t
 
Àn
;

209 
uöt32_t
 
vÆue
;

210 } 
maxπ
 = {
	`ht⁄s
(
DHCPV6_OPT_SOL_MAX_RT
), htons((maxrt) - 4),

211 
	`ht⁄l
(60)};

213 
	`__©åibuã__
((
∑cked
)) {

214 
uöt16_t
 
ty≥
;

215 
uöt16_t
 
Àn
;

216 
uöt16_t
 
vÆue
;

217 } 
°©
 = {
	`ht⁄s
(
DHCPV6_OPT_STATUS
), htons((stat) - 4),

218 
	`ht⁄s
(
DHCPV6_STATUS_USEMULTICAST
)};

220 
	`__©åibuã__
((
∑cked
)) {

221 
uöt16_t
 
ty≥
;

222 
uöt16_t
 
Àn
;

223 
uöt32_t
 
vÆue
;

224 } 
ª‰esh
 = {
	`ht⁄s
(
DHCPV6_OPT_INFO_REFRESH
), ht⁄s((
uöt32_t
)),

225 
	`ht⁄l
(600)};

227 
odh˝d_ùaddr
 
ùaddr
;

228 
ö6_addr
 *
dns_addr
 = 
iÁ˚
->
dns
;

229 
size_t
 
dns_˙t
 = 
iÁ˚
->dns_cnt;

231 i‡(
dns_˙t
 =0 && 
	`odh˝d_gë_öãrÁ˚_addªs£s
(
iÁ˚
->
ifödex
, &
ùaddr
, 1) == 1) {

232 
dns_addr
 = &
ùaddr
.
addr
;

233 
dns_˙t
 = 1;

237 
uöt16_t
 
ty≥
;

238 
uöt16_t
 
Àn
;

239 } 
dns
 = {
	`ht⁄s
(
DHCPV6_OPT_DNS_SERVERS
), ht⁄s(
dns_˙t
 * (*
dns_addr
))};

244 
uöt8_t
 
£¨ch_buf
[256], *
£¨ch_domaö
 = 
iÁ˚
->
£¨ch
;

245 
size_t
 
£¨ch_Àn
 = 
iÁ˚
->search_len;

247 i‡(!
£¨ch_domaö
 && !
	`ªs_öô
(Ë&& 
_ªs
.
dn§ch
[0] && _res.dnsrch[0][0]) {

248 
Àn
 = 
	`dn_comp
(
_ªs
.
dn§ch
[0], 
£¨ch_buf
,

249 (
£¨ch_buf
), 
NULL
, NULL);

250 i‡(
Àn
 > 0) {

251 
£¨ch_domaö
 = 
£¨ch_buf
;

252 
£¨ch_Àn
 = 
Àn
;

257 
uöt16_t
 
ty≥
;

258 
uöt16_t
 
Àn
;

259 } 
£¨ch
 = {
	`ht⁄s
(
DHCPV6_OPT_DNS_DOMAIN
), ht⁄s(
£¨ch_Àn
)};

262 
dh˝v6_˚r_id
 
˚rid
 = {

263 #ifde‡
EXT_CER_ID


264 .
ty≥
 = 
	`ht⁄s
(
EXT_CER_ID
),

266 .
Àn
 = 
	`ht⁄s
(36),

267 .
addr
 = 
iÁ˚
->
dh˝v6_pd_˚r
,

271 
uöt8_t
 
pdbuf
[512];

272 
iovec
 
iov
[
IOV_TOTAL
] = {

273 [
IOV_NESTED
] = {
NULL
, 0},

274 [
IOV_DEST
] = {&
de°
, (
uöt8_t
*)&de°.
˛õ¡id_ty≥
 - (uint8_t*)&dest},

275 [
IOV_MAXRT
] = {&
maxπ
, (maxrt)},

276 [
IOV_DNS
] = {&
dns
, (
dns_˙t
) ? (dns) : 0},

277 [
IOV_DNS_ADDR
] = {
dns_addr
, 
dns_˙t
 * (*dns_addr)},

278 [
IOV_SEARCH
] = {&
£¨ch
, (
£¨ch_Àn
) ? (search) : 0},

279 [
IOV_SEARCH_DOMAIN
] = {
£¨ch_domaö
, 
£¨ch_Àn
},

280 [
IOV_PDBUF
] = {
pdbuf
, 0},

281 [
IOV_CERID
] = {&
˚rid
, 0},

282 [
IOV_DHCPV6_RAW
] = {
iÁ˚
->
dh˝v6_øw
, iÁ˚->
dh˝v6_øw_Àn
},

283 [
IOV_RELAY_MSG
] = {
NULL
, 0}

286 
uöt8_t
 *
›ts
 = (uöt8_t*)&
hdr
[1], *
›ts_íd
 = (uöt8_t*)
d©a
 + 
Àn
;

287 i‡(
hdr
->
msg_ty≥
 =
DHCPV6_MSG_RELAY_FORW
)

288 
	`h™dÀ_√°ed_mesßge
(
d©a
, 
Àn
, &
›ts
, &
›ts_íd
, 
iov
);

290 
	`mem˝y
(
de°
.
å_id
, &
›ts
[-3], (dest.tr_id));

292 i‡(
›ts
[-4] =
DHCPV6_MSG_ADVERTISE
 || o±s[-4] =
DHCPV6_MSG_REPLY
 || o±s[-4] =
DHCPV6_MSG_RELAY_REPL
)

295 i‡(!
	`IN6_IS_ADDR_MULTICAST
((
ö6_addr
 *)
de°_addr
Ë&& 
iov
[
IOV_NESTED
].
iov_Àn
 == 0 &&

296 (
›ts
[-4] =
DHCPV6_MSG_SOLICIT
 || o±s[-4] =
DHCPV6_MSG_CONFIRM
 ||

297 
›ts
[-4] =
DHCPV6_MSG_REBIND
 || o±s[-4] =
DHCPV6_MSG_INFORMATION_REQUEST
))

300 i‡(
›ts
[-4] =
DHCPV6_MSG_SOLICIT
) {

301 
de°
.
msg_ty≥
 = 
DHCPV6_MSG_ADVERTISE
;

302 } i‡(
›ts
[-4] =
DHCPV6_MSG_INFORMATION_REQUEST
) {

303 
iov
[
IOV_REFRESH
].
iov_ba£
 = &
ª‰esh
;

304 
iov
[
IOV_REFRESH
].
iov_Àn
 = (
ª‰esh
);

307 
maxπ
.
ty≥
 = 
	`ht⁄s
(
DHCPV6_OPT_INF_MAX_RT
);

311 
uöt16_t
 
Ÿy≥
, 
ﬁí
;

312 
uöt8_t
 *
od©a
;

313 
	`dh˝v6_f‹_óch_›ti⁄
(
›ts
, 
›ts_íd
, 
Ÿy≥
, 
ﬁí
, 
od©a
) {

314 i‡(
Ÿy≥
 =
DHCPV6_OPT_CLIENTID
 && 
ﬁí
 <= 130) {

315 
de°
.
˛õ¡id_Àngth
 = 
	`ht⁄s
(
ﬁí
);

316 
	`mem˝y
(
de°
.
˛õ¡id_buf
, 
od©a
, 
ﬁí
);

317 
iov
[
IOV_DEST
].
iov_Àn
 +4 + 
ﬁí
;

318 } i‡(
Ÿy≥
 =
DHCPV6_OPT_SERVERID
) {

319 i‡(
ﬁí
 !
	`¡ohs
(
de°
.
£rvîid_Àngth
) ||

320 
	`memcmp
(
od©a
, &
de°
.
duid_ty≥
, 
ﬁí
))

322 } i‡(
iÁ˚
->
fûãr_˛ass
 && 
Ÿy≥
 =
DHCPV6_OPT_USER_CLASS
) {

323 
uöt8_t
 *
c
 = 
od©a
, *
˚nd
 = &od©a[
ﬁí
];

324 ; &
c
[2] <
˚nd
 && &c[2 + (c[0] << 8) + c[1]] <= cend; c = &c[2 + (c[0] << 8) + c[1]]) {

325 
size_t
 
ñí
 = 
	`°æí
(
iÁ˚
->
fûãr_˛ass
);

326 i‡(((((
size_t
)
c
[0]Ë<< 8Ë| c[1]Ë=
ñí
 && !
	`memcmp
(&c[2], 
iÁ˚
->
fûãr_˛ass
,Élen))

329 } i‡(
Ÿy≥
 =
DHCPV6_OPT_IA_PD
) {

330 #ifde‡
EXT_CER_ID


331 
iov
[
IOV_CERID
].
iov_Àn
 = (
˚rid
);

333 i‡(
	`IN6_IS_ADDR_UNSPECIFIED
(&
˚rid
.
addr
)) {

334 
odh˝d_ùaddr
 
addrs
[32];

335 
ssize_t
 
Àn
 = 
	`odh˝d_gë_öãrÁ˚_addªs£s
(0, 
addrs
,

336 (
addrs
) / (*addrs));

338 
ssize_t
 
i
 = 0; i < 
Àn
; ++i)

339 i‡(
	`IN6_IS_ADDR_UNSPECIFIED
(&
˚rid
.
addr
)

340 || 
	`memcmp
(&
addrs
[
i
].
addr
, &
˚rid
.addr, (cerid.addr)) < 0)

341 
˚rid
.
addr
 = 
addrs
[
i
].addr;

347 i‡(!
	`IN6_IS_ADDR_MULTICAST
((
ö6_addr
 *)
de°_addr
Ë&& 
iov
[
IOV_NESTED
].
iov_Àn
 == 0 &&

348 (
›ts
[-4] =
DHCPV6_MSG_REQUEST
 || o±s[-4] =
DHCPV6_MSG_RENEW
 ||

349 
›ts
[-4] =
DHCPV6_MSG_RELEASE
 || o±s[-4] =
DHCPV6_MSG_DECLINE
)) {

350 
iov
[
IOV_STAT
].
iov_ba£
 = &
°©
;

351 
iov
[
IOV_STAT
].
iov_Àn
 = (
°©
);

353 
ssize_t
 
i
 = 
IOV_STAT
 + 1; i < 
IOV_TOTAL
; ++i)

354 
iov
[
i
].
iov_Àn
 = 0;

356 
	`odh˝d_£nd
(
iÁ˚
->
dh˝v6_evít
.
ulo›
.
fd
, 
addr
, 
iov
, 
	`ARRAY_SIZE
(iov), iface);

360 i‡(
›ts
[-4] !
DHCPV6_MSG_INFORMATION_REQUEST
) {

361 
ssize_t
 
üÀn
 = 
	`dh˝v6_h™dÀ_ü
(
pdbuf
, ’dbuf), 
iÁ˚
, 
addr
, &
›ts
[-4], 
›ts_íd
);

362 
iov
[
IOV_PDBUF
].
iov_Àn
 = 
üÀn
;

363 i‡(
üÀn
 < 0 || (üÀ¿=0 && (
›ts
[-4] =
DHCPV6_MSG_REBIND
 || o±s[-4] =
DHCPV6_MSG_CONFIRM
)))

367 i‡(
iov
[
IOV_NESTED
].
iov_Àn
 > 0)

368 
	`upd©e_√°ed_mesßge
(
d©a
, 
Àn
, 
iov
[
IOV_DEST
].
iov_Àn
 + iov[
IOV_MAXRT
].iov_len +

369 
iov
[
IOV_DNS
].
iov_Àn
 + iov[
IOV_DNS_ADDR
].iov_len +

370 
iov
[
IOV_SEARCH
].
iov_Àn
 + iov[
IOV_SEARCH_DOMAIN
].iov_len +

371 
iov
[
IOV_PDBUF
].
iov_Àn
 + iov[
IOV_CERID
].iov_len +

372 
iov
[
IOV_DHCPV6_RAW
].
iov_Àn
 - (4 + 
›ts_íd
 - 
›ts
));

374 
	`odh˝d_£nd
(
iÁ˚
->
dh˝v6_evít
.
ulo›
.
fd
, 
addr
, 
iov
, 
	`ARRAY_SIZE
(iov), iface);

375 
	}
}

379 
	$h™dÀ_dh˝v6
(*
addr
, *
d©a
, 
size_t
 
Àn
,

380 
öãrÁ˚
 *
iÁ˚
, *
de°_addr
)

382 i‡(
iÁ˚
->
dh˝v6
 =
RELAYD_SERVER
) {

383 
	`h™dÀ_˛õ¡_ªque°
(
addr
, 
d©a
, 
Àn
, 
iÁ˚
, 
de°_addr
);

384 } i‡(
iÁ˚
->
dh˝v6
 =
RELAYD_RELAY
) {

385 i‡(
iÁ˚
->
ma°î
)

386 
	`ªœy_£rvî_ª•⁄£
(
d©a
, 
Àn
);

388 
	`ªœy_˛õ¡_ªque°
(
addr
, 
d©a
, 
Àn
, 
iÁ˚
);

390 
	}
}

394 
	$ªœy_£rvî_ª•⁄£
(
uöt8_t
 *
d©a
, 
size_t
 
Àn
)

397 
uöt8_t
 *
∑ylﬂd_d©a
 = 
NULL
;

398 
size_t
 
∑ylﬂd_Àn
 = 0;

399 
öt32_t
 
iÁ˚idx
 = 0;

400 
sockaddr_ö6
 
èrgë
 = {
AF_INET6
, 
	`ht⁄s
(
DHCPV6_CLIENT_PORT
),

401 0, 
IN6ADDR_ANY_INIT
, 0};

403 
	`sy¶og
(
LOG_NOTICE
, "Gotá DHCPv6-reply");

405 
Ÿy≥
, 
ﬁí
;

406 
uöt8_t
 *
od©a
, *
íd
 = 
d©a
 + 
Àn
;

409 
dh˝v6_ªœy_hódî
 *
h
 = (*)
d©a
;

410 i‡(
Àn
 < (*
h
Ë|| h->
msg_ty≥
 !
DHCPV6_MSG_RELAY_REPL
)

413 
	`mem˝y
(&
èrgë
.
sö6_addr
, &
h
->
≥î_addªss
,

414 (
ö6_addr
));

417 
	`dh˝v6_f‹_óch_›ti⁄
(
h
->
›ti⁄s
, 
íd
, 
Ÿy≥
, 
ﬁí
, 
od©a
) {

418 i‡(
Ÿy≥
 =
DHCPV6_OPT_INTERFACE_ID


419 && 
ﬁí
 =(
iÁ˚idx
)) {

420 
	`mem˝y
(&
iÁ˚idx
, 
od©a
, (ifaceidx));

421 } i‡(
Ÿy≥
 =
DHCPV6_OPT_RELAY_MSG
) {

422 
∑ylﬂd_d©a
 = 
od©a
;

423 
∑ylﬂd_Àn
 = 
ﬁí
;

428 
öãrÁ˚
 *
iÁ˚
 = 
	`odh˝d_gë_öãrÁ˚_by_ödex
(
iÁ˚idx
);

429 i‡(!
iÁ˚
 || iÁ˚->
ma°î
 || !
∑ylﬂd_d©a
 || 
∑ylﬂd_Àn
 < 4)

432 
boﬁ
 
is_authítiˇãd
 = 
Ál£
;

433 
ö6_addr
 *
dns_±r
 = 
NULL
;

434 
size_t
 
dns_cou¡
 = 0;

437 i‡(
∑ylﬂd_d©a
[0] =
DHCPV6_MSG_RELAY_REPL
) {

438 
èrgë
.
sö6_p‹t
 = 
	`ht⁄s
(
DHCPV6_SERVER_PORT
);

440 
dh˝v6_˛õ¡_hódî
 *
h
 = (*)
∑ylﬂd_d©a
;

441 
íd
 = 
∑ylﬂd_d©a
 + 
∑ylﬂd_Àn
;

443 
	`dh˝v6_f‹_óch_›ti⁄
(&
h
[1], 
íd
, 
Ÿy≥
, 
ﬁí
, 
od©a
) {

444 i‡(
Ÿy≥
 =
DHCPV6_OPT_DNS_SERVERS
 && 
ﬁí
 >= 16) {

445 
dns_±r
 = (
ö6_addr
*)
od©a
;

446 
dns_cou¡
 = 
ﬁí
 / 16;

447 } i‡(
Ÿy≥
 =
DHCPV6_OPT_AUTH
) {

448 
is_authítiˇãd
 = 
åue
;

454 i‡(
iÁ˚
->
Æways_ªwrôe_dns
 && 
dns_±r
 && 
dns_cou¡
 > 0) {

455 i‡(
is_authítiˇãd
)

458 
odh˝d_ùaddr
 
ù
;

459 c⁄° 
ö6_addr
 *
ªwrôe
 = 
iÁ˚
->
dns
;

460 
size_t
 
ªwrôe_˙t
 = 
iÁ˚
->
dns_˙t
;

462 i‡(
ªwrôe_˙t
 == 0) {

463 i‡(
	`odh˝d_gë_öãrÁ˚_addªs£s
(
iÁ˚
->
ifödex
, &
ù
, 1) < 1)

466 
ªwrôe
 = &
ù
.
addr
;

467 
ªwrôe_˙t
 = 1;

471 
size_t
 
i
 = 0; i < 
dns_cou¡
; ++i) {

472 
size_t
 
j
 = (
i
 < 
ªwrôe_˙t
) ? i :Ñewrite_cnt - 1;

473 
	`mem˝y
(&
dns_±r
[
i
], &
ªwrôe
[
j
], (*rewrite));

477 
iovec
 
iov
 = {
∑ylﬂd_d©a
, 
∑ylﬂd_Àn
};

478 
	`odh˝d_£nd
(
iÁ˚
->
dh˝v6_evít
.
ulo›
.
fd
, &
èrgë
, &
iov
, 1, iface);

479 
	}
}

483 
	$ªœy_˛õ¡_ªque°
(
sockaddr_ö6
 *
sour˚
,

484 c⁄° *
d©a
, 
size_t
 
Àn
, 
öãrÁ˚
 *
iÁ˚
)

486 
öãrÁ˚
 *
ma°î
 = 
	`odh˝d_gë_ma°î_öãrÁ˚
();

487 c⁄° 
dh˝v6_ªœy_hódî
 *
h
 = 
d©a
;

488 i‡(!
ma°î
 || ma°î->
dh˝v6
 !
RELAYD_RELAY
 ||

489 
h
->
msg_ty≥
 =
DHCPV6_MSG_RELAY_REPL
 ||

490 
h
->
msg_ty≥
 =
DHCPV6_MSG_RECONFIGURE
 ||

491 
h
->
msg_ty≥
 =
DHCPV6_MSG_REPLY
 ||

492 
h
->
msg_ty≥
 =
DHCPV6_MSG_ADVERTISE
)

495 
	`sy¶og
(
LOG_NOTICE
, "Gotá DHCPv6-request");

498 
dh˝v6_ªœy_f‹w¨d_ívñ›e
 
hdr
 = {

499 .
msg_ty≥
 = 
DHCPV6_MSG_RELAY_FORW
,

500 .
h›_cou¡
 = 0,

501 .
öãrÁ˚_id_ty≥
 = 
	`ht⁄s
(
DHCPV6_OPT_INTERFACE_ID
),

502 .
öãrÁ˚_id_Àn
 = 
	`ht⁄s
((
uöt32_t
)),

503 .
ªœy_mesßge_ty≥
 = 
	`ht⁄s
(
DHCPV6_OPT_RELAY_MSG
),

504 .
ªœy_mesßge_Àn
 = 
	`ht⁄s
(
Àn
),

507 i‡(
h
->
msg_ty≥
 =
DHCPV6_MSG_RELAY_FORW
) {

508 i‡(
h
->
h›_cou¡
 >
DHCPV6_HOP_COUNT_LIMIT
)

511 
hdr
.
h›_cou¡
 = 
h
->hop_count + 1;

515 
uöt32_t
 
ifödex
 = 
iÁ˚
->ifindex;

516 
	`mem˝y
(&
hdr
.
≥î_addªss
, &
sour˚
->
sö6_addr
, (
ö6_addr
));

517 
	`mem˝y
(&
hdr
.
öãrÁ˚_id_d©a
, &
ifödex
, (ifindex));

520 
odh˝d_ùaddr
 
ù
;

521 i‡(
	`odh˝d_gë_öãrÁ˚_addªs£s
(
iÁ˚
->
ifödex
, &
ù
, 1) < 1) {

527 i‡(
	`odh˝d_gë_öãrÁ˚_addªs£s
(
ma°î
->
ifödex
, &
ù
, 1) < 1)

530 
	`mem˝y
(&
hdr
.
lök_addªss
, &
ù
.
addr
, (hdr.link_address));

532 
sockaddr_ö6
 
dh˝v6_£rvîs
 = {
AF_INET6
,

533 
	`ht⁄s
(
DHCPV6_SERVER_PORT
), 0, 
ALL_DHCPV6_SERVERS
, 0};

534 
iovec
 
iov
[2] = {{&
hdr
, (hdr)}, {(*)
d©a
, 
Àn
}};

535 
	`odh˝d_£nd
(
iÁ˚
->
dh˝v6_evít
.
ulo›
.
fd
, &
dh˝v6_£rvîs
, 
iov
, 2, 
ma°î
);

536 
	}
}

	@/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/dhcpv6.h

14 #¥agm®
⁄˚


16 
	~<libubox/u°ªam.h
>

18 
	#ALL_DHCPV6_RELAYS
 {{{0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\

19 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02}}}

	)

21 
	#ALL_DHCPV6_SERVERS
 {{{0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\

22 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03}}}

	)

24 
	#DHCPV6_CLIENT_PORT
 546

	)

25 
	#DHCPV6_SERVER_PORT
 547

	)

27 
	#DHCPV6_MSG_SOLICIT
 1

	)

28 
	#DHCPV6_MSG_ADVERTISE
 2

	)

29 
	#DHCPV6_MSG_REQUEST
 3

	)

30 
	#DHCPV6_MSG_CONFIRM
 4

	)

31 
	#DHCPV6_MSG_RENEW
 5

	)

32 
	#DHCPV6_MSG_REBIND
 6

	)

33 
	#DHCPV6_MSG_REPLY
 7

	)

34 
	#DHCPV6_MSG_RELEASE
 8

	)

35 
	#DHCPV6_MSG_DECLINE
 9

	)

36 
	#DHCPV6_MSG_RECONFIGURE
 10

	)

37 
	#DHCPV6_MSG_INFORMATION_REQUEST
 11

	)

38 
	#DHCPV6_MSG_RELAY_FORW
 12

	)

39 
	#DHCPV6_MSG_RELAY_REPL
 13

	)

41 
	#DHCPV6_OPT_CLIENTID
 1

	)

42 
	#DHCPV6_OPT_SERVERID
 2

	)

43 
	#DHCPV6_OPT_IA_NA
 3

	)

44 
	#DHCPV6_OPT_IA_ADDR
 5

	)

45 
	#DHCPV6_OPT_ORO
 6

	)

46 
	#DHCPV6_OPT_STATUS
 13

	)

47 
	#DHCPV6_OPT_RELAY_MSG
 9

	)

48 
	#DHCPV6_OPT_AUTH
 11

	)

49 
	#DHCPV6_OPT_USER_CLASS
 15

	)

50 
	#DHCPV6_OPT_INTERFACE_ID
 18

	)

51 
	#DHCPV6_OPT_RECONF_MSG
 19

	)

52 
	#DHCPV6_OPT_RECONF_ACCEPT
 20

	)

53 
	#DHCPV6_OPT_DNS_SERVERS
 23

	)

54 
	#DHCPV6_OPT_DNS_DOMAIN
 24

	)

55 
	#DHCPV6_OPT_IA_PD
 25

	)

56 
	#DHCPV6_OPT_IA_PREFIX
 26

	)

57 
	#DHCPV6_OPT_INFO_REFRESH
 32

	)

58 
	#DHCPV6_OPT_FQDN
 39

	)

59 
	#DHCPV6_OPT_SOL_MAX_RT
 82

	)

60 
	#DHCPV6_OPT_INF_MAX_RT
 83

	)

62 #ifde‡
EXT_PREFIX_CLASS


64 
	#DHCPV6_OPT_PREFIX_CLASS
 
EXT_PREFIX_CLASS


	)

67 
	#DHCPV6_DUID_VENDOR
 2

	)

69 
	#DHCPV6_STATUS_OK
 0

	)

70 
	#DHCPV6_STATUS_NOADDRSAVAIL
 2

	)

71 
	#DHCPV6_STATUS_NOBINDING
 3

	)

72 
	#DHCPV6_STATUS_NOTONLINK
 4

	)

73 
	#DHCPV6_STATUS_USEMULTICAST
 5

	)

74 
	#DHCPV6_STATUS_NOPREFIXAVAIL
 6

	)

77 
	#DHCPV6_ENT_NO
 30462

	)

78 
	#DHCPV6_ENT_TYPE
 1

	)

81 
	#DHCPV6_HOP_COUNT_LIMIT
 32

	)

83 
	sdh˝v6_˛õ¡_hódî
 {

84 
uöt8_t
 
	mmsg_ty≥
;

85 
uöt8_t
 
	må™ß˘i⁄_id
[3];

86 } 
__©åibuã__
((
∑cked
));

88 
	sdh˝v6_ªœy_hódî
 {

89 
uöt8_t
 
	mmsg_ty≥
;

90 
uöt8_t
 
	mh›_cou¡
;

91 
ö6_addr
 
	mlök_addªss
;

92 
ö6_addr
 
	m≥î_addªss
;

93 
uöt8_t
 
	m›ti⁄s
[];

94 } 
__©åibuã__
((
∑cked
));

96 
	sdh˝v6_ªœy_f‹w¨d_ívñ›e
 {

97 
uöt8_t
 
	mmsg_ty≥
;

98 
uöt8_t
 
	mh›_cou¡
;

99 
ö6_addr
 
	mlök_addªss
;

100 
ö6_addr
 
	m≥î_addªss
;

101 
uöt16_t
 
	möãrÁ˚_id_ty≥
;

102 
uöt16_t
 
	möãrÁ˚_id_Àn
;

103 
uöt32_t
 
	möãrÁ˚_id_d©a
;

104 
uöt16_t
 
	mªœy_mesßge_ty≥
;

105 
uöt16_t
 
	mªœy_mesßge_Àn
;

106 } 
__©åibuã__
((
∑cked
));

108 
	sdh˝v6_auth_ªc⁄figuª
 {

109 
uöt16_t
 
	mty≥
;

110 
uöt16_t
 
	mÀn
;

111 
uöt8_t
 
	m¥Ÿocﬁ
;

112 
uöt8_t
 
	mÆg‹ôhm
;

113 
uöt8_t
 
	mrdm
;

114 
uöt32_t
 
	mª∂ay
[2];

115 
uöt8_t
 
	mªc⁄f_ty≥
;

116 
uöt8_t
 
	mkey
[16];

117 } 
	g_∑cked
;

119 
	sdh˝v6_ü_hdr
 {

120 
uöt16_t
 
	mty≥
;

121 
uöt16_t
 
	mÀn
;

122 
uöt32_t
 
	müid
;

123 
uöt32_t
 
	mt1
;

124 
uöt32_t
 
	mt2
;

125 } 
	g_∑cked
;

127 
	sdh˝v6_ü_¥efix
 {

128 
uöt16_t
 
	mty≥
;

129 
uöt16_t
 
	mÀn
;

130 
uöt32_t
 
	m¥e„ºed
;

131 
uöt32_t
 
	mvÆid
;

132 
uöt8_t
 
	m¥efix
;

133 
ö6_addr
 
	maddr
;

134 } 
	g_∑cked
;

136 
	sdh˝v6_ü_addr
 {

137 
uöt16_t
 
	mty≥
;

138 
uöt16_t
 
	mÀn
;

139 
ö6_addr
 
	maddr
;

140 
uöt32_t
 
	m¥e„ºed
;

141 
uöt32_t
 
	mvÆid
;

142 } 
	g_∑cked
;

144 
	sdh˝v6_assignmít
 {

145 
li°_hód
 
	mhód
;

146 
sockaddr_ö6
 
	m≥î
;

147 
time_t
 
	mvÆid_u¡û
;

148 
time_t
 
	mªc⁄f_£¡
;

149 
boﬁ
 
	mÆl_˛ass
;

150 
uöt8_t
 
	m˛as£s_˙t
;

151 
uöt16_t
 *
	m˛as£s
;

152 
	mªc⁄f_˙t
;

153 *
	mho°«me
;

154 
uöt8_t
 
	mkey
[16];

155 
uöt32_t
 
	massig√d
;

156 
uöt32_t
 
	müid
;

157 
uöt8_t
 
	mmac
[6];

158 
uöt8_t
 
	mÀngth
;

159 
boﬁ
 
	mac˚±_ªc⁄f
;

161 
odh˝d_ùaddr
 *
	mm™aged
;

162 
ssize_t
 
	mm™aged_size
;

163 
u°ªam_fd
 
	mm™aged_sock
;

165 
uöt8_t
 
	m˛id_Àn
;

166 
uöt8_t
 
	m˛id_d©a
[];

169 
	sdh˝v6_˚r_id
 {

170 
uöt16_t
 
	mty≥
;

171 
uöt16_t
 
	mÀn
;

172 
uöt16_t
 
	mª£rved
;

173 
uöt16_t
 
	mauth_ty≥
;

174 
uöt8_t
 
	mauth
[16];

175 
ö6_addr
 
	maddr
;

180 
	#dh˝v6_f‹_óch_›ti⁄
(
°¨t
, 
íd
, 
Ÿy≥
, 
ﬁí
, 
od©a
)\

181 
uöt8_t
 *
_o
 = (uöt8_t*)(
°¨t
); _ÿ+ 4 <(
íd
) &&\

182 ((
Ÿy≥
Ë
_o
[0] << 8 | _o[1]Ë&& ((
od©a
) = (*)&_o[4]) &&\

183 ((
ﬁí
Ë
_o
[2] << 8 | _o[3]Ë+ (
od©a
Ë<(
íd
); \

184 
_o
 +4 + (_o[2] << 8 | _o[3]))

	)

186 
dh˝v6_öô_ü
(
öãrÁ˚
 *
iÁ˚
, 
sockë
);

187 
ssize_t
 
dh˝v6_h™dÀ_ü
(
uöt8_t
 *
buf
, 
size_t
 
buÊí
, 
öãrÁ˚
 *
iÁ˚
,

188 c⁄° 
sockaddr_ö6
 *
addr
, c⁄° *
d©a
, c⁄° 
uöt8_t
 *
íd
);

189 
dh˝v6_ü_öô
();

190 
£tup_dh˝v6_ü_öãrÁ˚
(
öãrÁ˚
 *
iÁ˚
, 
boﬁ
 
íabÀ
);

191 
dh˝v6_wrôe_°©efûe
();

	@/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/ndp.c

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<sig«l.h
>

18 
	~<î∫o.h
>

20 
	~<uni°d.h
>

21 
	~<¨∑/öë.h
>

22 
	~<sys/sockë.h
>

23 
	~<√t/ëhî√t.h
>

24 
	~<√töë/ù6.h
>

25 
	~<√töë/icmp6.h
>

26 
	~<√çackë/∑ckë.h
>

28 
	~<löux/π√éök.h
>

29 
	~<löux/fûãr.h
>

30 
	~"rouãr.h
"

31 
	~"ndp.h
"

35 
h™dÀ_sﬁicô
(*
addr
, *
d©a
, 
size_t
 
Àn
,

36 
öãrÁ˚
 *
iÁ˚
, *
de°
);

37 
h™dÀ_π√éök
(*
addr
, *
d©a
, 
size_t
 
Àn
,

38 
öãrÁ˚
 *
iÁ˚
, *
de°
);

39 
ndp_√ighb‹
* 
föd_√ighb‹
(
ö6_addr
 *
addr
, 
boﬁ
 
°ri˘
);

40 
modify_√ighb‹
(
ö6_addr
 *
addr
, 
öãrÁ˚
 *
iÁ˚
,

41 
boﬁ
 
add
);

42 
ssize_t
 
pög6
(
ö6_addr
 *
addr
,

43 c⁄° 
öãrÁ˚
 *
iÁ˚
);

45 
li°_hód
 
	g√ighb‹s
 = 
LIST_HEAD_INIT
(
√ighb‹s
);

46 
size_t
 
	g√ighb‹_cou¡
 = 0;

47 
uöt32_t
 
	gπ∆_£qid
 = 0;

49 
	gpög_sockë
 = -1;

50 
odh˝d_evít
 
	gndp_evít
 = {{.
fd
 = -1}, 
	gh™dÀ_sﬁicô
};

51 
odh˝d_evít
 
	gπ∆_evít
 = {{.
fd
 = -1}, 
	gh™dÀ_π√éök
};

55 
sock_fûãr
 
	gbpf
[] = {

56 
BPF_STMT
(
BPF_LD
 | 
BPF_B
 | 
BPF_ABS
, 
off£tof
(
ù6_hdr
, 
ù6_nxt
)),

57 
BPF_JUMP
(
BPF_JMP
 | 
BPF_JEQ
 | 
BPF_K
, 
IPPROTO_ICMPV6
, 0, 3),

58 
BPF_STMT
(
BPF_LD
 | 
BPF_B
 | 
BPF_ABS
, (
ù6_hdr
) +

59 
off£tof
(
icmp6_hdr
, 
icmp6_ty≥
)),

60 
BPF_JUMP
(
BPF_JMP
 | 
BPF_JEQ
 | 
BPF_K
, 
ND_NEIGHBOR_SOLICIT
, 0, 1),

61 
BPF_STMT
(
BPF_RET
 | 
BPF_K
, 0xffffffff),

62 
BPF_STMT
(
BPF_RET
 | 
BPF_K
, 0),

64 c⁄° 
sock_Ârog
 
	gbpf_¥og
 = {(
bpf
) / (*bpf), bpf};

68 
	$öô_ndp
()

71 i‡((
π∆_evít
.
ulo›
.
fd
 = 
	`odh˝d_›í_π∆
()) < 0)

75 
uöt32_t
 
group
 = 
RTNLGRP_IPV6_IFADDR
;

76 
	`£tsock›t
(
π∆_evít
.
ulo›
.
fd
, 
SOL_NETLINK
,

77 
NETLINK_ADD_MEMBERSHIP
, &
group
, (group));

78 
group
 = 
RTNLGRP_IPV6_ROUTE
;

79 
	`£tsock›t
(
π∆_evít
.
ulo›
.
fd
, 
SOL_NETLINK
,

80 
NETLINK_ADD_MEMBERSHIP
, &
group
, (group));

84 
∆msghdr
 
nh
;

85 
iÁddrmsg
 
iÁ
;

86 } 
ªq2
 = {

87 {(
ªq2
), 
RTM_GETADDR
, 
NLM_F_REQUEST
 | 
NLM_F_DUMP
,

88 ++
π∆_£qid
, 0},

89 {.
iÁ_Ámûy
 = 
AF_INET6
}

91 
	`£nd
(
π∆_evít
.
ulo›
.
fd
, &
ªq2
, ‘eq2), 
MSG_DONTWAIT
);

92 
	`odh˝d_ªgi°î
(&
π∆_evít
);

95 
pög_sockë
 = 
	`sockë
(
AF_INET6
, 
SOCK_RAW
 | 
SOCK_CLOEXEC
, 
IPPROTO_ICMPV6
);

96 i‡(
pög_sockë
 < 0) {

97 
	`sy¶og
(
LOG_ERR
, "U«bÀÅÿ›íÑaw sockë: %s", 
	`°ªº‹
(
î∫o
));

101 
vÆ
 = 2;

102 
	`£tsock›t
(
pög_sockë
, 
IPPROTO_RAW
, 
IPV6_CHECKSUM
, &
vÆ
, (val));

105 
vÆ
 = 255;

106 
	`£tsock›t
(
pög_sockë
, 
IPPROTO_IPV6
, 
IPV6_MULTICAST_HOPS
, &
vÆ
, (val));

107 
	`£tsock›t
(
pög_sockë
, 
IPPROTO_IPV6
, 
IPV6_UNICAST_HOPS
, &
vÆ
, (val));

110 
icmp6_fûãr
 
fût
;

111 
	`ICMP6_FILTER_SETBLOCKALL
(&
fût
);

112 
	`£tsock›t
(
pög_sockë
, 
IPPROTO_ICMPV6
, 
ICMP6_FILTER
, &
fût
, (filt));

116 
group
 = 
RTNLGRP_NEIGH
;

117 
	`£tsock›t
(
π∆_evít
.
ulo›
.
fd
, 
SOL_NETLINK
, 
NETLINK_ADD_MEMBERSHIP
, &
group
, (group));

121 
∆msghdr
 
nh
;

122 
ndmsg
 
ndm
;

123 } 
ªq
 = {

124 {(
ªq
), 
RTM_GETNEIGH
, 
NLM_F_REQUEST
 | 
NLM_F_DUMP
,

125 ++
π∆_£qid
, 0},

126 {.
ndm_Ámûy
 = 
AF_INET6
}

128 
	`£nd
(
π∆_evít
.
ulo›
.
fd
, &
ªq
, ‘eq), 
MSG_DONTWAIT
);

131 
	}
}

134 
	$£tup_ndp_öãrÁ˚
(
öãrÁ˚
 *
iÁ˚
, 
boﬁ
 
íabÀ
)

136 
∑ckë_mªq
 
mªq
 = {
iÁ˚
->
ifödex
, 
PACKET_MR_ALLMULTI
, 
ETH_ALEN
, {0}};

137 
	`£tsock›t
(
ndp_evít
.
ulo›
.
fd
, 
SOL_PACKET
, 
PACKET_DROP_MEMBERSHIP
, &
mªq
, (mreq));

139 
ndp_√ighb‹
 *
c
, *
n
;

140 
	`li°_f‹_óch_íåy_ß„
(
c
, 
n
, &
√ighb‹s
, 
hód
)

141 i‡(
c
->
iÁ˚
 =iÁ˚ && (c->
timeout
 =0 || iÁ˚->
ndp
 !
RELAYD_RELAY
 || !
íabÀ
))

142 
	`modify_√ighb‹
(&
c
->
addr
, c->
iÁ˚
, 
Ál£
);

144 i‡(
íabÀ
 && 
iÁ˚
->
ndp
 =
RELAYD_RELAY
) {

145 
	`£tsock›t
(
ndp_evít
.
ulo›
.
fd
, 
SOL_PACKET
, 
PACKET_ADD_MEMBERSHIP
, &
mªq
, (mreq));

147 i‡(
iÁ˚
->
°©ic_ndp_Àn
) {

148 *
íåy
 = 
	`Æloˇ
(
iÁ˚
->
°©ic_ndp_Àn
), *
ßvïå
;

149 i‡(!
íåy
) {

150 
	`sy¶og
(
LOG_ERR
, "Alloca failed for static NDPÜist");

153 
	`mem˝y
(
íåy
, 
iÁ˚
->
°©ic_ndp
, iÁ˚->
°©ic_ndp_Àn
);

155 
íåy
 = 
	`°πok_r
”¡ry, " ", &
ßvïå
);É¡ry;É¡ry = såtok_r(
NULL
, " ", &saveptr)) {

156 *
£p
;

157 
ndp_√ighb‹
 *
n
 = 
	`mÆloc
((*n));

158 i‡(!
n
) {

159 
	`sy¶og
(
LOG_ERR
, "MÆlo¯Áûed f‹ sèti¯NDP-¥efix %s", 
íåy
);

163 
n
->
iÁ˚
 = iface;

164 
n
->
timeout
 = 0;

166 
£p
 = 
	`°rchr
(
íåy
, '/');

167 i‡(!
£p
) {

168 
	`‰ì
(
n
);

169 
	`sy¶og
(
LOG_ERR
, "InvÆid sèti¯NDP-¥efix %s", 
íåy
);

173 *
£p
 = 0;

174 
n
->
Àn
 = 
	`©oi
(
£p
 + 1);

175 i‡(
	`öë_±⁄
(
AF_INET6
, 
íåy
, &
n
->
addr
Ë!1 ||Ç->
Àn
 > 128) {

176 
	`‰ì
(
n
);

177 
	`sy¶og
(
LOG_ERR
, "InvÆid sèti¯NDP-¥efix %s/%s", 
íåy
, 
£p
 + 1);

181 
	`li°_add
(&
n
->
hód
, &
√ighb‹s
);

186 
boﬁ
 
íabÀ_∑ckë
 = 
Ál£
;

187 
öãrÁ˚
 *
i
;

188 
	`li°_f‹_óch_íåy
(
i
, &
öãrÁ˚s
, 
hód
) {

189 i‡(
i
 =
iÁ˚
 && !
íabÀ
)

192 i‡(
i
->
ndp
 =
RELAYD_RELAY
)

193 
íabÀ_∑ckë
 = 
åue
;

196 i‡(
íabÀ_∑ckë
 && 
ndp_evít
.
ulo›
.
fd
 < 0) {

198 
sock
 = 
	`sockë
(
AF_PACKET
, 
SOCK_DGRAM
 | 
SOCK_CLOEXEC
 | 
SOCK_NONBLOCK
,

199 
	`ht⁄s
(
ETH_P_ALL
));

200 i‡(
sock
 < 0) {

201 
	`sy¶og
(
LOG_ERR
, "UnableÅo openÖacket socket: %s",

202 
	`°ªº‹
(
î∫o
));

206 i‡(
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_ATTACH_FILTER
,

207 &
bpf_¥og
, (bpf_prog))) {

208 
	`sy¶og
(
LOG_ERR
, "FaûedÅÿ£àBPF: %s", 
	`°ªº‹
(
î∫o
));

212 
ndp_evít
.
ulo›
.
fd
 = 
sock
;

213 
	`odh˝d_ªgi°î
(&
ndp_evít
);

214 } i‡(!
íabÀ_∑ckë
 && 
ndp_evít
.
ulo›
.
fd
 >= 0) {

215 
	`˛o£
(
ndp_evít
.
ulo›
.
fd
);

216 
ndp_evít
.
ulo›
.
fd
 = -1;

220 
	}
}

225 
ssize_t
 
	$pög6
(
ö6_addr
 *
addr
,

226 c⁄° 
öãrÁ˚
 *
iÁ˚
)

228 
sockaddr_ö6
 
de°
 = {
AF_INET6
, 0, 0, *
addr
, 0};

229 
icmp6_hdr
 
echo
 = {.
icmp6_ty≥
 = 
ICMP6_ECHO_REQUEST
};

230 
iovec
 
iov
 = {&
echo
, (echo)};

233 
	`£tsock›t
(
pög_sockë
, 
SOL_SOCKET
, 
SO_BINDTODEVICE
,

234 
iÁ˚
->
i‚ame
, (iface->ifname));

235  
	`odh˝d_£nd
(
pög_sockë
, &
de°
, &
iov
, 1, 
iÁ˚
);

236 
	}
}

240 
	$h™dÀ_sﬁicô
(*
addr
, *
d©a
, 
size_t
 
Àn
,

241 
öãrÁ˚
 *
iÁ˚
, 
_unu£d
 *
de°
)

243 
ù6_hdr
 *
ù6
 = 
d©a
;

244 
nd_√ighb‹_sﬁicô
 *
ªq
 = (nd_√ighb‹_sﬁicô*)&
ù6
[1];

245 
sockaddr_Œ
 *
Œ
 = 
addr
;

248 
boﬁ
 
ns_is_dad
 = 
	`IN6_IS_ADDR_UNSPECIFIED
(&
ù6
->
ù6_§c
);

252 i‡(
iÁ˚
->
exã∫Æ
 && !
ns_is_dad
)

255 i‡(
Àn
 < (*
ù6
Ë+ (*
ªq
))

258 i‡(
	`IN6_IS_ADDR_LINKLOCAL
(&
ªq
->
nd_ns_èrgë
) ||

259 
	`IN6_IS_ADDR_LOOPBACK
(&
ªq
->
nd_ns_èrgë
) ||

260 
	`IN6_IS_ADDR_MULTICAST
(&
ªq
->
nd_ns_èrgë
))

263 
ùbuf
[
INET6_ADDRSTRLEN
];

264 
	`öë_¡›
(
AF_INET6
, &
ªq
->
nd_ns_èrgë
, 
ùbuf
, (ipbuf));

265 
	`sy¶og
(
LOG_DEBUG
, "GŸá NS f‹ %s", 
ùbuf
);

267 
uöt8_t
 
mac
[6];

268 
	`odh˝d_gë_mac
(
iÁ˚
, 
mac
);

269 i‡(!
	`memcmp
(
Œ
->
¶l_addr
, 
mac
, (mac)) &&

270 
Œ
->
¶l_pkây≥
 !
PACKET_OUTGOING
)

273 
time_t
 
now
 = 
	`time
(
NULL
);

275 
ndp_√ighb‹
 *
n
 = 
	`föd_√ighb‹
(&
ªq
->
nd_ns_èrgë
, 
Ál£
);

276 i‡(
n
 && (n->
iÁ˚
 || 
	`abs
“->
timeout
 - 
now
) < 5)) {

277 
	`sy¶og
(
LOG_DEBUG
, "%†i†⁄ %s", 
ùbuf
,

278 (
n
->
iÁ˚
Ë?Ç->iÁ˚->
i‚ame
 : "<pending>");

279 i‡(!
n
->
iÁ˚
 ||Ç->iface == iface)

284 
nd_√ighb‹_advît
 
body
;

285 
nd_›t_hdr
 
›t_Œ_hdr
;

286 
uöt8_t
 
mac
[6];

287 } 
advît
 = {

288 .
body
 = {

289 .
nd_«_hdr
 = {
ND_NEIGHBOR_ADVERT
,

291 .
nd_«_èrgë
 = 
ªq
->
nd_ns_èrgë
,

293 .
›t_Œ_hdr
 = {
ND_OPT_TARGET_LINKADDR
, 1},

296 
	`mem˝y
(
advît
.
mac
, mac, (advert.mac));

297 
advît
.
body
.
nd_«_Êags_ª£rved
 = 
ND_NA_FLAG_ROUTER
 |

298 
ND_NA_FLAG_SOLICITED
;

300 
sockaddr_ö6
 
de°
 = {
AF_INET6
, 0, 0, 
ALL_IPV6_NODES
, 0};

301 i‡(!
ns_is_dad
)

302 
de°
.
sö6_addr
 = 
ù6
->
ù6_§c
;

305 
	`£tsock›t
(
pög_sockë
, 
SOL_SOCKET
, 
SO_BINDTODEVICE
,

306 
iÁ˚
->
i‚ame
, (iface->ifname));

307 
iovec
 
iov
 = {&
advît
, (advert)};

308 
	`odh˝d_£nd
(
pög_sockë
, &
de°
, &
iov
, 1, 
iÁ˚
);

314 
ssize_t
 
£¡
 = 0;

315 
öãrÁ˚
 *
c
;

316 
	`li°_f‹_óch_íåy
(
c
, &
öãrÁ˚s
, 
hód
)

317 i‡(
iÁ˚
->
ndp
 =
RELAYD_RELAY
 && iÁ˚ !
c
 &&

318 (!
ns_is_dad
 || !
c
->
exã∫Æ
 =
Ál£
))

319 
£¡
 +
	`pög6
(&
ªq
->
nd_ns_èrgë
, 
c
);

321 i‡(
£¡
 > 0)

322 
	`modify_√ighb‹
(&
ªq
->
nd_ns_èrgë
, 
NULL
, 
åue
);

324 
	}
}

327 
	$odh˝d_£tup_rouã
(c⁄° 
ö6_addr
 *
addr
, 
¥efixÀn
,

328 c⁄° 
öãrÁ˚
 *
iÁ˚
, c⁄° 
ö6_addr
 *
gw
, 
boﬁ
 
add
)

330 
	sªq
 {

331 
∆msghdr
 
nh
;

332 
πmsg
 
πm
;

333 
π©å
 
πa_d°
;

334 
ö6_addr
 
d°_addr
;

335 
π©å
 
πa_oif
;

336 
uöt32_t
 
ifödex
;

337 
π©å
 
πa_èbÀ
;

338 
uöt32_t
 
èbÀ
;

339 
π©å
 
πa_gw
;

340 
ö6_addr
 
gw
;

341 } 
ªq
 = {

342 {(
ªq
), 0, 
NLM_F_REQUEST
, ++
π∆_£qid
, 0},

343 {
AF_INET6
, 
¥efixÀn
, 0, 0, 0, 0, 0, 0, 0},

344 {(
π©å
Ë+ (
ö6_addr
), 
RTA_DST
},

345 *
addr
,

346 {(
π©å
Ë+ (
uöt32_t
), 
RTA_OIF
},

347 
iÁ˚
->
ifödex
,

348 {(
π©å
Ë+ (
uöt32_t
), 
RTA_TABLE
},

349 
RT_TABLE_MAIN
,

350 {(
π©å
Ë+ (
ö6_addr
), 
RTA_GATEWAY
},

351 
IN6ADDR_ANY_INIT
,

354 i‡(
gw
)

355 
ªq
.
gw
 = *gw;

357 i‡(
add
) {

358 
ªq
.
nh
.
∆msg_ty≥
 = 
RTM_NEWROUTE
;

359 
ªq
.
nh
.
∆msg_Êags
 |(
NLM_F_CREATE
 | 
NLM_F_REPLACE
);

360 
ªq
.
πm
.
πm_¥Ÿocﬁ
 = 
RTPROT_BOOT
;

361 
ªq
.
πm
.
πm_sc›e
 = (
gw
Ë? 
RT_SCOPE_UNIVERSE
 : 
RT_SCOPE_LINK
;

362 
ªq
.
πm
.
πm_ty≥
 = 
RTN_UNICAST
;

364 
ªq
.
nh
.
∆msg_ty≥
 = 
RTM_DELROUTE
;

365 
ªq
.
πm
.
πm_sc›e
 = 
RT_SCOPE_NOWHERE
;

368 
size_t
 
ªqÀn
 = (
gw
Ë? (
ªq
Ë: 
	`off£tof
(ªq, 
πa_gw
);

369 
	`£nd
(
π∆_evít
.
ulo›
.
fd
, &
ªq
, 
ªqÀn
, 
MSG_DONTWAIT
);

370 
	}
}

373 
	$£tup_rouã
(
ö6_addr
 *
addr
, 
öãrÁ˚
 *
iÁ˚
,

374 
boﬁ
 
add
)

376 
«mebuf
[
INET6_ADDRSTRLEN
];

377 
	`öë_¡›
(
AF_INET6
, 
addr
, 
«mebuf
, (namebuf));

378 
	`sy¶og
(
LOG_NOTICE
, "%†abouà%†⁄ %s", (
add
) ? "Learned" : "Forgot",

379 
«mebuf
, (
iÁ˚
Ë? iÁ˚->
i‚ame
 : "<pending>");

381 i‡(!
iÁ˚
 || !iÁ˚->
À¨n_rouãs
)

384 
	`odh˝d_£tup_rouã
(
addr
, 128, 
iÁ˚
, 
NULL
, 
add
);

385 
	}
}

387 
	$‰ì_√ighb‹
(
ndp_√ighb‹
 *
n
)

389 
	`£tup_rouã
(&
n
->
addr
,Ç->
iÁ˚
, 
Ál£
);

390 
	`li°_dñ
(&
n
->
hód
);

391 
	`‰ì
(
n
);

392 --
√ighb‹_cou¡
;

393 
	}
}

395 
ndp_√ighb‹
* 
	$föd_√ighb‹
(
ö6_addr
 *
addr
, 
boﬁ
 
°ri˘
)

397 
time_t
 
now
 = 
	`time
(
NULL
);

398 
ndp_√ighb‹
 *
n
, *
e
;

399 
	`li°_f‹_óch_íåy_ß„
(
n
, 
e
, &
√ighb‹s
, 
hód
) {

400 i‡((!
°ri˘
 && !
	`odh˝d_bmemcmp
(&
n
->
addr
,áddr,Ç->
Àn
)) ||

401 (
n
->
Àn
 =128 && 
	`IN6_ARE_ADDR_EQUAL
(&n->
addr
,áddr)))

402  
n
;

404 i‡(!
n
->
iÁ˚
 && 
	`abs
“->
timeout
 - 
now
) >= 5)

405 
	`‰ì_√ighb‹
(
n
);

407  
NULL
;

408 
	}
}

412 
	$modify_√ighb‹
(
ö6_addr
 *
addr
,

413 
öãrÁ˚
 *
iÁ˚
, 
boﬁ
 
add
)

415 i‡(!
addr
 || (*Ôdd∏=(*)
iÁ˚
)

418 
ndp_√ighb‹
 *
n
 = 
	`föd_√ighb‹
(
addr
, 
åue
);

419 i‡(!
add
) {

420 i‡(
n
 && (!n->
iÁ˚
 ||Ç->iface == iface))

421 
	`‰ì_√ighb‹
(
n
);

422 } i‡(!
n
) {

423 i‡(
√ighb‹_cou¡
 >
NDP_MAX_NEIGHBORS
 ||

424 !(
n
 = 
	`mÆloc
((*n))))

427 
n
->
Àn
 = 128;

428 
n
->
addr
 = *addr;

429 
n
->
iÁ˚
 = iface;

430 i‡(!
n
->
iÁ˚
)

431 
	`time
(&
n
->
timeout
);

432 
	`li°_add
(&
n
->
hód
, &
√ighb‹s
);

433 ++
√ighb‹_cou¡
;

434 
	`£tup_rouã
(
addr
, 
n
->
iÁ˚
, 
add
);

435 } i‡(
n
->
iÁ˚
 == iface) {

436 i‡(!
n
->
iÁ˚
)

437 
	`time
(&
n
->
timeout
);

438 } i‡(
iÁ˚
 && (!
n
->iface ||

439 (!
iÁ˚
->
exã∫Æ
 && 
n
->iface->external))) {

440 
	`£tup_rouã
(
addr
, 
n
->
iÁ˚
, 
Ál£
);

441 
n
->
iÁ˚
 = iface;

442 
	`£tup_rouã
(
addr
, 
n
->
iÁ˚
, 
add
);

447 
	}
}

452 
	$h™dÀ_π√éök
(
_unu£d
 *
addr
, *
d©a
, 
size_t
 
Àn
,

453 
_unu£d
 
öãrÁ˚
 *
iÁ˚
, _unu£d *
de°
)

455 
∆msghdr
 *
nh
 = 
d©a
; 
	`NLMSG_OK
“h, 
Àn
);

456 
nh
 = 
	`NLMSG_NEXT
“h, 
Àn
)) {

457 
πmsg
 *
πm
 = 
	`NLMSG_DATA
(
nh
);

458 i‡((
nh
->
∆msg_ty≥
 =
RTM_NEWROUTE
 ||

459 
nh
->
∆msg_ty≥
 =
RTM_DELROUTE
) &&

460 
πm
->
πm_d°_Àn
 == 0)

461 
	`øi£
(
SIGUSR1
);

463 
ndmsg
 *
ndm
 = 
	`NLMSG_DATA
(
nh
);

464 
iÁddrmsg
 *
iÁ
 = 
	`NLMSG_DATA
(
nh
);

465 i‡(
nh
->
∆msg_ty≥
 !
RTM_NEWNEIGH


466 && 
nh
->
∆msg_ty≥
 !
RTM_DELNEIGH


467 && 
nh
->
∆msg_ty≥
 !
RTM_NEWADDR


468 && 
nh
->
∆msg_ty≥
 !
RTM_DELADDR
)

470 
boﬁ
 
is_addr
 = (
nh
->
∆msg_ty≥
 =
RTM_NEWADDR


471 || 
nh
->
∆msg_ty≥
 =
RTM_DELADDR
);

474 i‡(
	`NLMSG_PAYLOAD
(
nh
, 0Ë< (*
ndm
)

475 || 
ndm
->
ndm_Ámûy
 !
AF_INET6
)

479 
öãrÁ˚
 *
iÁ˚
;

480 i‡(!(
iÁ˚
 = 
	`odh˝d_gë_öãrÁ˚_by_ödex
(
ndm
->
ndm_ifödex
)))

484 
size_t
 
πa_off£t
 = (
is_addr
Ë? (*
iÁ
Ë: (*
ndm
);

485 
uöt16_t
 
©y≥
 = (
is_addr
Ë? 
IFA_ADDRESS
 : 
NDA_DST
;

486 
ssize_t
 
Æí
 = 
	`NLMSG_PAYLOAD
(
nh
, 
πa_off£t
);

487 
ö6_addr
 *
addr
 = 
NULL
;

489 
π©å
 *
πa
 = (*)(((
uöt8_t
*)
ndm
Ë+ 
πa_off£t
);

490 
	`RTA_OK
(
πa
, 
Æí
);Ñè = 
	`RTA_NEXT
(rta,álen))

491 i‡(
πa
->
πa_ty≥
 =
©y≥
 &&

492 
	`RTA_PAYLOAD
(
πa
Ë>(*
addr
))

493 
addr
 = 
	`RTA_DATA
(
πa
);

496 i‡(!
addr
 || 
	`IN6_IS_ADDR_LINKLOCAL
(addr) ||

497 
	`IN6_IS_ADDR_MULTICAST
(
addr
))

501 
boﬁ
 
add
;

502 i‡(
is_addr
)

503 
add
 = (
nh
->
∆msg_ty≥
 =
RTM_NEWADDR
);

505 
add
 = (
nh
->
∆msg_ty≥
 =
RTM_NEWNEIGH
 && (
ndm
->
ndm_°©e
 &

506 (
NUD_REACHABLE
 | 
NUD_STALE
 | 
NUD_DELAY
 | 
NUD_PROBE


507 | 
NUD_PERMANENT
 | 
NUD_NOARP
)));

509 i‡(
iÁ˚
->
ndp
 =
RELAYD_RELAY
)

510 
	`modify_√ighb‹
(
addr
, 
iÁ˚
, 
add
);

512 i‡(
is_addr
 && 
iÁ˚
->
ø
 =
RELAYD_SERVER
)

513 
	`øi£
(
SIGUSR1
);

515 i‡(
is_addr
 && 
iÁ˚
->
dh˝v6
 =
RELAYD_SERVER
)

516 
iÁ˚
->
ü_ªc⁄f
 = 
åue
;

518 i‡(
iÁ˚
->
ndp
 =
RELAYD_RELAY
 && 
is_addr
 && iÁ˚->
ma°î
) {

520 
nh
->
∆msg_Êags
 = 
NLM_F_REQUEST
;

522 i‡(
nh
->
∆msg_ty≥
 =
RTM_NEWADDR
)

523 
nh
->
∆msg_Êags
 |
NLM_F_CREATE
 | 
NLM_F_REPLACE
;

525 
öãrÁ˚
 *
c
;

526 
	`li°_f‹_óch_íåy
(
c
, &
öãrÁ˚s
, 
hód
) {

527 i‡(
c
->
ndp
 =
RELAYD_RELAY
 && !c->
ma°î
) {

528 
iÁ
->
iÁ_ödex
 = 
c
->
ifödex
;

529 
	`£nd
(
π∆_evít
.
ulo›
.
fd
, 
nh
,Çh->
∆msg_Àn
, 
MSG_DONTWAIT
);

537 i‡(
add
 && (
ndm
->
ndm_°©e
 & 
NUD_STALE
))

538 
	`pög6
(
addr
, 
iÁ˚
);

540 
	}
}

	@/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/ndp.h

15 #¥agm®
⁄˚


16 
	~"odh˝d.h
"

17 
	~<time.h
>

19 #i‚de‡
SOL_NETLINK


20 
	#SOL_NETLINK
 270

	)

23 
	#NDP_MAX_NEIGHBORS
 1000

	)

25 
	sndp_√ighb‹
 {

26 
li°_hód
 
	mhód
;

27 
öãrÁ˚
 *
	miÁ˚
;

28 
ö6_addr
 
	maddr
;

29 
uöt8_t
 
	mÀn
;

30 
time_t
 
	mtimeout
;

	@/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/odhcpd.c

15 
	~<time.h
>

16 
	~<î∫o.h
>

17 
	~<f˙é.h
>

18 
	~<°dio.h
>

19 
	~<ªsﬁv.h
>

20 
	~<gë›t.h
>

21 
	~<°ddef.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<uni°d.h
>

25 
	~<sig«l.h
>

26 
	~<°dboﬁ.h
>

28 
	~<¨∑/öë.h
>

29 
	~<√t/if.h
>

30 
	~<√töë/ù6.h
>

31 
	~<√çackë/∑ckë.h
>

32 
	~<löux/π√éök.h
>

34 
	~<sys/sockë.h
>

35 
	~<sys/io˘l.h
>

36 
	~<sys/ïﬁl.h
>

37 
	~<sys/ty≥s.h
>

38 
	~<sys/waô.h
>

39 
	~<sys/sysˇŒ.h
>

41 
	~<libubox/ulo›.h
>

42 
	~"odh˝d.h
"

46 
	gio˘l_sock
;

47 
	gπ∆_sockë
 = -1;

48 
	gπ∆_£q
 = 0;

49 
	guøndom_fd
 = -1;

52 
	$maö
()

54 
	`›ílog
("odh˝d", 
LOG_PERROR
 | 
LOG_PID
, 
LOG_DAEMON
);

55 
	`£éogmask
(
	`LOG_UPTO
(
LOG_WARNING
));

56 
	`ulo›_öô
();

58 i‡(
	`gëuid
() != 0) {

59 
	`sy¶og
(
LOG_ERR
, "Must beÑunásÑoot!");

63 
io˘l_sock
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
 | 
SOCK_CLOEXEC
, 0);

65 i‡((
π∆_sockë
 = 
	`odh˝d_›í_π∆
()) < 0) {

66 
	`sy¶og
(
LOG_ERR
, "U«bÀÅÿ›í sockë: %s", 
	`°ªº‹
(
î∫o
));

70 i‡((
uøndom_fd
 = 
	`›í
("/dev/uøndom", 
O_RDONLY
 | 
O_CLOEXEC
)) < 0)

73 
	`sig«l
(
SIGUSR1
, 
SIG_IGN
);

75 i‡(
	`öô_rouãr
())

78 i‡(
	`öô_dh˝v6
())

81 i‡(
	`öô_ndp
())

84 i‡(
	`öô_dh˝v4
())

87 
	`odh˝d_run
();

89 
	}
}

91 
	$odh˝d_›í_π∆
()

93 
sock
 = 
	`sockë
(
AF_NETLINK
, 
SOCK_RAW
 | 
SOCK_CLOEXEC
, 
NETLINK_ROUTE
);

96 
sockaddr_∆
 
∆
 = {.
∆_Ámûy
 = 
AF_NETLINK
};

97 i‡(
	`c⁄√˘
(
sock
, (
sockaddr
*)&
∆
, (nl))) {

98 
	`sy¶og
(
LOG_ERR
, "FailedÅo connectÅo kernelÑtnetlink: %s",

99 
	`°ªº‹
(
î∫o
));

103  
sock
;

104 
	}
}

108 
	$odh˝d_gë_öãrÁ˚_mtu
(c⁄° *
i‚ame
)

110 
buf
[64];

111 c⁄° *
sys˘l_∑âîn
 = "/proc/sys/net/ipv6/conf/%s/mtu";

112 
	`¢¥ötf
(
buf
, (buf), 
sys˘l_∑âîn
, 
i‚ame
);

114 
fd
 = 
	`›í
(
buf
, 
O_RDONLY
);

115 
ssize_t
 
Àn
 = 
	`ªad
(
fd
, 
buf
, (buf) - 1);

116 
	`˛o£
(
fd
);

118 i‡(
Àn
 < 0)

122 
buf
[
Àn
] = 0;

123  
	`©oi
(
buf
);

125 
	}
}

129 
	$odh˝d_gë_mac
(c⁄° 
öãrÁ˚
 *
iÁ˚
, 
uöt8_t
 
mac
[6])

131 
i‰eq
 
i‰
;

132 
	`mem£t
(&
i‰
, 0, (ifr));

133 
	`°∫˝y
(
i‰
.
i‰_«me
, 
iÁ˚
->
i‚ame
, (ifr.ifr_name));

134 i‡(
	`io˘l
(
io˘l_sock
, 
SIOCGIFHWADDR
, &
i‰
) < 0)

136 
	`mem˝y
(
mac
, 
i‰
.
i‰_hwaddr
.
ß_d©a
, 6);

138 
	}
}

142 
ssize_t
 
	$odh˝d_£nd
(
sockë
, 
sockaddr_ö6
 *
de°
,

143 
iovec
 *
iov
, 
size_t
 
iov_Àn
,

144 c⁄° 
öãrÁ˚
 *
iÁ˚
)

147 
uöt8_t
 
cmsg_buf
[
	`CMSG_SPACE
((
ö6_pktöfo
))] = {0};

148 
msghdr
 
msg
 = {(*)
de°
, (*de°), 
iov
, 
iov_Àn
,

149 
cmsg_buf
, (cmsg_buf), 0};

152 
cmsghdr
 *
chdr
 = 
	`CMSG_FIRSTHDR
(&
msg
);

153 
chdr
->
cmsg_Àvñ
 = 
IPPROTO_IPV6
;

154 
chdr
->
cmsg_ty≥
 = 
IPV6_PKTINFO
;

155 
chdr
->
cmsg_Àn
 = 
	`CMSG_LEN
((
ö6_pktöfo
));

156 
ö6_pktöfo
 *
pktöfo
 = (ö6_pktöfo*)
	`CMSG_DATA
(
chdr
);

157 
pktöfo
->
ùi6_ifödex
 = 
iÁ˚
->
ifödex
;

160 i‡(
	`IN6_IS_ADDR_LINKLOCAL
(&
de°
->
sö6_addr
)

161 || 
	`IN6_IS_ADDR_MC_LINKLOCAL
(&
de°
->
sö6_addr
))

162 
de°
->
sö6_sc›e_id
 = 
iÁ˚
->
ifödex
;

165 i‡(
de°
->
sö6_p‹t
 == 0) {

166 
msg
.
msg_c⁄åﬁ
 = 
NULL
;

167 
msg
.
msg_c⁄åﬁÀn
 = 0;

170 
ùbuf
[
INET6_ADDRSTRLEN
];

171 
	`öë_¡›
(
AF_INET6
, &
de°
->
sö6_addr
, 
ùbuf
, (ipbuf));

173 
ssize_t
 
£¡
 = 
	`£ndmsg
(
sockë
, &
msg
, 
MSG_DONTWAIT
);

174 i‡(
£¡
 < 0)

175 
	`sy¶og
(
LOG_NOTICE
, "FailedÅo sendÅo %s%%%s (%s)",

176 
ùbuf
, 
iÁ˚
->
i‚ame
, 
	`°ªº‹
(
î∫o
));

178 
	`sy¶og
(
LOG_DEBUG
, "Sent %li bytesÅo %s%%%s",

179 ()
£¡
, 
ùbuf
, 
iÁ˚
->
i‚ame
);

180  
£¡
;

181 
	}
}

185 
ssize_t
 
	$odh˝d_gë_öãrÁ˚_addªs£s
(
ifödex
,

186 
odh˝d_ùaddr
 *
addrs
, 
size_t
 
˙t
)

189 
∆msghdr
 
nhm
;

190 
iÁddrmsg
 
iÁ
;

191 } 
ªq
 = {{‘eq), 
RTM_GETADDR
, 
NLM_F_REQUEST
 | 
NLM_F_DUMP
,

192 ++
π∆_£q
, 0}, {
AF_INET6
, 0, 0, 0, 
ifödex
}};

193 i‡(
	`£nd
(
π∆_sockë
, &
ªq
, ‘eq), 0Ë< (
ssize_t
)(req))

196 
uöt8_t
 
buf
[8192];

197 
ssize_t
 
Àn
 = 0, 
ªt
 = 0;

199 
∆msghdr
 *
nhm
 = 
NULL
; ;Çhm = 
	`NLMSG_NEXT
“hm, 
Àn
)) {

200 
Àn
 < 0 || !
	`NLMSG_OK
(
nhm
, (
size_t
)len)) {

201 
Àn
 = 
	`ªcv
(
π∆_sockë
, 
buf
, (buf), 0);

202 
nhm
 = (
∆msghdr
*)
buf
;

203 i‡(
Àn
 < 0 || !
	`NLMSG_OK
(
nhm
, (
size_t
)len)) {

204 i‡(
î∫o
 =
EINTR
)

207  
ªt
;

211 i‡(
nhm
->
∆msg_ty≥
 !
RTM_NEWADDR
)

215 i‡(
ªt
 >(
ssize_t
)
˙t
)

218 
iÁddrmsg
 *
iÁ
 = 
	`NLMSG_DATA
(
nhm
);

219 i‡(
iÁ
->
iÁ_sc›e
 !
RT_SCOPE_UNIVERSE
 ||

220 (
ifödex
 && 
iÁ
->
iÁ_ödex
 != ()ifindex))

223 
π©å
 *
πa
 = (π©å*)&
iÁ
[1];

224 
size_t
 
Æí
 = 
	`NLMSG_PAYLOAD
(
nhm
, (*
iÁ
));

225 
	`mem£t
(&
addrs
[
ªt
], 0, (addrs[ret]));

226 
addrs
[
ªt
].
¥efix
 = 
iÁ
->
iÁ_¥efixÀn
;

228 
	`RTA_OK
(
πa
, 
Æí
)) {

229 i‡(
πa
->
πa_ty≥
 =
IFA_ADDRESS
) {

230 
	`mem˝y
(&
addrs
[
ªt
].
addr
, 
	`RTA_DATA
(
πa
),

231 (
ö6_addr
));

232 } i‡(
πa
->
πa_ty≥
 =
IFA_CACHEINFO
) {

233 
iÁ_ˇcheöfo
 *
ifc
 = 
	`RTA_DATA
(
πa
);

234 
addrs
[
ªt
].
¥e„ºed
 = 
ifc
->
iÁ_¥e„ªd
;

235 
addrs
[
ªt
].
vÆid
 = 
ifc
->
iÁ_vÆid
;

238 
πa
 = 
	`RTA_NEXT
‘è, 
Æí
);

241 i‡(
iÁ
->
iÁ_Êags
 & 
IFA_F_DEPRECATED
)

242 
addrs
[
ªt
].
¥e„ºed
 = 0;

244 
addrs
[
ªt
].
has_˛ass
 = 
Ál£
;

245 
addrs
[
ªt
].
˛ass
 = 0;

246 #ifde‡
WITH_UBUS


247 
öãrÁ˚
 *
iÁ˚
 = 
	`odh˝d_gë_öãrÁ˚_by_ödex
(
ifödex
);

248 i‡(
iÁ˚
)

249 
addrs
[
ªt
].
has_˛ass
 = 
	`ubus_gë_˛ass
(
iÁ˚
->
i‚ame
,

250 &
addrs
[
ªt
].
addr
, &addrs[ªt].
˛ass
);

252 ++
ªt
;

255  
ªt
;

256 
	}
}

259 
öãrÁ˚
* 
	$odh˝d_gë_öãrÁ˚_by_ödex
(
ifödex
)

261 
öãrÁ˚
 *
iÁ˚
;

262 
	`li°_f‹_óch_íåy
(
iÁ˚
, &
öãrÁ˚s
, 
hód
)

263 i‡(
iÁ˚
->
ifödex
 == ifindex)

264  
iÁ˚
;

266  
NULL
;

267 
	}
}

270 
öãrÁ˚
* 
	$odh˝d_gë_öãrÁ˚_by_«me
(c⁄° *
«me
)

272 
öãrÁ˚
 *
iÁ˚
;

273 
	`li°_f‹_óch_íåy
(
iÁ˚
, &
öãrÁ˚s
, 
hód
)

274 i‡(!
	`°rcmp
(
iÁ˚
->
i‚ame
, 
«me
))

275  
iÁ˚
;

277  
NULL
;

278 
	}
}

281 
öãrÁ˚
* 
	$odh˝d_gë_ma°î_öãrÁ˚
()

283 
öãrÁ˚
 *
iÁ˚
;

284 
	`li°_f‹_óch_íåy
(
iÁ˚
, &
öãrÁ˚s
, 
hód
)

285 i‡(
iÁ˚
->
ma°î
)

286  
iÁ˚
;

288  
NULL
;

289 
	}
}

293 
	$odh˝d_ª˚ive_∑ckës
(
ulo›_fd
 *
u
, 
_unu£d
 
evíts
)

295 
odh˝d_evít
 *
e
 = 
	`c⁄èöî_of
(
u
, odh˝d_evít, 
ulo›
);

297 
uöt8_t
 
d©a_buf
[
RELAYD_BUFFER_SIZE
], 
cmsg_buf
[128];

299 
sockaddr_ö6
 
ö6
;

300 
sockaddr_ö
 
ö
;

301 
sockaddr_Œ
 
Œ
;

302 
sockaddr_∆
 
∆
;

303 } 
addr
;

305 
åue
) {

306 
iovec
 
iov
 = {
d©a_buf
, (data_buf)};

307 
msghdr
 
msg
 = {&
addr
, ◊ddr), &
iov
, 1,

308 
cmsg_buf
, (cmsg_buf), 0};

310 
ssize_t
 
Àn
 = 
	`ªcvmsg
(
u
->
fd
, &
msg
, 
MSG_DONTWAIT
);

311 i‡(
Àn
 < 0) {

312 i‡(
î∫o
 =
EAGAIN
)

320 
de°iÁ˚
 = 0;

321 *
hlim
 = 
NULL
;

322 *
de°
 = 
NULL
;

323 
ö6_pktöfo
 *
pktöfo
;

324 
ö_pktöfo
 *
pkt4öfo
;

325 
cmsghdr
 *
ch
 = 
	`CMSG_FIRSTHDR
(&
msg
); ch !
NULL
; ch = 
	`CMSG_NXTHDR
(&msg, ch)) {

326 i‡(
ch
->
cmsg_Àvñ
 =
IPPROTO_IPV6
 &&

327 
ch
->
cmsg_ty≥
 =
IPV6_PKTINFO
) {

328 
pktöfo
 = (
ö6_pktöfo
*)
	`CMSG_DATA
(
ch
);

329 
de°iÁ˚
 = 
pktöfo
->
ùi6_ifödex
;

330 
de°
 = &
pktöfo
->
ùi6_addr
;

331 } i‡(
ch
->
cmsg_Àvñ
 =
IPPROTO_IP
 &&

332 
ch
->
cmsg_ty≥
 =
IP_PKTINFO
) {

333 
pkt4öfo
 = (
ö_pktöfo
*)
	`CMSG_DATA
(
ch
);

334 
de°iÁ˚
 = 
pkt4öfo
->
ùi_ifödex
;

335 
de°
 = &
pkt4öfo
->
ùi_addr
;

336 } i‡(
ch
->
cmsg_Àvñ
 =
IPPROTO_IPV6
 &&

337 
ch
->
cmsg_ty≥
 =
IPV6_HOPLIMIT
) {

338 
hlim
 = (*)
	`CMSG_DATA
(
ch
);

343 i‡(
hlim
 && *hlim != 255)

347 i‡(
addr
.
Œ
.
¶l_Ámûy
 =
AF_PACKET
)

348 
de°iÁ˚
 = 
addr
.
Œ
.
¶l_ifödex
;

350 
öãrÁ˚
 *
iÁ˚
 =

351 
	`odh˝d_gë_öãrÁ˚_by_ödex
(
de°iÁ˚
);

353 i‡(!
iÁ˚
 && 
addr
.
∆
.
∆_Ámûy
 !
AF_NETLINK
)

356 
ùbuf
[
INET6_ADDRSTRLEN
] = "kernel";

357 i‡(
addr
.
Œ
.
¶l_Ámûy
 =
AF_PACKET
 &&

358 
Àn
 >(
ssize_t
)(
ù6_hdr
))

359 
	`öë_¡›
(
AF_INET6
, &
d©a_buf
[8], 
ùbuf
, (ipbuf));

360 i‡(
addr
.
ö6
.
sö6_Ámûy
 =
AF_INET6
)

361 
	`öë_¡›
(
AF_INET6
, &
addr
.
ö6
.
sö6_addr
, 
ùbuf
, (ipbuf));

362 i‡(
addr
.
ö
.
sö_Ámûy
 =
AF_INET
)

363 
	`öë_¡›
(
AF_INET
, &
addr
.
ö
.
sö_addr
, 
ùbuf
, (ipbuf));

365 
	`sy¶og
(
LOG_DEBUG
, "--");

366 
	`sy¶og
(
LOG_DEBUG
, "Re˚ived %lòByã†‰om %s%%%s", ()
Àn
,

367 
ùbuf
, (
iÁ˚
Ë? iÁ˚->
i‚ame
 : "netlink");

369 
e
->
	`h™dÀ_dgøm
(&
addr
, 
d©a_buf
, 
Àn
, 
iÁ˚
, 
de°
);

371 
	}
}

374 
	$odh˝d_ªgi°î
(
odh˝d_evít
 *
evít
)

376 
evít
->
ulo›
.
cb
 = 
odh˝d_ª˚ive_∑ckës
;

377  
	`ulo›_fd_add
(&
evít
->
ulo›
, 
ULOOP_READ
);

378 
	}
}

380 
	$odh˝d_uøndom
(*
d©a
, 
size_t
 
Àn
)

382 
	`ªad
(
uøndom_fd
, 
d©a
, 
Àn
);

383 
	}
}

386 
time_t
 
	$odh˝d_time
()

388 
time•ec
 
ts
;

389 
	`sysˇŒ
(
SYS_˛ock_gëtime
, 
CLOCK_MONOTONIC
, &
ts
);

390  
ts
.
tv_£c
;

391 
	}
}

394 c⁄° 
	ghexdigôs
[] = "0123456789abcdef";

395 c⁄° 
öt8_t
 
	ghexvÆs
[] = {

406 
ssize_t
 
	$odh˝d_unhexlify
(
uöt8_t
 *
d°
, 
size_t
 
Àn
, c⁄° *
§c
)

408 
size_t
 
c
;

409 
c
 = 0; c < 
Àn
 && 
§c
[0] && src[1]; ++c) {

410 
öt8_t
 
x
 = (öt8_t)*
§c
++;

411 
öt8_t
 
y
 = (öt8_t)*
§c
++;

412 i‡(
x
 < 0 || (x = 
hexvÆs
[x]) < 0

413 || 
y
 < 0 || (y = 
hexvÆs
[y]) < 0)

415 
d°
[
c
] = 
x
 << 4 | 
y
;

416 ((
öt8_t
)*
§c
) < 0 ||

417 (*
§c
 && 
hexvÆs
[(
uöt8_t
)*src] < 0))

418 
§c
++;

421  
c
;

422 
	}
}

425 
	$odh˝d_hexlify
(*
d°
, c⁄° 
uöt8_t
 *
§c
, 
size_t
 
Àn
)

427 
size_t
 
i
 = 0; i < 
Àn
; ++i) {

428 *
d°
++ = 
hexdigôs
[
§c
[
i
] >> 4];

429 *
d°
++ = 
hexdigôs
[
§c
[
i
] & 0x0f];

431 *
d°
 = 0;

432 
	}
}

435 
	$odh˝d_bmemcmp
(c⁄° *
av
, c⁄° *
bv
, 
size_t
 
bôs
)

437 c⁄° 
uöt8_t
 *
a
 = 
av
, *
b
 = 
bv
;

438 
size_t
 
byãs
 = 
bôs
 / 8;

439 
bôs
 %= 8;

441 
ªs
 = 
	`memcmp
(
a
, 
b
, 
byãs
);

442 i‡(
ªs
 =0 && 
bôs
 > 0)

443 
ªs
 = (
a
[
byãs
] >> (8 - 
bôs
)Ë- (
b
[bytes] >> (8 - bits));

445  
ªs
;

446 
	}
}

449 
	$odh˝d_bmem˝y
(*
av
, c⁄° *
bv
, 
size_t
 
bôs
)

451 
uöt8_t
 *
a
 = 
av
;

452 c⁄° 
uöt8_t
 *
b
 = 
bv
;

454 
size_t
 
byãs
 = 
bôs
 / 8;

455 
bôs
 %= 8;

456 
	`mem˝y
(
a
, 
b
, 
byãs
);

458 i‡(
bôs
 > 0) {

459 
uöt8_t
 
mask
 = (1 << (8 - 
bôs
)) - 1;

460 
a
[
byãs
] = (a[byãs] & 
mask
Ë| ((~maskË& 
b
[bytes]);

462 
	}
}

	@/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/odhcpd.h

15 #¥agm®
⁄˚


16 
	~<√töë/ö.h
>

17 
	~<√töë/icmp6.h
>

18 
	~<√töë/ëhî.h
>

19 
	~<√t/if.h
>

20 
	~<°dboﬁ.h
>

21 
	~<sy¶og.h
>

23 
	~"libubox/blobmsg.h
"

25 #i‚de‡
ty≥of


26 
	#ty≥of
 
__ty≥of


	)

29 #i‚de‡
c⁄èöî_of


30 
	#c⁄èöî_of
(
±r
, 
ty≥
, 
membî
) ( \

31 (
ty≥
 *)–(*)
±r
 - 
	`off£tof
—y≥,
membî
Ë))

	)

34 
	~"libubox/li°.h
"

35 
	~"libubox/ulo›.h
"

37 
	#ARRAY_SIZE
(
¨r
Ë(◊ºË/ (◊º)[0]))

	)

40 
	#ND_OPT_ROUTE_INFO
 24

	)

41 
	#ND_OPT_RECURSIVE_DNS
 25

	)

42 
	#ND_OPT_DNS_SEARCH
 31

	)

44 
	#RELAYD_BUFFER_SIZE
 8192

	)

45 
	#RELAYD_MAX_PREFIXES
 8

	)

47 
	#_unu£d
 
	`__©åibuã__
((
unu£d
))

	)

48 
	#_∑cked
 
	`__©åibuã__
((
∑cked
))

	)

51 
	#ALL_IPV6_NODES
 {{{0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\

52 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01}}}

	)

54 
	#ALL_IPV6_ROUTERS
 {{{0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\

55 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02}}}

	)

58 
	göãrÁ˚
;

59 
li°_hód
 
Àa£s
;

61 
	sodh˝d_evít
 {

62 
ulo›_fd
 
	mulo›
;

63 (*
	mh™dÀ_dgøm
)(*
	maddr
, *
	md©a
, 
size_t
 
	mÀn
,

64 
öãrÁ˚
 *
	miÁ˚
, *
	mde°_addr
);

68 
	sodh˝d_ùaddr
 {

69 
ö6_addr
 
	maddr
;

70 
uöt8_t
 
	m¥efix
;

71 
uöt8_t
 
	md¥efix
;

72 
boﬁ
 
	mhas_˛ass
;

73 
uöt16_t
 
	m˛ass
;

74 
uöt32_t
 
	m¥e„ºed
;

75 
uöt32_t
 
	mvÆid
;

78 
	eodh˝d_mode
 {

79 
	mRELAYD_DISABLED
,

80 
	mRELAYD_SERVER
,

81 
	mRELAYD_RELAY
,

82 
	mRELAYD_HYBRID


86 
	sc⁄fig
 {

87 
boﬁ
 
	mÀgacy
;

88 *
	mdh˝_cb
;

89 *
	mdh˝_°©efûe
;

90 } 
	gc⁄fig
;

93 
	sÀa£
 {

94 
li°_hód
 
	mhód
;

95 
ö_addr
 
	mùaddr
;

96 
uöt32_t
 
	mho°id
;

97 
ëhî_addr
 
	mmac
;

98 
uöt16_t
 
	mduid_Àn
;

99 
uöt8_t
 *
	mduid
;

100 
	mho°«me
[];

104 
	söãrÁ˚
 {

105 
li°_hód
 
	mhód
;

107 
	mifödex
;

108 
	mi‚ame
[
IF_NAMESIZE
];

109 
	m«me
[
IF_NAMESIZE
];

112 
ulo›_timeout
 
	mtimî_rs
;

113 
li°_hód
 
	mü_assignmíts
;

114 
odh˝d_ùaddr
 
	mü_addr
[8];

115 
size_t
 
	mü_addr_Àn
;

116 
boﬁ
 
	mü_ªc⁄f
;

119 
odh˝d_evít
 
	mdh˝v6_evít
;

120 
odh˝d_evít
 
	mdh˝v4_evít
;

121 
li°_hód
 
	mdh˝v4_assignmíts
;

124 
	mdh˝v6_pd_m™agî
[128];

125 
ö6_addr
 
	mdh˝v6_pd_˚r
;

128 
odh˝d_mode
 
	mø
;

129 
odh˝d_mode
 
	mdh˝v6
;

130 
odh˝d_mode
 
	mndp
;

131 
odh˝d_mode
 
	mdh˝v4
;

134 
boﬁ
 
	möu£
;

135 
boﬁ
 
	mexã∫Æ
;

136 
boﬁ
 
	mma°î
;

137 
boﬁ
 
	mign‹e
;

138 
boﬁ
 
	mÆways_ªwrôe_dns
;

139 
boﬁ
 
	mø_nŸ_⁄lök
;

140 
boﬁ
 
	mno_dy«mic_dh˝
;

142 
	mÀ¨n_rouãs
;

143 
	mdeÁu…_rouãr
;

144 
	mm™aged
;

145 
	mrouã_¥e„ªn˚
;

148 
ö_addr
 
	mdh˝v4_°¨t
;

149 
ö_addr
 
	mdh˝v4_íd
;

150 
ö_addr
 *
	mdh˝v4_rouãr
;

151 
size_t
 
	mdh˝v4_rouãr_˙t
;

152 
ö_addr
 *
	mdh˝v4_dns
;

153 
size_t
 
	mdh˝v4_dns_˙t
;

154 
uöt32_t
 
	mdh˝v4_Àa£time
;

157 
ö6_addr
 *
	mdns
;

158 
size_t
 
	mdns_˙t
;

159 
uöt8_t
 *
	m£¨ch
;

160 
size_t
 
	m£¨ch_Àn
;

162 *
	mdh˝v6_øw
;

163 
size_t
 
	mdh˝v6_øw_Àn
;

165 * 
	m°©ic_ndp
;

166 
size_t
 
	m°©ic_ndp_Àn
;

168 *
	mup°ªam
;

169 
size_t
 
	mup°ªam_Àn
;

171 *
	mfûãr_˛ass
;

174 
li°_hód
 
öãrÁ˚s
;

176 
	#RELAYD_MANAGED_MFLAG
 1

	)

177 
	#RELAYD_MANAGED_NO_AFLAG
 2

	)

181 
odh˝d_›í_π∆
();

182 
odh˝d_ªgi°î
(
odh˝d_evít
 *
evít
);

184 
ssize_t
 
odh˝d_£nd
(
sockë
, 
sockaddr_ö6
 *
de°
,

185 
iovec
 *
iov
, 
size_t
 
iov_Àn
,

186 c⁄° 
öãrÁ˚
 *
iÁ˚
);

187 
ssize_t
 
odh˝d_gë_öãrÁ˚_addªs£s
(
ifödex
,

188 
odh˝d_ùaddr
 *
addrs
, 
size_t
 
˙t
);

189 
öãrÁ˚
* 
odh˝d_gë_öãrÁ˚_by_«me
(c⁄° *
«me
);

190 
odh˝d_gë_öãrÁ˚_mtu
(c⁄° *
i‚ame
);

191 
odh˝d_gë_mac
(c⁄° 
öãrÁ˚
 *
iÁ˚
, 
uöt8_t
 
mac
[6]);

192 
öãrÁ˚
* 
odh˝d_gë_öãrÁ˚_by_ödex
(
ifödex
);

193 
öãrÁ˚
* 
odh˝d_gë_ma°î_öãrÁ˚
();

194 
odh˝d_uøndom
(*
d©a
, 
size_t
 
Àn
);

195 
odh˝d_£tup_rouã
(c⁄° 
ö6_addr
 *
addr
, 
¥efixÀn
,

196 c⁄° 
öãrÁ˚
 *
iÁ˚
, c⁄° 
ö6_addr
 *
gw
, 
boﬁ
 
add
);

198 
odh˝d_run
();

199 
time_t
 
odh˝d_time
();

200 
ssize_t
 
odh˝d_unhexlify
(
uöt8_t
 *
d°
, 
size_t
 
Àn
, c⁄° *
§c
);

201 
odh˝d_hexlify
(*
d°
, c⁄° 
uöt8_t
 *
§c
, 
size_t
 
Àn
);

203 
odh˝d_bmemcmp
(c⁄° *
av
, c⁄° *
bv
, 
size_t
 
bôs
);

204 
odh˝d_bmem˝y
(*
av
, c⁄° *
bv
, 
size_t
 
bôs
);

206 
c⁄fig_∑r£_öãrÁ˚
(*
d©a
, 
size_t
 
Àn
, c⁄° *
öame
, 
boﬁ
 
ovîwrôe
);

208 #ifde‡
WITH_UBUS


209 
öô_ubus
();

210 c⁄° * 
ubus_gë_i‚ame
(c⁄° *
«me
);

211 
ubus_≠∂y_√tw‹k
();

212 
boﬁ
 
ubus_has_¥efix
(c⁄° *
«me
, c⁄° *
i‚ame
);

213 
boﬁ
 
ubus_gë_˛ass
(c⁄° *
i‚ame
, c⁄° 
ö6_addr
 *
addr
, 
uöt16_t
 *
p˛ass
);

218 
öô_rouãr
();

219 
öô_dh˝v6
();

220 
öô_dh˝v4
();

221 
öô_ndp
();

223 
£tup_rouãr_öãrÁ˚
(
öãrÁ˚
 *
iÁ˚
, 
boﬁ
 
íabÀ
);

224 
£tup_dh˝v6_öãrÁ˚
(
öãrÁ˚
 *
iÁ˚
, 
boﬁ
 
íabÀ
);

225 
£tup_ndp_öãrÁ˚
(
öãrÁ˚
 *
iÁ˚
, 
boﬁ
 
íabÀ
);

226 
£tup_dh˝v4_öãrÁ˚
(
öãrÁ˚
 *
iÁ˚
, 
boﬁ
 
íabÀ
);

228 
odh˝d_ªlﬂd
();

	@/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/router.c

15 
	~<î∫o.h
>

16 
	~<f˙é.h
>

17 
	~<sig«l.h
>

18 
	~<ªsﬁv.h
>

19 
	~<°dio.h
>

20 
	~<°dlib.h
>

21 
	~<uni°d.h
>

22 
	~<°dboﬁ.h
>

23 
	~<√t/rouã.h
>

25 
	~"rouãr.h
"

26 
	~"odh˝d.h
"

29 
f‹w¨d_rouãr_sﬁicô©i⁄
(c⁄° 
öãrÁ˚
 *
iÁ˚
);

30 
f‹w¨d_rouãr_advîti£mít
(
uöt8_t
 *
d©a
, 
size_t
 
Àn
);

32 
h™dÀ_icmpv6
(*
addr
, *
d©a
, 
size_t
 
Àn
,

33 
öãrÁ˚
 *
iÁ˚
, *
de°
);

34 
£nd_rouãr_advît
(
ulo›_timeout
 *
evít
);

35 
sigu§1_ª‰esh
(
sig«l
);

37 
odh˝d_evít
 
	grouãr_evít
 = {{.
fd
 = -1}, 
	gh™dÀ_icmpv6
};

39 
FILE
 *
	gÂ_rouã
 = 
NULL
;

42 
	$öô_rouãr
()

45 
sock
 = 
	`sockë
(
AF_INET6
, 
SOCK_RAW
 | 
SOCK_CLOEXEC
, 
IPPROTO_ICMPV6
);

46 i‡(
sock
 < 0 && 
î∫o
 !
EAFNOSUPPORT
) {

47 
	`sy¶og
(
LOG_ERR
, "FaûedÅÿ›í RAW-sockë: %s", 
	`°ªº‹
(
î∫o
));

52 
vÆ
 = 2;

53 
	`£tsock›t
(
sock
, 
IPPROTO_RAW
, 
IPV6_CHECKSUM
, &
vÆ
, (val));

56 
vÆ
 = 255;

57 
	`£tsock›t
(
sock
, 
IPPROTO_IPV6
, 
IPV6_MULTICAST_HOPS
, &
vÆ
, (val));

58 
	`£tsock›t
(
sock
, 
IPPROTO_IPV6
, 
IPV6_UNICAST_HOPS
, &
vÆ
, (val));

61 
vÆ
 = 1;

62 
	`£tsock›t
(
sock
, 
IPPROTO_IPV6
, 
IPV6_RECVPKTINFO
, &
vÆ
, (val));

63 
	`£tsock›t
(
sock
, 
IPPROTO_IPV6
, 
IPV6_RECVHOPLIMIT
, &
vÆ
, (val));

66 
vÆ
 = 0;

67 
	`£tsock›t
(
sock
, 
IPPROTO_IPV6
, 
IPV6_MULTICAST_LOOP
, &
vÆ
, (val));

70 
icmp6_fûãr
 
fût
;

71 
	`ICMP6_FILTER_SETBLOCKALL
(&
fût
);

72 
	`ICMP6_FILTER_SETPASS
(
ND_ROUTER_ADVERT
, &
fût
);

73 
	`ICMP6_FILTER_SETPASS
(
ND_ROUTER_SOLICIT
, &
fût
);

74 
	`£tsock›t
(
sock
, 
IPPROTO_ICMPV6
, 
ICMP6_FILTER
, &
fût
, (filt));

77 
rouãr_evít
.
ulo›
.
fd
 = 
sock
;

78 
	`odh˝d_ªgi°î
(&
rouãr_evít
);

80 i‡(!(
Â_rouã
 = 
	`f›í
("/proc/net/ipv6_route", "r")))

81 
	`sy¶og
(
LOG_ERR
, "FailedÅo openÑoutingÅable: %s",

82 
	`°ªº‹
(
î∫o
));

84 
	`sig«l
(
SIGUSR1
, 
sigu§1_ª‰esh
);

86 
	}
}

89 
	$£tup_rouãr_öãrÁ˚
(
öãrÁ˚
 *
iÁ˚
, 
boﬁ
 
íabÀ
)

91 i‡(!
Â_rouã
 || 
rouãr_evít
.
ulo›
.
fd
 < 0)

94 
ùv6_mªq
 
Æl_nodes
 = {
ALL_IPV6_NODES
, 
iÁ˚
->
ifödex
};

95 
ùv6_mªq
 
Æl_rouãrs
 = {
ALL_IPV6_ROUTERS
, 
iÁ˚
->
ifödex
};

97 
	`ulo›_timeout_ˇn˚l
(&
iÁ˚
->
timî_rs
);

98 
iÁ˚
->
timî_rs
.
cb
 = 
NULL
;

100 
	`£tsock›t
(
rouãr_evít
.
ulo›
.
fd
, 
IPPROTO_IPV6
, 
IPV6_DROP_MEMBERSHIP
,

101 &
Æl_nodes
, (all_nodes));

102 
	`£tsock›t
(
rouãr_evít
.
ulo›
.
fd
, 
IPPROTO_IPV6
, 
IPV6_DROP_MEMBERSHIP
,

103 &
Æl_rouãrs
, (all_routers));

105 i‡(!
íabÀ
) {

106 i‡(
iÁ˚
->
ø
)

107 
	`£nd_rouãr_advît
(&
iÁ˚
->
timî_rs
);

109 *
mªq
 = &
Æl_rouãrs
;

111 i‡(
iÁ˚
->
ø
 =
RELAYD_RELAY
 && iÁ˚->
ma°î
) {

112 
mªq
 = &
Æl_nodes
;

113 
	`f‹w¨d_rouãr_sﬁicô©i⁄
(
iÁ˚
);

114 } i‡(
iÁ˚
->
ø
 =
RELAYD_SERVER
 && !iÁ˚->
ma°î
) {

115 
iÁ˚
->
timî_rs
.
cb
 = 
£nd_rouãr_advît
;

116 
	`£nd_rouãr_advît
(&
iÁ˚
->
timî_rs
);

119 i‡(
iÁ˚
->
ø
 =
RELAYD_RELAY
 || (iÁ˚->ø =
RELAYD_SERVER
 && !iÁ˚->
ma°î
))

120 
	`£tsock›t
(
rouãr_evít
.
ulo›
.
fd
, 
IPPROTO_IPV6
,

121 
IPV6_ADD_MEMBERSHIP
, 
mªq
, (
Æl_nodes
));

124 
	}
}

128 
	$sigu§1_ª‰esh
(
_unu£d
 
sig«l
)

130 
öãrÁ˚
 *
iÁ˚
;

131 
	`li°_f‹_óch_íåy
(
iÁ˚
, &
öãrÁ˚s
, 
hód
)

132 i‡(
iÁ˚
->
ø
 =
RELAYD_SERVER
 && !iÁ˚->
ma°î
)

133 
	`ulo›_timeout_£t
(&
iÁ˚
->
timî_rs
, 1000);

134 
	}
}

136 
boﬁ
 
	$rouãr_icmpv6_vÆid
(
sockaddr_ö6
 *
sour˚
, 
uöt8_t
 *
d©a
, 
size_t
 
Àn
)

138 
icmp6_hdr
 *
hdr
 = (icmp6_hd∏*)
d©a
;

139 
icmpv6_›t
 *
›t
, *
íd
 = (icmpv6_›t*)&
d©a
[
Àn
];

142 i‡(
Àn
 < (*
hdr
Ë|| hdr->
icmp6_code
)

143  
Ál£
;

145 
hdr
->
icmp6_ty≥
) {

146 
ND_ROUTER_ADVERT
:

147 i‡(!
	`IN6_IS_ADDR_LINKLOCAL
(&
sour˚
->
sö6_addr
))

148  
Ál£
;

150 
›t
 = (
icmpv6_›t
 *)((
nd_rouãr_advît
 *)
d©a
 + 1);

153 
ND_ROUTER_SOLICIT
:

154 
›t
 = (
icmpv6_›t
 *)((
nd_rouãr_sﬁicô
 *)
d©a
 + 1);

158  
Ál£
;

161 
	`icmpv6_f‹_óch_›ti⁄
(
›t
, o±, 
íd
)

162 i‡(
›t
->
ty≥
 =
ND_OPT_SOURCE_LINKADDR
 &&

163 
	`IN6_IS_ADDR_UNSPECIFIED
(&
sour˚
->
sö6_addr
) &&

164 
hdr
->
icmp6_ty≥
 =
ND_ROUTER_SOLICIT
)

165  
Ál£
;

168  
›t
 =
íd
;

169 
	}
}

172 
	$h™dÀ_icmpv6
(*
addr
, *
d©a
, 
size_t
 
Àn
,

173 
öãrÁ˚
 *
iÁ˚
, 
_unu£d
 *
de°
)

175 
icmp6_hdr
 *
hdr
 = 
d©a
;

177 i‡(!
	`rouãr_icmpv6_vÆid
(
addr
, 
d©a
, 
Àn
))

180 i‡((
iÁ˚
->
ø
 =
RELAYD_SERVER
 && !iÁ˚->
ma°î
)) {

181 i‡(
hdr
->
icmp6_ty≥
 =
ND_ROUTER_SOLICIT
)

182 
	`£nd_rouãr_advît
(&
iÁ˚
->
timî_rs
);

183 } i‡(
iÁ˚
->
ø
 =
RELAYD_RELAY
) {

184 i‡(
hdr
->
icmp6_ty≥
 =
ND_ROUTER_ADVERT
 && 
iÁ˚
->
ma°î
)

185 
	`f‹w¨d_rouãr_advîti£mít
(
d©a
, 
Àn
);

186 i‡(
hdr
->
icmp6_ty≥
 =
ND_ROUTER_SOLICIT
 && !
iÁ˚
->
ma°î
)

187 
	`f‹w¨d_rouãr_sﬁicô©i⁄
(
	`odh˝d_gë_ma°î_öãrÁ˚
());

189 
	}
}

193 
boﬁ
 
	$∑r£_rouãs
(
odh˝d_ùaddr
 *
n
, 
ssize_t
 
Àn
)

195 
	`ªwöd
(
Â_rouã
);

197 
löe
[512], 
i‚ame
[16];

198 
boﬁ
 
found_deÁu…
 = 
Ál£
;

199 
odh˝d_ùaddr
 
p
 = {
IN6ADDR_ANY_INIT
, 0, 0, 
Ál£
, 0, 0, 0};

200 
	`fgës
(
löe
, ÷öe), 
Â_rouã
)) {

201 
uöt32_t
 
rÊags
;

202 i‡(
	`ssˇnf
(
löe
, "00000000000000000000000000000000 00 "

203 "%*†%*†%*†%*†%*†%*†%*†%15s", 
i‚ame
) &&

204 
	`°rcmp
(
i‚ame
, "lo")) {

205 
found_deÁu…
 = 
åue
;

206 } i‡(
	`ssˇnf
(
löe
, "%8" 
SCNx32
 "%8" SCNx32 "%*8" SCNx32 "%*8" SCNx32 " %hhx %*s "

207 "%*†00000000000000000000000000000000 %*†%*†%*†%" 
SCNx32
 "Üo",

208 &
p
.
addr
.
s6_addr32
[0], &p.addr.s6_addr32[1], &p.
¥efix
, &
rÊags
) &&

209 
p
.
¥efix
 > 0 && (
rÊags
 & 
RTF_NONEXTHOP
Ë&& (rÊag†& 
RTF_REJECT
)) {

211 
p
.
addr
.
s6_addr32
[0] = 
	`ht⁄l
(p.addr.s6_addr32[0]);

212 
p
.
addr
.
s6_addr32
[1] = 
	`ht⁄l
(p.addr.s6_addr32[1]);

214 
ssize_t
 
i
 = 0; i < 
Àn
; ++i) {

215 i‡(
n
[
i
].
¥efix
 <64 &&Ç[i].¥efix >
p
.prefix &&

216 !
	`odh˝d_bmemcmp
(&
p
.
addr
, &
n
[
i
].addr,Ö.
¥efix
)) {

217 
n
[
i
].
d¥efix
 = 
p
.
¥efix
;

225  
found_deÁu…
;

226 
	}
}

230 
	$£nd_rouãr_advît
(
ulo›_timeout
 *
evít
)

232 
öãrÁ˚
 *
iÁ˚
 =

233 
	`c⁄èöî_of
(
evít
, 
öãrÁ˚
, 
timî_rs
);

235 
mtu
 = 
	`odh˝d_gë_öãrÁ˚_mtu
(
iÁ˚
->
i‚ame
);

236 i‡(
mtu
 < 0)

237 
mtu
 = 1500;

240 
nd_rouãr_advît
 
h
;

241 
icmpv6_›t
 
Œaddr
;

242 
nd_›t_mtu
 
mtu
;

243 
nd_›t_¥efix_öfo
 
¥efix
[
RELAYD_MAX_PREFIXES
];

244 } 
adv
 = {

245 .
h
 = {{.
icmp6_ty≥
 = 
ND_ROUTER_ADVERT
, .
icmp6_code
 = 0}, 0, 0},

246 .
Œaddr
 = {
ND_OPT_SOURCE_LINKADDR
, 1, {0}},

247 .
mtu
 = {
ND_OPT_MTU
, 1, 0, 
	`ht⁄l
(mtu)},

250 i‡(
iÁ˚
->
dh˝v6
)

251 
adv
.
h
.
nd_ø_Êags_ª£rved
 = 
ND_RA_FLAG_OTHER
;

253 i‡(
iÁ˚
->
m™aged
 >
RELAYD_MANAGED_MFLAG
)

254 
adv
.
h
.
nd_ø_Êags_ª£rved
 |
ND_RA_FLAG_MANAGED
;

256 i‡(
iÁ˚
->
rouã_¥e„ªn˚
 < 0)

257 
adv
.
h
.
nd_ø_Êags_ª£rved
 |
ND_RA_PREF_LOW
;

258 i‡(
iÁ˚
->
rouã_¥e„ªn˚
 > 0)

259 
adv
.
h
.
nd_ø_Êags_ª£rved
 |
ND_RA_PREF_HIGH
;

260 
	`odh˝d_gë_mac
(
iÁ˚
, 
adv
.
Œaddr
.
d©a
);

263 
odh˝d_ùaddr
 
addrs
[
RELAYD_MAX_PREFIXES
];

264 
ssize_t
 
ù˙t
 = 0;

265 
uöt64_t
 
max¥e„ºed
 = 0;

268 i‡(
evít
->
cb
) {

269 
ù˙t
 = 
	`odh˝d_gë_öãrÁ˚_addªs£s
(
iÁ˚
->
ifödex
,

270 
addrs
, 
	`ARRAY_SIZE
(addrs));

273 i‡(
	`∑r£_rouãs
(
addrs
, 
ù˙t
Ë|| 
iÁ˚
->
deÁu…_rouãr
 > 1)

274 
adv
.
h
.
nd_ø_rouãr_li„time
 =

275 
	`ht⁄s
(3 * 
MaxRåAdvI¡îvÆ
);

279 
boﬁ
 
have_public
 = 
Ál£
;

280 
size_t
 
˙t
 = 0;

282 
ö6_addr
 
dns_¥ef
 = 
IN6ADDR_ANY_INIT
, *
dns_addr
 = &dns_pref;

283 
uöt32_t
 
dns_time
 = 0;

284 
size_t
 
dns_˙t
 = 1;

286 
ssize_t
 
i
 = 0; i < 
ù˙t
; ++i) {

287 
odh˝d_ùaddr
 *
addr
 = &
addrs
[
i
];

288 i‡(
addr
->
¥efix
 > 96 ||áddr->
has_˛ass
)

291 i‡(
addr
->
¥e„ºed
 > 
MaxPª„ºedTime
)

292 
addr
->
¥e„ºed
 = 
MaxPª„ºedTime
;

294 i‡(
addr
->
vÆid
 > 
MaxVÆidTime
)

295 
addr
->
vÆid
 = 
MaxVÆidTime
;

297 
nd_›t_¥efix_öfo
 *
p
 = 
NULL
;

298 
size_t
 
i
 = 0; i < 
˙t
; ++i) {

299 i‡(
addr
->
¥efix
 =
adv
.¥efix[
i
].
nd_›t_pi_¥efix_Àn
 &&

300 !
	`odh˝d_bmemcmp
(&
adv
.
¥efix
[
i
].
nd_›t_pi_¥efix
,

301 &
addr
->addr,áddr->
¥efix
))

302 
p
 = &
adv
.
¥efix
[
i
];

305 i‡(!
p
) {

306 i‡(
˙t
 >
	`ARRAY_SIZE
(
adv
.
¥efix
))

309 
p
 = &
adv
.
¥efix
[
˙t
++];

312 i‡((
addr
->addr.
s6_addr
[0] & 0x„Ë!0xf¯&&áddr->
¥e„ºed
 > 0) {

313 
have_public
 = 
åue
;

315 i‡(
max¥e„ºed
 < 1000 * 
addr
->
¥e„ºed
)

316 
max¥e„ºed
 = 1000 * 
addr
->
¥e„ºed
;

319 
	`odh˝d_bmem˝y
(&
p
->
nd_›t_pi_¥efix
, &
addr
->addr,áddr->
¥efix
);

320 
p
->
nd_›t_pi_ty≥
 = 
ND_OPT_PREFIX_INFORMATION
;

321 
p
->
nd_›t_pi_Àn
 = 4;

322 
p
->
nd_›t_pi_¥efix_Àn
 = (
addr
->
¥efix
 < 64) ? 64 :áddr->prefix;

323 
p
->
nd_›t_pi_Êags_ª£rved
 = 0;

324 i‡(!
iÁ˚
->
ø_nŸ_⁄lök
)

325 
p
->
nd_›t_pi_Êags_ª£rved
 |
ND_OPT_PI_FLAG_ONLINK
;

326 i‡(
iÁ˚
->
m™aged
 < 
RELAYD_MANAGED_NO_AFLAG
 && 
addr
->
¥efix
 <= 64)

327 
p
->
nd_›t_pi_Êags_ª£rved
 |
ND_OPT_PI_FLAG_AUTO
;

328 
p
->
nd_›t_pi_vÆid_time
 = 
	`ht⁄l
(
addr
->
vÆid
);

329 
p
->
nd_›t_pi_¥e„ºed_time
 = 
	`ht⁄l
(
addr
->
¥e„ºed
);

331 i‡(
addr
->
¥e„ºed
 > 
dns_time
) {

332 
dns_time
 = 
addr
->
¥e„ºed
;

333 
dns_¥ef
 = 
addr
->addr;

337 i‡(!
have_public
 && !
iÁ˚
->
deÁu…_rouãr
 && 
adv
.
h
.
nd_ø_rouãr_li„time
) {

338 
	`sy¶og
(
LOG_WARNING
, "A defaultÑoute isÖresent butÅhere isÇoÖublicÖrefix "

339 "⁄ %†thu†wêd⁄'à™noun˚á deÁu…Ñouã!", 
iÁ˚
->
i‚ame
);

340 
adv
.
h
.
nd_ø_rouãr_li„time
 = 0;

344 i‡(
iÁ˚
->
dns_˙t
 > 0) {

345 
dns_addr
 = 
iÁ˚
->
dns
;

346 
dns_˙t
 = 
iÁ˚
->dns_cnt;

347 
dns_time
 = 2 * 
MaxRåAdvI¡îvÆ
;

350 i‡(!
dns_addr
 || 
	`IN6_IS_ADDR_UNSPECIFIED
(dns_addr))

351 
dns_˙t
 = 0;

354 
uöt8_t
 
ty≥
;

355 
uöt8_t
 
Àn
;

356 
uöt8_t
 
∑d
;

357 
uöt8_t
 
∑d2
;

358 
uöt32_t
 
li„time
;

359 } 
dns
 = {
ND_OPT_RECURSIVE_DNS
, (1 + (2 * 
dns_˙t
)), 0, 0, 
	`ht⁄l
(
dns_time
)};

364 
uöt8_t
 
£¨ch_buf
[256], *
£¨ch_domaö
 = 
iÁ˚
->
£¨ch
;

365 
size_t
 
£¨ch_Àn
 = 
iÁ˚
->£¨ch_Àn, 
£¨ch_∑dded
 = 0;

367 i‡(!
£¨ch_domaö
 && !
	`ªs_öô
(Ë&& 
_ªs
.
dn§ch
[0] && _res.dnsrch[0][0]) {

368 
Àn
 = 
	`dn_comp
(
_ªs
.
dn§ch
[0], 
£¨ch_buf
,

369 (
£¨ch_buf
), 
NULL
, NULL);

370 i‡(
Àn
 > 0) {

371 
£¨ch_domaö
 = 
£¨ch_buf
;

372 
£¨ch_Àn
 = 
Àn
;

376 i‡(
£¨ch_Àn
 > 0)

377 
£¨ch_∑dded
 = ((
£¨ch_Àn
 + 7) & (~7)) + 8;

380 
uöt8_t
 
ty≥
;

381 
uöt8_t
 
Àn
;

382 
uöt8_t
 
∑d
;

383 
uöt8_t
 
∑d2
;

384 
uöt32_t
 
li„time
;

385 
uöt8_t
 
«me
[];

386 } *
£¨ch
 = 
	`Æloˇ
((*£¨chË+ 
£¨ch_∑dded
);

388 i‡(!
£¨ch
) {

389 
	`sy¶og
(
LOG_ERR
, "AŒoˇ faûed f‹ dn†£¨ch o¿öãrÁ˚ %s", 
iÁ˚
->
i‚ame
);

392 
£¨ch
->
ty≥
 = 
ND_OPT_DNS_SEARCH
;

393 
£¨ch
->
Àn
 = 
£¨ch_Àn
 ? (((*£¨chË+ 
£¨ch_∑dded
) / 8) : 0;

394 
£¨ch
->
∑d
 = 0;

395 
£¨ch
->
∑d2
 = 0;

396 
£¨ch
->
li„time
 = 
	`ht⁄l
(2 * 
MaxRåAdvI¡îvÆ
);;

397 
	`mem˝y
(
£¨ch
->
«me
, 
£¨ch_domaö
, 
£¨ch_Àn
);

398 
	`mem£t
(&
£¨ch
->
«me
[
£¨ch_Àn
], 0, 
£¨ch_∑dded
 - search_len);

401 
size_t
 
rouãs_˙t
 = 0;

403 
uöt8_t
 
ty≥
;

404 
uöt8_t
 
Àn
;

405 
uöt8_t
 
¥efix
;

406 
uöt8_t
 
Êags
;

407 
uöt32_t
 
li„time
;

408 
uöt32_t
 
addr
[4];

409 } 
rouãs
[
RELAYD_MAX_PREFIXES
];

411 
ssize_t
 
i
 = 0; i < 
ù˙t
; ++i) {

412 
odh˝d_ùaddr
 *
addr
 = &
addrs
[
i
];

413 i‡(
addr
->
d¥efix
 > 64 ||áddr->dprefix == 0 ||

414 (
addr
->
d¥efix
 =64 &&áddr->
¥efix
 == 64)) {

416 } i‡(
addr
->
d¥efix
 > 32) {

417 
addr
->addr.
s6_addr32
[1] &
	`ht⁄l
(~((1U << (64 -áddr->
d¥efix
)) - 1));

418 } i‡(
addr
->
d¥efix
 <= 32) {

419 
addr
->addr.
s6_addr32
[0] &
	`ht⁄l
(~((1U << (32 -áddr->
d¥efix
)) - 1));

420 
addr
->addr.
s6_addr32
[1] = 0;

423 
rouãs
[
rouãs_˙t
].
ty≥
 = 
ND_OPT_ROUTE_INFO
;

424 
rouãs
[
rouãs_˙t
].
Àn
 = (*routes) / 8;

425 
rouãs
[
rouãs_˙t
].
¥efix
 = 
addr
->
d¥efix
;

426 
rouãs
[
rouãs_˙t
].
Êags
 = 0;

427 i‡(
iÁ˚
->
rouã_¥e„ªn˚
 < 0)

428 
rouãs
[
rouãs_˙t
].
Êags
 |
ND_RA_PREF_LOW
;

429 i‡(
iÁ˚
->
rouã_¥e„ªn˚
 > 0)

430 
rouãs
[
rouãs_˙t
].
Êags
 |
ND_RA_PREF_HIGH
;

431 
rouãs
[
rouãs_˙t
].
li„time
 = 
	`ht⁄l
(
addr
->
vÆid
);

432 
rouãs
[
rouãs_˙t
].
addr
[0] =áddr->addr.
s6_addr32
[0];

433 
rouãs
[
rouãs_˙t
].
addr
[1] =áddr->addr.
s6_addr32
[1];

434 
rouãs
[
rouãs_˙t
].
addr
[2] = 0;

435 
rouãs
[
rouãs_˙t
].
addr
[3] = 0;

437 ++
rouãs_˙t
;

441 
iovec
 
iov
[] = {{&
adv
, (
uöt8_t
*)&adv.
¥efix
[
˙t
] - (uint8_t*)&adv},

442 {&
rouãs
, 
rouãs_˙t
 * (*routes)},

443 {&
dns
, (
dns_˙t
) ? (dns) : 0},

444 {
dns_addr
, 
dns_˙t
 * (*dns_addr)},

445 {
£¨ch
, sórch->
Àn
 * 8}};

446 
sockaddr_ö6
 
Æl_nodes
 = {
AF_INET6
, 0, 0, 
ALL_IPV6_NODES
, 0};

447 
	`odh˝d_£nd
(
rouãr_evít
.
ulo›
.
fd
,

448 &
Æl_nodes
, 
iov
, 
	`ARRAY_SIZE
(iov), 
iÁ˚
);

451 i‡(
evít
->
cb
) {

452 
uöt32_t
 
maxöãrvÆ
 = 
MaxRåAdvI¡îvÆ
 * 1000;

453 
uöt32_t
 
mööãrvÆ
 = 
MöRåAdvI¡îvÆ
 * 1000;

455 i‡(
max¥e„ºed
 > 0 && 
maxöãrvÆ
 > maxpreferred / 2) {

456 
maxöãrvÆ
 = 
max¥e„ºed
 / 2;

457 i‡(
maxöãrvÆ
 < 4000)

458 
maxöãrvÆ
 = 4000;

460 i‡(
maxöãrvÆ
 >= 9000)

461 
mööãrvÆ
 = 
maxöãrvÆ
 / 3;

463 
mööãrvÆ
 = (
maxöãrvÆ
 * 3) / 4;

466 
m£cs
;

467 
	`odh˝d_uøndom
(&
m£cs
, (msecs));

468 
m£cs
 = (
	`œbs
(m£csË% (
maxöãrvÆ
 - 
mööãrvÆ
)) + mininterval;

469 
	`ulo›_timeout_£t
(&
iÁ˚
->
timî_rs
, 
m£cs
);

471 
	}
}

475 
	$f‹w¨d_rouãr_sﬁicô©i⁄
(c⁄° 
öãrÁ˚
 *
iÁ˚
)

477 i‡(!
iÁ˚
)

480 
icmp6_hdr
 
rs
 = {
ND_ROUTER_SOLICIT
, 0, 0, {{0}}};

481 
iovec
 
iov
 = {&
rs
, (rs)};

482 
sockaddr_ö6
 
Æl_rouãrs
 =

483 {
AF_INET6
, 0, 0, 
ALL_IPV6_ROUTERS
, 
iÁ˚
->
ifödex
};

485 
	`sy¶og
(
LOG_NOTICE
, "Sídög RSÅÿ%s", 
iÁ˚
->
i‚ame
);

486 
	`odh˝d_£nd
(
rouãr_evít
.
ulo›
.
fd
, &
Æl_rouãrs
, &
iov
, 1, 
iÁ˚
);

487 
	}
}

491 
	$f‹w¨d_rouãr_advîti£mít
(
uöt8_t
 *
d©a
, 
size_t
 
Àn
)

493 
nd_rouãr_advît
 *
adv
 = (nd_rouãr_advîà*)
d©a
;

496 
uöt8_t
 *
íd
 = 
d©a
 + 
Àn
;

497 
uöt8_t
 *
mac_±r
 = 
NULL
;

498 
ö6_addr
 *
dns_±r
 = 
NULL
;

499 
size_t
 
dns_cou¡
 = 0;

501 
icmpv6_›t
 *
›t
;

502 
	`icmpv6_f‹_óch_›ti⁄
(
›t
, &
adv
[1], 
íd
) {

503 i‡(
›t
->
ty≥
 =
ND_OPT_SOURCE_LINKADDR
) {

505 
mac_±r
 = 
›t
->
d©a
;

506 } i‡(
›t
->
ty≥
 =
ND_OPT_RECURSIVE_DNS
 && o±->
Àn
 > 1) {

508 
dns_±r
 = (
ö6_addr
*)&
›t
->
d©a
[6];

509 
dns_cou¡
 = (
›t
->
Àn
 - 1) / 2;

513 
	`sy¶og
(
LOG_NOTICE
, "Gotá RA");

516 
adv
->
nd_ø_Êags_ª£rved
 |
ND_RA_FLAG_PROXY
;

519 
sockaddr_ö6
 
Æl_nodes
 = {
AF_INET6
, 0, 0, 
ALL_IPV6_NODES
, 0};

520 
iovec
 
iov
 = {
d©a
, 
Àn
};

522 
odh˝d_ùaddr
 
addr
;

523 
öãrÁ˚
 *
iÁ˚
;

524 
	`li°_f‹_óch_íåy
(
iÁ˚
, &
öãrÁ˚s
, 
hód
) {

525 i‡(
iÁ˚
->
ø
 !
RELAYD_RELAY
 || iÁ˚->
ma°î
)

529 i‡(
mac_±r
)

530 
	`odh˝d_gë_mac
(
iÁ˚
, 
mac_±r
);

533 i‡(
iÁ˚
->
Æways_ªwrôe_dns
 && 
dns_±r
 && 
dns_cou¡
 > 0) {

534 c⁄° 
ö6_addr
 *
ªwrôe
 = 
iÁ˚
->
dns
;

535 
size_t
 
ªwrôe_˙t
 = 
iÁ˚
->
dns_˙t
;

537 i‡(
ªwrôe_˙t
 == 0) {

538 i‡(
	`odh˝d_gë_öãrÁ˚_addªs£s
(
iÁ˚
->
ifödex
, &
addr
, 1) < 1)

541 
ªwrôe
 = &
addr
.addr;

542 
ªwrôe_˙t
 = 1;

546 
size_t
 
i
 = 0; i < 
dns_cou¡
; ++i) {

547 
size_t
 
j
 = (
i
 < 
ªwrôe_˙t
) ? i :Ñewrite_cnt - 1;

548 
dns_±r
[
i
] = 
ªwrôe
[
j
];

552 
	`odh˝d_£nd
(
rouãr_evít
.
ulo›
.
fd
, &
Æl_nodes
, &
iov
, 1, 
iÁ˚
);

554 
	}
}

	@/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/router.h

15 #¥agm®
⁄˚


16 
	~<°döt.h
>

17 
	~<√töë/ö.h
>

18 
	~<√töë/icmp6.h
>

20 
	sicmpv6_›t
 {

21 
uöt8_t
 
	mty≥
;

22 
uöt8_t
 
	mÀn
;

23 
uöt8_t
 
	md©a
[6];

27 
	#icmpv6_f‹_óch_›ti⁄
(
›t
, 
°¨t
, 
íd
)\

28 
›t
 = (
icmpv6_›t
*)(
°¨t
);\

29 (*)(
›t
 + 1Ë<(*)(
íd
Ë&& o±->
Àn
 > 0 &&\

30 (*)(
›t
 + o±->
Àn
Ë<(*)(
íd
); o± +›t->Àn)

	)

33 
	#MaxRåAdvI¡îvÆ
 600

	)

34 
	#MöRåAdvI¡îvÆ
 (
MaxRåAdvI¡îvÆ
 / 3)

	)

35 
	#MaxVÆidTime
 7200

	)

36 
	#MaxPª„ºedTime
 (3 * 
MaxRåAdvI¡îvÆ
)

	)

38 
	#ND_RA_FLAG_PROXY
 0x4

	)

39 
	#ND_RA_PREF_HIGH
 (1 << 3)

	)

40 
	#ND_RA_PREF_LOW
 (3 << 3)

	)

	@/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/ubus.c

1 
	~<sy¶og.h
>

2 
	~<libubus.h
>

3 
	~<libubox/ulo›.h
>

4 
	~<¨∑/öë.h
>

6 
	~"odh˝d.h
"

7 
	~"dh˝v6.h
"

8 
	~"dh˝v4.h
"

11 
ubus_c⁄ãxt
 *
	gubus
 = 
NULL
;

12 
ubus_subs¸ibî
 
	g√tifd
;

13 
blob_buf
 
	gb
;

14 
blob_©å
 *
	gdump
 = 
NULL
;

15 
uöt32_t
 
	gobjid
 = 0;

16 
ubus_ªque°
 
	gªq_dump
 = { .
li°
 = 
LIST_HEAD_INIT
(
ªq_dump
.list) };

19 
	$h™dÀ_dh˝v4_Àa£s
(
ubus_c⁄ãxt
 *
˘x
, 
_unu£d
 
ubus_obje˘
 *
obj
,

20 
ubus_ªque°_d©a
 *
ªq
, 
_unu£d
 c⁄° *
mëhod
,

21 
_unu£d
 
blob_©å
 *
msg
)

23 
	`blob_buf_öô
(&
b
, 0);

24 *
a
 = 
	`blobmsg_›í_èbÀ
(&
b
, "device");

25 
time_t
 
now
 = 
	`odh˝d_time
();

27 
öãrÁ˚
 *
iÁ˚
;

28 
	`li°_f‹_óch_íåy
(
iÁ˚
, &
öãrÁ˚s
, 
hód
) {

29 i‡(
iÁ˚
->
dh˝v4
 !
RELAYD_SERVER
)

32 *
i
 = 
	`blobmsg_›í_èbÀ
(&
b
, 
iÁ˚
->
i‚ame
);

33 *
j
 = 
	`blobmsg_›í_¨øy
(&
b
, "leases");

35 
dh˝v4_assignmít
 *
Àa£
;

36 
	`li°_f‹_óch_íåy
(
Àa£
, &
iÁ˚
->
dh˝v4_assignmíts
, 
hód
) {

37 i‡(
Àa£
->
vÆid_u¡û
 < 
now
)

40 *
l
 = 
	`blobmsg_›í_èbÀ
(&
b
, 
NULL
);

42 *
buf
 = 
	`blobmsg_Æloc_°rög_buf„r
(&
b
, "mac", 13);

43 
	`odh˝d_hexlify
(
buf
, 
Àa£
->
hwaddr
, (lease->hwaddr));

44 
	`blobmsg_add_°rög_buf„r
(&
b
);

46 
	`blobmsg_add_°rög
(&
b
, "ho°«me", 
Àa£
->
ho°«me
);

48 
buf
 = 
	`blobmsg_Æloc_°rög_buf„r
(&
b
, "ù", 
INET_ADDRSTRLEN
);

49 
ö_addr
 
addr
 = {
	`ht⁄l
(
Àa£
->addr)};

50 
	`öë_¡›
(
AF_INET
, &
addr
, 
buf
, 
INET_ADDRSTRLEN
);

51 
	`blobmsg_add_°rög_buf„r
(&
b
);

53 
	`blobmsg_add_u32
(&
b
, "vÆid", 
now
 - 
Àa£
->
vÆid_u¡û
);

55 
	`blobmsg_˛o£_èbÀ
(&
b
, 
l
);

58 
	`blobmsg_˛o£_¨øy
(&
b
, 
j
);

59 
	`blobmsg_˛o£_èbÀ
(&
b
, 
i
);

62 
	`blobmsg_˛o£_èbÀ
(&
b
, 
a
);

63 
	`ubus_£nd_ª∂y
(
˘x
, 
ªq
, 
b
.
hód
);

65 
	}
}

68 
	$h™dÀ_dh˝v6_Àa£s
(
_unu£d
 
ubus_c⁄ãxt
 *
˘x
, _unu£d 
ubus_obje˘
 *
obj
,

69 
_unu£d
 
ubus_ªque°_d©a
 *
ªq
, _unu£d c⁄° *
mëhod
,

70 
_unu£d
 
blob_©å
 *
msg
)

72 
	`blob_buf_öô
(&
b
, 0);

73 *
a
 = 
	`blobmsg_›í_èbÀ
(&
b
, "device");

74 
time_t
 
now
 = 
	`odh˝d_time
();

76 
öãrÁ˚
 *
iÁ˚
;

77 
	`li°_f‹_óch_íåy
(
iÁ˚
, &
öãrÁ˚s
, 
hód
) {

78 i‡(
iÁ˚
->
dh˝v6
 !
RELAYD_SERVER
)

81 *
i
 = 
	`blobmsg_›í_èbÀ
(&
b
, 
iÁ˚
->
i‚ame
);

82 *
j
 = 
	`blobmsg_›í_¨øy
(&
b
, "leases");

84 
dh˝v6_assignmít
 *
Àa£
;

85 
	`li°_f‹_óch_íåy
(
Àa£
, &
iÁ˚
->
ü_assignmíts
, 
hód
) {

86 i‡(
Àa£
->
vÆid_u¡û
 < 
now
)

89 *
l
 = 
	`blobmsg_›í_èbÀ
(&
b
, 
NULL
);

91 *
buf
 = 
	`blobmsg_Æloc_°rög_buf„r
(&
b
, "duid", 264);

92 
	`odh˝d_hexlify
(
buf
, 
Àa£
->
˛id_d©a
,Üó£->
˛id_Àn
);

93 
	`blobmsg_add_°rög_buf„r
(&
b
);

95 
	`blobmsg_add_u32
(&
b
, "üid", 
	`¡ohl
(
Àa£
->
üid
));

96 
	`blobmsg_add_°rög
(&
b
, "ho°«me", (
Àa£
->
ho°«me
) ?Üease->hostname : "");

97 
	`blobmsg_add_u32
(&
b
, "assig√d", 
Àa£
->
assig√d
);

98 
	`blobmsg_add_u32
(&
b
, "Àngth", 
Àa£
->
Àngth
);

100 *
m
 = 
	`blobmsg_›í_¨øy
(&
b
, "ipv6");

101 
ö6_addr
 
addr
;

102 
size_t
 
i
 = 0; i < 
iÁ˚
->
ü_addr_Àn
; ++i) {

103 i‡(
iÁ˚
->
ü_addr
[
i
].
¥efix
 > 64)

106 
addr
 = 
iÁ˚
->
ü_addr
[
i
].addr;

107 i‡(
Àa£
->
Àngth
 == 128)

108 
addr
.
s6_addr32
[3] = 
	`ht⁄l
(
Àa£
->
assig√d
);

110 
addr
.
s6_addr32
[1] |
	`ht⁄l
(
Àa£
->
assig√d
);

112 *
c
 = 
	`blobmsg_Æloc_°rög_buf„r
(&
b
, 
NULL
, 
INET6_ADDRSTRLEN
);

113 
	`öë_¡›
(
AF_INET6
, &
addr
, 
c
, 
INET6_ADDRSTRLEN
);

114 
	`blobmsg_add_°rög_buf„r
(&
b
);

116 
	`blobmsg_˛o£_èbÀ
(&
b
, 
m
);

118 
	`blobmsg_add_u32
(&
b
, "vÆid", 
now
 - 
Àa£
->
vÆid_u¡û
);

120 
	`blobmsg_˛o£_èbÀ
(&
b
, 
l
);

123 
	`blobmsg_˛o£_¨øy
(&
b
, 
j
);

124 
	`blobmsg_˛o£_èbÀ
(&
b
, 
i
);

127 
	`blobmsg_˛o£_èbÀ
(&
b
, 
a
);

128 
	`ubus_£nd_ª∂y
(
˘x
, 
ªq
, 
b
.
hód
);

130 
	}
}

133 
ubus_mëhod
 
	gmaö_obje˘_mëhods
[] = {

134 {.
«me
 = "ùv4Àa£s", .
	gh™dÀr
 = 
h™dÀ_dh˝v4_Àa£s
},

135 {.
	g«me
 = "ùv6Àa£s", .
	gh™dÀr
 = 
h™dÀ_dh˝v6_Àa£s
},

138 
ubus_obje˘_ty≥
 
	gmaö_obje˘_ty≥
 =

139 
UBUS_OBJECT_TYPE
("dh˝", 
maö_obje˘_mëhods
);

141 
ubus_obje˘
 
	gmaö_obje˘
 = {

142 .
«me
 = "dhcp",

143 .
	gty≥
 = &
maö_obje˘_ty≥
,

144 .
	gmëhods
 = 
maö_obje˘_mëhods
,

145 .
	gn_mëhods
 = 
ARRAY_SIZE
(
maö_obje˘_mëhods
),

150 
	mDUMP_ATTR_INTERFACE
,

151 
	mDUMP_ATTR_MAX


154 c⁄° 
blobmsg_pﬁicy
 
	gdump_©ås
[
DUMP_ATTR_MAX
] = {

155 [
DUMP_ATTR_INTERFACE
] = { .
«me
 = "öãrÁ˚", .
	gty≥
 = 
BLOBMSG_TYPE_ARRAY
 },

160 
	mIFACE_ATTR_INTERFACE
,

161 
	mIFACE_ATTR_IFNAME
,

162 
	mIFACE_ATTR_UP
,

163 
	mIFACE_ATTR_DATA
,

164 
	mIFACE_ATTR_PREFIX
,

165 
	mIFACE_ATTR_ADDRESS
,

166 
	mIFACE_ATTR_MAX
,

169 c⁄° 
blobmsg_pﬁicy
 
	giÁ˚_©ås
[
IFACE_ATTR_MAX
] = {

170 [
IFACE_ATTR_INTERFACE
] = { .
«me
 = "öãrÁ˚", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

171 [
IFACE_ATTR_IFNAME
] = { .
«me
 = "l3_devi˚", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

172 [
IFACE_ATTR_UP
] = { .
«me
 = "up", .
	gty≥
 = 
BLOBMSG_TYPE_BOOL
 },

173 [
IFACE_ATTR_DATA
] = { .
«me
 = "d©a", .
	gty≥
 = 
BLOBMSG_TYPE_TABLE
 },

174 [
IFACE_ATTR_PREFIX
] = { .
«me
 = "ùv6-¥efix", .
	gty≥
 = 
BLOBMSG_TYPE_ARRAY
 },

175 [
IFACE_ATTR_ADDRESS
] = { .
«me
 = "ùv6-addªss", .
	gty≥
 = 
BLOBMSG_TYPE_ARRAY
 },

178 
	$h™dÀ_dump
(
_unu£d
 
ubus_ªque°
 *
ªq
, _unu£d 
ty≥
, 
blob_©å
 *
msg
)

180 
blob_©å
 *
tb
[
DUMP_ATTR_MAX
];

181 
	`blobmsg_∑r£
(
dump_©ås
, 
DUMP_ATTR_MAX
, 
tb
, 
	`blob_d©a
(
msg
), 
	`blob_Àn
(msg));

183 i‡(!
tb
[
DUMP_ATTR_INTERFACE
])

186 
	`‰ì
(
dump
);

187 
dump
 = 
	`blob_memdup
(
tb
[
DUMP_ATTR_INTERFACE
]);

188 
	`odh˝d_ªlﬂd
();

189 
	}
}

192 
	$upd©e_√tifd
(
boﬁ
 
subs¸ibe
)

194 i‡(
subs¸ibe
)

195 
	`ubus_subs¸ibe
(
ubus
, &
√tifd
, 
objid
);

197 
	`ubus_ab‹t_ªque°
(
ubus
, &
ªq_dump
);

198 i‡(!
	`ubus_övoke_async
(
ubus
, 
objid
, "dump", 
NULL
, &
ªq_dump
)) {

199 
ªq_dump
.
d©a_cb
 = 
h™dÀ_dump
;

200 
	`ubus_com∂ëe_ªque°_async
(
ubus
, &
ªq_dump
);

202 
	}
}

205 
	$h™dÀ_upd©e
(
_unu£d
 
ubus_c⁄ãxt
 *
˘x
, _unu£d 
ubus_obje˘
 *
obj
,

206 
_unu£d
 
ubus_ªque°_d©a
 *
ªq
, _unu£d c⁄° *
mëhod
,

207 
blob_©å
 *
msg
)

209 
blob_©å
 *
tb
[
IFACE_ATTR_MAX
];

210 
	`blobmsg_∑r£
(
iÁ˚_©ås
, 
IFACE_ATTR_MAX
, 
tb
, 
	`blob_d©a
(
msg
), 
	`blob_Àn
(msg));

212 c⁄° *
öãrÁ˚
 = (
tb
[
IFACE_ATTR_INTERFACE
]) ?

213 
	`blobmsg_gë_°rög
(
tb
[
IFACE_ATTR_INTERFACE
]) : "";

214 c⁄° *
i‚ame
 = (
tb
[
IFACE_ATTR_IFNAME
]) ?

215 
	`blobmsg_gë_°rög
(
tb
[
IFACE_ATTR_IFNAME
]) : "";

217 
öãrÁ˚
 *
c
, *
iÁ˚
 = 
NULL
;

218 
	`li°_f‹_óch_íåy
(
c
, &
öãrÁ˚s
, 
hód
)

219 i‡(!
	`°rcmp
(
öãrÁ˚
, 
c
->
«me
Ë|| !°rcmp(
i‚ame
, c->ifname))

220 
iÁ˚
 = 
c
;

222 i‡(
iÁ˚
 && iÁ˚->
ign‹e
)

225 
	`upd©e_√tifd
(
Ál£
);

227 
	}
}

230 
	$ubus_≠∂y_√tw‹k
()

232 
blob_©å
 *
a
;

233 
ªm
;

235 i‡(!
dump
)

238 
	`blobmsg_f‹_óch_©å
(
a
, 
dump
, 
ªm
) {

239 
blob_©å
 *
tb
[
IFACE_ATTR_MAX
];

240 
	`blobmsg_∑r£
(
iÁ˚_©ås
, 
IFACE_ATTR_MAX
, 
tb
, 
	`blobmsg_d©a
(
a
), 
	`blobmsg_d©a_Àn
(a));

242 i‡(!
tb
[
IFACE_ATTR_INTERFACE
] || !tb[
IFACE_ATTR_DATA
])

245 c⁄° *
öãrÁ˚
 = (
tb
[
IFACE_ATTR_INTERFACE
]) ?

246 
	`blobmsg_gë_°rög
(
tb
[
IFACE_ATTR_INTERFACE
]) : "";

247 c⁄° *
i‚ame
 = (
tb
[
IFACE_ATTR_IFNAME
]) ?

248 
	`blobmsg_gë_°rög
(
tb
[
IFACE_ATTR_IFNAME
]) : "";

250 
boﬁ
 
m©ched
 = 
Ál£
;

251 
öãrÁ˚
 *
c
, *
n
;

252 
	`li°_f‹_óch_íåy_ß„
(
c
, 
n
, &
öãrÁ˚s
, 
hód
) {

253 *
f
 = 
	`memmem
(
c
->
up°ªam
, c->
up°ªam_Àn
,

254 
öãrÁ˚
, 
	`°æí
(interface) + 1);

255 
boﬁ
 
cm©ched
 = !
	`°rcmp
(
öãrÁ˚
, 
c
->
«me
Ë|| !°rcmp(
i‚ame
, c->ifname);

256 
m©ched
 |
cm©ched
;

258 i‡(!
cm©ched
 && (!
c
->
up°ªam_Àn
 || !
f
 || (‡!c->
up°ªam
 && f[-1] != 0)))

261 i‡(!
c
->
ign‹e
)

262 
	`c⁄fig_∑r£_öãrÁ˚
(
	`blobmsg_d©a
(
tb
[
IFACE_ATTR_DATA
]),

263 
	`blobmsg_d©a_Àn
(
tb
[
IFACE_ATTR_DATA
]), 
c
->
«me
, 
Ál£
);

266 i‡(!
m©ched
)

267 
	`c⁄fig_∑r£_öãrÁ˚
(
	`blobmsg_d©a
(
tb
[
IFACE_ATTR_DATA
]),

268 
	`blobmsg_d©a_Àn
(
tb
[
IFACE_ATTR_DATA
]), 
öãrÁ˚
, 
Ál£
);

270 
	}
}

274 
	mOBJ_ATTR_ID
,

275 
	mOBJ_ATTR_PATH
,

276 
	mOBJ_ATTR_MAX


279 c⁄° 
blobmsg_pﬁicy
 
	gobj_©ås
[
OBJ_ATTR_MAX
] = {

280 [
OBJ_ATTR_ID
] = { .
«me
 = "id", .
	gty≥
 = 
BLOBMSG_TYPE_INT32
 },

281 [
OBJ_ATTR_PATH
] = { .
«me
 = "∑th", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

285 
	$h™dÀ_evít
(
_unu£d
 
ubus_c⁄ãxt
 *
˘x
, _unu£d 
ubus_evít_h™dÀr
 *
ev
,

286 
_unu£d
 c⁄° *
ty≥
, 
blob_©å
 *
msg
)

288 
blob_©å
 *
tb
[
OBJ_ATTR_MAX
];

289 
	`blobmsg_∑r£
(
obj_©ås
, 
OBJ_ATTR_MAX
, 
tb
, 
	`blob_d©a
(
msg
), 
	`blob_Àn
(msg));

291 i‡(!
tb
[
OBJ_ATTR_ID
] || !tb[
OBJ_ATTR_PATH
])

294 i‡(
	`°rcmp
(
	`blobmsg_gë_°rög
(
tb
[
OBJ_ATTR_PATH
]), "network.interface"))

297 
objid
 = 
	`blobmsg_gë_u32
(
tb
[
OBJ_ATTR_ID
]);

298 
	`upd©e_√tifd
(
åue
);

299 
	}
}

301 
ubus_evít_h™dÀr
 
	gevít_h™dÀr
 = { .
cb
 = 
h™dÀ_evít
 };

304 c⁄° * 
	$ubus_gë_i‚ame
(c⁄° *
«me
)

306 
blob_©å
 *
c
;

307 
ªm
;

309 i‡(!
dump
)

310  
NULL
;

312 
	`blobmsg_f‹_óch_©å
(
c
, 
dump
, 
ªm
) {

313 
blob_©å
 *
tb
[
IFACE_ATTR_MAX
];

314 
	`blobmsg_∑r£
(
iÁ˚_©ås
, 
IFACE_ATTR_MAX
, 
tb
, 
	`blobmsg_d©a
(
c
), 
	`blobmsg_d©a_Àn
(c));

316 i‡(!
tb
[
IFACE_ATTR_INTERFACE
] || 
	`°rcmp
(
«me
,

317 
	`blobmsg_gë_°rög
(
tb
[
IFACE_ATTR_INTERFACE
])))

320 i‡(
tb
[
IFACE_ATTR_IFNAME
])

321  
	`blobmsg_gë_°rög
(
tb
[
IFACE_ATTR_IFNAME
]);

324  
NULL
;

325 
	}
}

328 
boﬁ
 
	$ubus_has_¥efix
(c⁄° *
«me
, c⁄° *
i‚ame
)

330 
blob_©å
 *
c
, *
cur
;

331 
ªm
;

333 i‡(!
dump
)

334  
NULL
;

336 
	`blobmsg_f‹_óch_©å
(
c
, 
dump
, 
ªm
) {

337 
blob_©å
 *
tb
[
IFACE_ATTR_MAX
];

338 
	`blobmsg_∑r£
(
iÁ˚_©ås
, 
IFACE_ATTR_MAX
, 
tb
, 
	`blobmsg_d©a
(
c
), 
	`blobmsg_d©a_Àn
(c));

340 i‡(!
tb
[
IFACE_ATTR_INTERFACE
] || !tb[
IFACE_ATTR_IFNAME
])

343 i‡(
	`°rcmp
(
«me
, 
	`blobmsg_gë_°rög
(
tb
[
IFACE_ATTR_INTERFACE
])) ||

344 
	`°rcmp
(
i‚ame
, 
	`blobmsg_gë_°rög
(
tb
[
IFACE_ATTR_IFNAME
])))

347 i‡((
cur
 = 
tb
[
IFACE_ATTR_PREFIX
])) {

348 i‡(
	`blobmsg_ty≥
(
cur
Ë!
BLOBMSG_TYPE_ARRAY
 || !
	`blobmsg_check_©å
(cur, 
NULL
))

351 
blob_©å
 *
d
;

352 
dªm
;

353 
	`blobmsg_f‹_óch_©å
(
d
, 
cur
, 
dªm
) {

354  
åue
;

359  
Ál£
;

360 
	}
}

364 
	mADDR_ATTR_ADDR
,

365 
	mADDR_ATTR_CLASS
,

366 
	mADDR_ATTR_MAX


369 c⁄° 
blobmsg_pﬁicy
 
	gaddr_©ås
[
ADDR_ATTR_MAX
] = {

370 [
ADDR_ATTR_ADDR
] = { .
«me
 = "addªss", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

371 [
ADDR_ATTR_CLASS
] = { .
«me
 = "˛ass", .
	gty≥
 = 
BLOBMSG_TYPE_STRING
 },

374 
boﬁ
 
	$ubus_gë_˛ass
(c⁄° *
i‚ame
, c⁄° 
ö6_addr
 *
addr
, 
uöt16_t
 *
p˛ass
)

376 
blob_©å
 *
c
, *
cur
;

377 
ªm
;

379 i‡(!
dump
)

380  
Ál£
;

382 
	`blobmsg_f‹_óch_©å
(
c
, 
dump
, 
ªm
) {

383 
blob_©å
 *
tb
[
IFACE_ATTR_MAX
];

384 
	`blobmsg_∑r£
(
iÁ˚_©ås
, 
IFACE_ATTR_MAX
, 
tb
, 
	`blobmsg_d©a
(
c
), 
	`blobmsg_d©a_Àn
(c));

386 i‡(!
tb
[
IFACE_ATTR_IFNAME
])

389 i‡(
	`°rcmp
(
i‚ame
, 
	`blobmsg_gë_°rög
(
tb
[
IFACE_ATTR_IFNAME
])))

392 i‡((
cur
 = 
tb
[
IFACE_ATTR_ADDRESS
])) {

393 i‡(
	`blobmsg_ty≥
(
cur
Ë!
BLOBMSG_TYPE_ARRAY
 || !
	`blobmsg_check_©å
(cur, 
NULL
))

396 
blob_©å
 *
d
;

397 
dªm
;

398 
	`blobmsg_f‹_óch_©å
(
d
, 
cur
, 
dªm
) {

399 
blob_©å
 *
t
[
ADDR_ATTR_MAX
];

400 
	`blobmsg_∑r£
(
addr_©ås
, 
ADDR_ATTR_MAX
, 
t
, 
	`blobmsg_d©a
(
d
), 
	`blobmsg_d©a_Àn
(d));

402 i‡(!
t
[
ADDR_ATTR_ADDR
] || !t[
ADDR_ATTR_CLASS
])

405 c⁄° *
addrs
 = 
	`blobmsg_gë_°rög
(
t
[
ADDR_ATTR_ADDR
]);

406 c⁄° *
˛ass
 = 
	`blobmsg_gë_°rög
(
t
[
ADDR_ATTR_CLASS
]);

408 
ö6_addr
 
ù6addr
;

409 
	`öë_±⁄
(
AF_INET6
, 
addrs
, &
ù6addr
);

411 i‡(
	`IN6_ARE_ADDR_EQUAL
(&
ù6addr
, 
addr
)) {

412 *
p˛ass
 = 
	`©oi
(
˛ass
);

413  
åue
;

418  
Ál£
;

421  
Ál£
;

422 
	}
}

425 
	$öô_ubus
()

427 i‡(!(
ubus
 = 
	`ubus_c⁄√˘
(
NULL
))) {

428 
	`sy¶og
(
LOG_ERR
, "U«bÀÅÿc⁄√˘Åÿubus: %s", 
	`°ªº‹
(
î∫o
));

432 
√tifd
.
cb
 = 
h™dÀ_upd©e
;

433 
	`ubus_ªgi°î_subs¸ibî
(
ubus
, &
√tifd
);

435 
	`ubus_add_ulo›
(
ubus
);

436 
	`ubus_add_obje˘
(
ubus
, &
maö_obje˘
);

437 
	`ubus_ªgi°î_evít_h™dÀr
(
ubus
, &
evít_h™dÀr
, "ubus.object.add");

438 i‡(!
	`ubus_lookup_id
(
ubus
, "√tw‹k.öãrÁ˚", &
objid
))

439 
	`upd©e_√tifd
(
åue
);

442 
	}
}

	@
1
.
0
13
970
/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/config.c
/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/dhcpv4.c
/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/dhcpv4.h
/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/dhcpv6-ia.c
/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/dhcpv6.c
/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/dhcpv6.h
/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/ndp.c
/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/ndp.h
/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/odhcpd.c
/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/odhcpd.h
/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/router.c
/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/router.h
/home/gaojing/123/openwrt/customer/packages/others/odhcpd/src/src/ubus.c
